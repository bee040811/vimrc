!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
$DOTVIM	bundle/colorselector/plugin/colorselector.vim	/^    let $DOTVIM = $HOME."\/.vim"$/;"	v
$DOTVIM	bundle/colorselector/plugin/colorselector.vim	/^    let $DOTVIM = $VIM."\/vimfiles"$/;"	v
<c-r><tab>	bundle/snipmate.vim/after/plugin/snipMate.vim	/^ino <silent> <c-r><tab> <c-r>=ShowAvailableSnips()<cr>$/;"	m
<s-tab>	bundle/snipmate.vim/after/plugin/snipMate.vim	/^ino <silent> <s-tab> <c-r>=BackwardsSnippet()<cr>$/;"	m
<tab>	bundle/snipmate.vim/after/plugin/snipMate.vim	/^ino <silent> <tab> <c-r>=TriggerSnippet()<cr>$/;"	m
ABOVE_NORMAL_PRIORITY_CLASS	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^ABOVE_NORMAL_PRIORITY_CLASS = 0x00008000$/;"	v
AddDivider	bundle/vim-powerline/autoload/Pl/Parser.vim	/^function! s:AddDivider(text, side, mode, colors, prev, curr, next) " {{{$/;"	f
AddLmIfMathH	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:AddLmIfMathH(compiling_info) " {{{2$/;"	f
AddScopedTags	bundle/tagbar/autoload/tagbar.vim	/^function! s:AddScopedTags(tags, processedtags, parent, depth,$/;"	f
Asyncer	bundle/L9/autoload/l9/async.py	/^class Asyncer:$/;"	c	inherits:
AutoCloseOff	bundle/AutoClose--Alves/plugin/autoclose.vim	/^command! AutoCloseOff :let s:running = 0$/;"	c
AutoCloseOn	bundle/AutoClose--Alves/plugin/autoclose.vim	/^command! AutoCloseOn :let s:running = 1$/;"	c
AutoCloseToggle	bundle/AutoClose--Alves/plugin/autoclose.vim	/^command! AutoCloseToggle :call s:ToggleAutoClose()$/;"	c
AutoUpdate	bundle/tagbar/autoload/tagbar.vim	/^function! s:AutoUpdate(fname, force) abort$/;"	f
BELOW_NORMAL_PRIORITY_CLASS	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^BELOW_NORMAL_PRIORITY_CLASS = 0x00004000$/;"	v
Backspace	bundle/AutoClose--Alves/plugin/autoclose.vim	/^function! s:Backspace()$/;"	f
BackwardsSnippet	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! BackwardsSnippet()$/;"	f
BaseTag.New	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.New(name) abort dict$/;"	f
BaseTag._getPrefix	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag._getPrefix() abort dict$/;"	f
BaseTag._init	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag._init(name) abort dict$/;"	f
BaseTag.closeFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.closeFold() abort dict$/;"	f
BaseTag.getClosedParentTline	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.getClosedParentTline() abort dict$/;"	f
BaseTag.getPrototype	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.getPrototype(short) abort dict$/;"	f
BaseTag.initFoldState	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.initFoldState() abort dict$/;"	f
BaseTag.isFoldable	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isFoldable() abort dict$/;"	f
BaseTag.isFolded	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isFolded() abort dict$/;"	f
BaseTag.isKindheader	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isKindheader() abort dict$/;"	f
BaseTag.isNormalTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isNormalTag() abort dict$/;"	f
BaseTag.isPseudoTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isPseudoTag() abort dict$/;"	f
BaseTag.openFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.openFold() abort dict$/;"	f
BaseTag.openParents	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.openParents() abort dict$/;"	f
BaseTag.setFolded	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.setFolded(folded) abort dict$/;"	f
Blame	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Blame(bang,line1,line2,count,args) abort$/;"	f
BlameCommit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameCommit(cmd) abort$/;"	f
BlameJump	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
BlameSyntax	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
Bookmark.AddBookmark	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.GetNodeForName	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot)$/;"	f
Bookmark.GetSelected	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.Sort	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.Sort()$/;"	f
Bookmark.ToRoot	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.ToRoot(name)$/;"	f
Bookmark.Write	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.activate(...)$/;"	f
Bookmark.compareTo	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.compareTo(otherbookmark)$/;"	f
Bookmark.delete	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.getNode(searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.open	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.open(...)$/;"	f
Bookmark.openInNewTab	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.toRoot()$/;"	f
Bookmark.validate	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.validate()$/;"	f
Browse	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Browse(bang,line1,count,...) abort$/;"	f
BufReadIndex	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndex()$/;"	f
BufReadIndexFile	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndexFile()$/;"	f
BufReadObject	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadObject()$/;"	f
BufWriteIndexFile	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufWriteIndexFile()$/;"	f
BuildTabStops	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:BuildTabStops(snip, lnum, col, indent)$/;"	f
CAPSLOCK_ON	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^CAPSLOCK_ON = 0x0080$/;"	v
CHAR_INFO	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^class CHAR_INFO(Structure):$/;"	c	inherits:Structure
CHAR_UNION	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^class CHAR_UNION(Union):$/;"	c	inherits:Union
CONFIG_FILE	bundle/colorselector/Makefile	/^CONFIG_FILE=config.mk$/;"	m
CONQUE_COLOR_SEQUENCE	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_COLOR_SEQUENCE = ($/;"	v
CONQUE_CTL	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_CTL = {$/;"	v
CONQUE_ESCAPE	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_ESCAPE = {$/;"	v
CONQUE_ESCAPE_CHARSET	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_ESCAPE_CHARSET = {$/;"	v
CONQUE_ESCAPE_HASH	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_ESCAPE_HASH = {$/;"	v
CONQUE_ESCAPE_PLAIN	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_ESCAPE_PLAIN = {$/;"	v
CONQUE_ESCAPE_QUESTION	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_ESCAPE_QUESTION = {$/;"	v
CONQUE_FONT	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_FONT = {$/;"	v
CONQUE_GRAPHICS_SET	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_GRAPHICS_SET = [$/;"	v
CONQUE_MAX_SYNTAX_LINES	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_MAX_SYNTAX_LINES = 200$/;"	v
CONQUE_PYTHON_VERSION	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_PYTHON_VERSION = sys.version_info[0]$/;"	v
CONQUE_PYTHON_VERSION	bundle/conque_2.3/autoload/conque_term/conque_sole_shared_memory.py	/^CONQUE_PYTHON_VERSION = sys.version_info[0]$/;"	v
CONQUE_SEQ_REGEX	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX = re.compile("(\\x1b\\[?\\??#?[0-9;]*[a-zA-Z0-9@=>]|\\x1b\\][0-9];.*?\\x07|[\\x01-\\x0f]|\\x1b\\([AB0])")$/;"	v
CONQUE_SEQ_REGEX_CHAR	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_CHAR = re.compile("^\\x1b[()]")$/;"	v
CONQUE_SEQ_REGEX_CSI	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_CSI = re.compile("^\\x1b\\[")$/;"	v
CONQUE_SEQ_REGEX_CTL	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_CTL = re.compile("^[\\x01-\\x0f]$")$/;"	v
CONQUE_SEQ_REGEX_ESC	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_ESC = re.compile("^\\x1b.$")$/;"	v
CONQUE_SEQ_REGEX_HASH	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_HASH = re.compile("^\\x1b#")$/;"	v
CONQUE_SEQ_REGEX_TITLE	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_TITLE = re.compile("^\\x1b\\]")$/;"	v
CONQUE_SOLE_BUFFER_LENGTH	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_BUFFER_LENGTH = 1000$/;"	v
CONQUE_SOLE_BUFFER_REDRAW	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_BUFFER_REDRAW = 500$/;"	v
CONQUE_SOLE_COMMANDS_SIZE	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_COMMANDS_SIZE = 255$/;"	v
CONQUE_SOLE_INPUT_SIZE	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_INPUT_SIZE = 1000$/;"	v
CONQUE_SOLE_MEM_REDRAW	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_MEM_REDRAW = 1000$/;"	v
CONQUE_SOLE_RESCROLL_SIZE	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_RESCROLL_SIZE = 255$/;"	v
CONQUE_SOLE_RESIZE_SIZE	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_RESIZE_SIZE = 255$/;"	v
CONQUE_SOLE_SCREEN_REDRAW	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_SCREEN_REDRAW = 50$/;"	v
CONQUE_SOLE_STATS_SIZE	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_STATS_SIZE = 1000$/;"	v
CONQUE_TABLE_OUTPUT	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_TABLE_OUTPUT = re.compile("^\\s*\\|\\s.*\\s\\|\\s*$|^\\s*\\+[=+-]+\\+\\s*$")$/;"	v
CONQUE_VIM_ENCODING	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^    CONQUE_VIM_ENCODING = 'utf-8'$/;"	v
CONQUE_VIM_ENCODING	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^    CONQUE_VIM_ENCODING = vim.eval('&encoding')$/;"	v
CONQUE_VK_ATTR_CTRL_PRESSED	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_VK_ATTR_CTRL_PRESSED = u('1024')$/;"	v
CONQUE_WIN32_REGEX_ATTR	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_WIN32_REGEX_ATTR = re.compile("((.)\\\\2*)", re.DOTALL)$/;"	v
CONQUE_WIN32_REGEX_VK	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^CONQUE_WIN32_REGEX_VK = re.compile("(\\x1b\\[[0-9;]+VK)")$/;"	v
CONQUE_WINDOWS_VK	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^CONQUE_WINDOWS_VK = {$/;"	v
CONQUE_WINDOWS_VK_ENHANCED	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^CONQUE_WINDOWS_VK_ENHANCED = {$/;"	v
CONQUE_WINDOWS_VK_INV	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^CONQUE_WINDOWS_VK_INV = dict([v, k] for k, v in CONQUE_WINDOWS_VK.items())$/;"	v
CONSOLE_SCREEN_BUFFER_INFO	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^class CONSOLE_SCREEN_BUFFER_INFO(Structure):$/;"	c	inherits:Structure
COORD	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^class COORD(Structure):$/;"	c	inherits:Structure
CREATE_BREAKAWAY_FROM_JOB	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^CREATE_BREAKAWAY_FROM_JOB = 0x01000000$/;"	v
CREATE_DEFAULT_ERROR_MODE	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^CREATE_DEFAULT_ERROR_MODE = 0x04000000$/;"	v
CREATE_NEW_CONSOLE	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^CREATE_NEW_CONSOLE = 0x00000010$/;"	v
CREATE_NEW_PROCESS_GROUP	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^CREATE_NEW_PROCESS_GROUP = 0x00000200$/;"	v
CREATE_NO_WINDOW	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^CREATE_NO_WINDOW = 0x08000000$/;"	v
CREATE_PRESERVE_CODE_AUTHZ_LEVEL	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^CREATE_PRESERVE_CODE_AUTHZ_LEVEL = 0x02000000$/;"	v
CREATE_PROTECTED_PROCESS	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^CREATE_PROTECTED_PROCESS = 0x00040000$/;"	v
CREATE_SEPARATE_WOW_VDM	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^CREATE_SEPARATE_WOW_VDM = 0x00000800$/;"	v
CREATE_SHARED_WOW_VDM	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^CREATE_SHARED_WOW_VDM = 0x00001000$/;"	v
CREATE_SUSPENDED	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^CREATE_SUSPENDED = 0x00000004$/;"	v
CREATE_UNICODE_ENVIRONMENT	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^CREATE_UNICODE_ENVIRONMENT = 0x00000400$/;"	v
CURL_OPT	bundle/colorselector/Makefile	/^CURL_OPT=$/;"	m
CheckConditions	bundle/vim-powerline/autoload/Pl/Segment.vim	/^function! s:CheckConditions(params) " {{{$/;"	f
CheckExCtagsVersion	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckExCtagsVersion(output) abort$/;"	f
CheckFTCtags	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckFTCtags(bin, ftype) abort$/;"	f
CheckForExCtags	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckForExCtags(silent) abort$/;"	f
CheckMouseClick	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckMouseClick() abort$/;"	f
CheckPair	bundle/AutoClose--Alves/plugin/autoclose.vim	/^function! s:CheckPair(char)$/;"	f
ChooseSnippet	bundle/snipmate.vim/plugin/snipMate.vim	/^fun s:ChooseSnippet(scope, trigger)$/;"	f
Close	bundle/snipmate.vim/ftplugin/html_snip_helper.vim	/^fun! Close()$/;"	f
CloseFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:CloseFold() abort$/;"	f
ClosePair	bundle/AutoClose--Alves/plugin/autoclose.vim	/^function! s:ClosePair(char)$/;"	f
CloseWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:CloseWindow() abort$/;"	f
Commit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Commit(args) abort$/;"	f
CommitComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
CompareByKind	bundle/tagbar/autoload/tagbar.vim	/^function! s:CompareByKind(tag1, tag2) abort$/;"	f
CompareByLine	bundle/tagbar/autoload/tagbar.vim	/^function! s:CompareByLine(tag1, tag2) abort$/;"	f
CompareCompilerPriority	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:CompareCompilerPriority(compiler1, compiler2) " {{{1$/;"	f
CompileInternal	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:CompileInternal(arg_list, async) " compile only {{{1$/;"	f
CompileRunInternal	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:CompileRunInternal(comp_param, async) " {{{1$/;"	f
Conque	bundle/conque_2.3/autoload/conque_term/conque.py	/^class Conque:$/;"	c	inherits:
ConqueScreen	bundle/conque_2.3/autoload/conque_term/conque_screen.py	/^class ConqueScreen(object):$/;"	c	inherits:object
ConqueSole	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^class ConqueSole(Conque):$/;"	c	inherits:Conque
ConqueSoleSharedMemory	bundle/conque_2.3/autoload/conque_term/conque_sole_shared_memory.py	/^class ConqueSoleSharedMemory():$/;"	c	inherits:
ConqueSoleSubprocess	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^class ConqueSoleSubprocess():$/;"	c	inherits:
ConqueSoleWrapper	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^class ConqueSoleWrapper():$/;"	c	inherits:
ConqueSubprocess	bundle/conque_2.3/autoload/conque_term/conque_subprocess.py	/^class ConqueSubprocess:$/;"	c	inherits:
ConqueTerm	bundle/conque_2.3/plugin/conque_term.vim	/^command! -nargs=+ -complete=shellcmd ConqueTerm call conque_term#open(<q-args>)$/;"	c
ConqueTermSplit	bundle/conque_2.3/plugin/conque_term.vim	/^command! -nargs=+ -complete=shellcmd ConqueTermSplit call conque_term#open(<q-args>, ['belowright split'])$/;"	c
ConqueTermTab	bundle/conque_2.3/plugin/conque_term.vim	/^command! -nargs=+ -complete=shellcmd ConqueTermTab call conque_term#open(<q-args>, ['tabnew'])$/;"	c
ConqueTermVSplit	bundle/conque_2.3/plugin/conque_term.vim	/^command! -nargs=+ -complete=shellcmd ConqueTermVSplit call conque_term#open(<q-args>, ['belowright vsplit'])$/;"	c
CorrectFocusOnStartup	bundle/tagbar/autoload/tagbar.vim	/^function! s:CorrectFocusOnStartup() abort$/;"	f
Count	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:Count(haystack, needle)$/;"	f
CreateAutocmds	bundle/vim-powerline/plugin/Powerline.vim	/^	function! s:CreateAutocmds()$/;"	f
CreateAutocommands	bundle/tagbar/autoload/tagbar.vim	/^function! s:CreateAutocommands() abort$/;"	f
CreateCoordKeyDict	bundle/vim-easymotion/autoload/EasyMotion.vim	/^		function! s:CreateCoordKeyDict(groups, ...)$/;"	f
CreatePseudoTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:CreatePseudoTag(name, parent, scope, typeinfo, fileinfo) abort$/;"	f
CreateTypeKinddict	bundle/tagbar/autoload/tagbar.vim	/^function! s:CreateTypeKinddict(type) abort$/;"	f
Cterm2GUI	bundle/vim-powerline/autoload/Pl/Hi.vim	/^function! s:Cterm2GUI(cterm) " {{{$/;"	f
DETACHED_PROCESS	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^DETACHED_PROCESS = 0x00000008$/;"	v
DIRS	bundle/colorselector/Makefile	/^DIRS=`ls -1F | grep \/ | sed -e 's\/\\\/\/\/'`$/;"	m
DefineSnips	bundle/snipmate.vim/plugin/snipMate.vim	/^fun s:DefineSnips(dir, aliasft, realft)$/;"	f
Detect	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Detect(path)$/;"	f
DetectCompiler	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:DetectCompiler(lang_name) " {{{1$/;"	f
DetectCompilerGenerally	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:DetectCompilerGenerally(compiling_command) " {{{2$/;"	f
DetectFiletype	bundle/tagbar/autoload/tagbar.vim	/^function! s:DetectFiletype(bufnr) abort$/;"	f
DetectGmake	bundle/SingleCompile/autoload/SingleCompile/templates/make.vim	/^function! s:DetectGmake(not_used_arg)$/;"	f
Diff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Diff(bang,...)$/;"	f
DirComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
ENHANCED_KEY	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^ENHANCED_KEY = 0x0100$/;"	v
EXTENDED_STARTUPINFO_PRESENT	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^EXTENDED_STARTUPINFO_PRESENT = 0x00080000$/;"	v
EasyMotion	bundle/vim-easymotion/autoload/EasyMotion.vim	/^	function! s:EasyMotion(regexp, direction, visualmode, mode) " {{{$/;"	f
EasyMotion#E	bundle/vim-easymotion/autoload/EasyMotion.vim	/^	function! EasyMotion#E(visualmode, direction) " {{{$/;"	f
EasyMotion#EW	bundle/vim-easymotion/autoload/EasyMotion.vim	/^	function! EasyMotion#EW(visualmode, direction) " {{{$/;"	f
EasyMotion#F	bundle/vim-easymotion/autoload/EasyMotion.vim	/^	function! EasyMotion#F(visualmode, direction) " {{{$/;"	f
EasyMotion#InitHL	bundle/vim-easymotion/autoload/EasyMotion.vim	/^	function! EasyMotion#InitHL(group, colors) " {{{$/;"	f
EasyMotion#InitMappings	bundle/vim-easymotion/autoload/EasyMotion.vim	/^	function! EasyMotion#InitMappings(motions) "{{{$/;"	f
EasyMotion#InitOptions	bundle/vim-easymotion/autoload/EasyMotion.vim	/^	function! EasyMotion#InitOptions(options) " {{{$/;"	f
EasyMotion#JK	bundle/vim-easymotion/autoload/EasyMotion.vim	/^	function! EasyMotion#JK(visualmode, direction) " {{{$/;"	f
EasyMotion#Search	bundle/vim-easymotion/autoload/EasyMotion.vim	/^	function! EasyMotion#Search(visualmode, direction) " {{{$/;"	f
EasyMotion#T	bundle/vim-easymotion/autoload/EasyMotion.vim	/^	function! EasyMotion#T(visualmode, direction) " {{{$/;"	f
EasyMotion#WB	bundle/vim-easymotion/autoload/EasyMotion.vim	/^	function! EasyMotion#WB(visualmode, direction) " {{{$/;"	f
EasyMotion#WBW	bundle/vim-easymotion/autoload/EasyMotion.vim	/^	function! EasyMotion#WBW(visualmode, direction) " {{{$/;"	f
EasyMotionInitHL	bundle/vim-easymotion/plugin/EasyMotion.vim	/^			augroup EasyMotionInitHL$/;"	a
Edit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Edit(cmd,bang,...) abort$/;"	f
EditComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
EditCurrentColorS	bundle/colorselector/plugin/colorselector.vim	/^com! EditCurrentColorS :exec printf('tabe $DOTVIM\/colors\/%s.vim',colors_name)$/;"	c
EditRunComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:EditRunComplete(A,L,P) abort$/;"	f
EscapeCtagsCmd	bundle/tagbar/autoload/tagbar.vim	/^function! s:EscapeCtagsCmd(ctags_bin, args, ...) abort$/;"	f
ExecuteCtags	bundle/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtags(ctags_cmd) abort$/;"	f
ExecuteCtagsOnFile	bundle/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtagsOnFile(fname, ftype) abort$/;"	f
ExecuteInTree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
Executor	bundle/L9/autoload/l9/async.py	/^class Executor:$/;"	c	inherits:
Expand	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:Expand(str, ...) " expand the string{{{2$/;"	f
ExtractSnips	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ExtractSnips(dir, ft)$/;"	f
ExtractSnipsFile	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ExtractSnipsFile(file, ft)$/;"	f
FILES	bundle/colorselector/Makefile	/^FILES=`ls -1 | grep '.vim$$'`$/;"	m
FILL_CHAR	bundle/conque_2.3/autoload/conque_term/conque_sole_shared_memory.py	/^    FILL_CHAR = None$/;"	v	class:ConqueSoleSharedMemory
FOCUS_EVENT	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^FOCUS_EVENT = 0x0010$/;"	v
FOCUS_EVENT_RECORD	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^class FOCUS_EVENT_RECORD(Structure):$/;"	c	inherits:Structure
FileInfo.New	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.New(fname, ftype) abort dict$/;"	f
FileInfo.clearOldFolds	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.clearOldFolds() abort dict$/;"	f
FileInfo.closeKindFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.closeKindFold(kind) abort dict$/;"	f
FileInfo.openKindFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.openKindFold(kind) abort dict$/;"	f
FileInfo.reset	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.reset() abort dict$/;"	f
FileInfo.sortTags	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.sortTags() abort dict$/;"	f
FileRead	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:FileRead()$/;"	f
Filename	bundle/snipmate.vim/autoload/snipMate.vim	/^fun! Filename(...)$/;"	f
Findcomplete	autoload/pathogen.vim	/^function! s:Findcomplete(A,L,P) " {{{1$/;"	f
FinishCommit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:FinishCommit()$/;"	f
FufGlobal	bundle/FuzzyFinder/autoload/fuf.vim	/^augroup FufGlobal$/;"	a
GF	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GetChar	bundle/vim-easymotion/autoload/EasyMotion.vim	/^	function! s:GetChar() " {{{$/;"	f
GetCompilerSingleTemplate	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:GetCompilerSingleTemplate(lang_name, compiler_name, key) " {{{1$/;"	f
GetCurrentShell	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:GetCurrentShell() " {{{2$/;"	f
GetCurrentSyntaxRegion	bundle/AutoClose--Alves/plugin/autoclose.vim	/^function! s:GetCurrentSyntaxRegion()$/;"	f
GetCurrentSyntaxRegionIf	bundle/AutoClose--Alves/plugin/autoclose.vim	/^function! s:GetCurrentSyntaxRegionIf(char)$/;"	f
GetNearbyTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetNearbyTag(all, ...) abort$/;"	f
GetNextChar	bundle/AutoClose--Alves/plugin/autoclose.vim	/^function! s:GetNextChar()$/;"	f
GetOutputPython	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^function! s:GetOutputPython() " {{{2$/;"	f
GetPrevChar	bundle/AutoClose--Alves/plugin/autoclose.vim	/^function! s:GetPrevChar()$/;"	f
GetSearchChar	bundle/vim-easymotion/autoload/EasyMotion.vim	/^	function! s:GetSearchChar(visualmode) " {{{$/;"	f
GetShellLastExitCodeVariable	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:GetShellLastExitCodeVariable() " {{{2$/;"	f
GetShellPipe	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:GetShellPipe(tee_used) " {{{2$/;"	f
GetSnippet	bundle/snipmate.vim/plugin/snipMate.vim	/^fun s:GetSnippet(word, scope)$/;"	f
GetSnippets	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! GetSnippets(dir, filetypes)$/;"	f
GetSupportedFiletypes	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetSupportedFiletypes() abort$/;"	f
GetTagInfo	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetTagInfo(linenr, ignorepseudo) abort$/;"	f
Git	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Git(bang,cmd) abort$/;"	f
GitComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:GitComplete(A,L,P) abort$/;"	f
GotoNextToplevelTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoNextToplevelTag(direction) abort$/;"	f
Grep	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Grep(cmd,bang,arg) abort$/;"	f
GroupingAlgorithmOriginal	bundle/vim-easymotion/autoload/EasyMotion.vim	/^		function! s:GroupingAlgorithmOriginal(targets, keys)$/;"	f
GroupingAlgorithmSCTree	bundle/vim-easymotion/autoload/EasyMotion.vim	/^		function! s:GroupingAlgorithmSCTree(targets, keys)$/;"	f
HIGH_PRIORITY_CLASS	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^HIGH_PRIORITY_CLASS = 0x00000080$/;"	v
Helptags	autoload/pathogen.vim	/^command! -bar Helptags :call pathogen#helptags()$/;"	c
HiLink	bundle/python-syntax/syntax/python.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	bundle/python-syntax/syntax/python.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	bundle/python-syntax/syntax/python3.0.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	bundle/python-syntax/syntax/python3.0.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HighlightTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:HighlightTag(openfolds, ...) abort$/;"	f
HlCreate	bundle/vim-powerline/autoload/Pl/Parser.vim	/^function! s:HlCreate(hl) " {{{$/;"	f
HlExists	bundle/vim-powerline/autoload/Pl/Parser.vim	/^function! s:HlExists(hl) " {{{$/;"	f
HtmlHiLink	bundle/vim-markdown/syntax/markdown.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	bundle/vim-markdown/syntax/markdown.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
IDLE_PRIORITY_CLASS	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^IDLE_PRIORITY_CLASS = 0x00000040$/;"	v
INHERIT_PARENT_AFFINITY	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^INHERIT_PARENT_AFFINITY = 0x00010000$/;"	v
INPUT_RECORD	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^class INPUT_RECORD(Structure):$/;"	c	inherits:Structure
INPUT_UNION	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^class INPUT_UNION(Union):$/;"	c	inherits:Union
Init	bundle/tagbar/autoload/tagbar.vim	/^function! s:Init(silent) abort$/;"	f
InitTypes	bundle/tagbar/autoload/tagbar.vim	/^function! s:InitTypes() abort$/;"	f
InitWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:InitWindow(autoclose) abort$/;"	f
Initialize	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:Initialize() "{{{1$/;"	f
InitializePython	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^function! s:InitializePython() " {{{2$/;"	f
InsertPair	bundle/AutoClose--Alves/plugin/autoclose.vim	/^function! s:InsertPair(char)$/;"	f
IsEmptyPair	bundle/AutoClose--Alves/plugin/autoclose.vim	/^function! s:IsEmptyPair()$/;"	f
IsForbidden	bundle/AutoClose--Alves/plugin/autoclose.vim	/^function! s:IsForbidden(char)$/;"	f
IsLanguageInterpreting	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:IsLanguageInterpreting(filetype_name) "{{{1$/;"	f
IsRunningPython	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^function! s:IsRunningPython() " {{{2$/;"	f
IsShellCsh	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:IsShellCsh(shell_name) " is the shell C Shell? {{2$/;"	f
IsShellSh	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:IsShellSh(shell_name) " is the shell Bourne shell? {{2$/;"	f
IsValidFile	bundle/tagbar/autoload/tagbar.vim	/^function! s:IsValidFile(fname, ftype) abort$/;"	f
JumpInit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:JumpInit() abort$/;"	f
JumpToTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:JumpToTag(stay_in_tagbar) abort$/;"	f
KEY_EVENT	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^KEY_EVENT = 0x0001$/;"	v
KEY_EVENT_RECORD	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^class KEY_EVENT_RECORD(Structure):$/;"	c	inherits:Structure
KeyMap.Add	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
KeyMap.All	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Create	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.FindFor	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
KeyMap.Invoke	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
KeyMap.Remove	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
KeyMap.bind	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.bind()$/;"	f
KeyMap.invoke	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.invoke(...)$/;"	f
KeyMap_Invoke	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap_Invoke(key)$/;"	f
KindheaderTag.closeFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.closeFold() abort dict$/;"	f
KindheaderTag.getPrototype	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.getPrototype(short) abort dict$/;"	f
KindheaderTag.isFoldable	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isFoldable() abort dict$/;"	f
KindheaderTag.isFolded	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isFolded() abort dict$/;"	f
KindheaderTag.isKindheader	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isKindheader() abort dict$/;"	f
KindheaderTag.openFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.openFold() abort dict$/;"	f
KindheaderTag.toggleFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.toggleFold() abort dict$/;"	f
L9Assert	bundle/L9/plugin/l9.vim	/^  command -nargs=* L9Assert :$/;"	c
L9Assert	bundle/L9/plugin/l9.vim	/^  command -nargs=* L9Assert call eval((<args>) ? 0 : s:handleFailedAssersion(<q-args>))$/;"	c
L9GrepBuffer	bundle/L9/plugin/l9.vim	/^command -nargs=? L9GrepBuffer    call l9#grepBuffers(<q-args>, [bufnr('%')])$/;"	c
L9GrepBufferAll	bundle/L9/plugin/l9.vim	/^command -nargs=? L9GrepBufferAll call l9#grepBuffers(<q-args>, range(1, bufnr('$')))$/;"	c
L9Timer	bundle/L9/plugin/l9.vim	/^  command -nargs=1 L9Timer :$/;"	c
L9Timer	bundle/L9/plugin/l9.vim	/^  command -nargs=1 L9Timer call s:timerBegin(<q-args>)$/;"	c
L9TimerDump	bundle/L9/plugin/l9.vim	/^  command -nargs=0 L9TimerDump :$/;"	c
L9TimerDump	bundle/L9/plugin/l9.vim	/^  command -nargs=0 L9TimerDump call s:timerDump()$/;"	c
L9TimerStop	bundle/L9/plugin/l9.vim	/^  command -nargs=0 L9TimerStop :$/;"	c
L9TimerStop	bundle/L9/plugin/l9.vim	/^  command -nargs=0 L9TimerStop call s:timerStop()$/;"	c
LEFT_ALT_PRESSED	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^LEFT_ALT_PRESSED = 0x0002$/;"	v
LEFT_CTRL_PRESSED	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^LEFT_CTRL_PRESSED = 0x0008$/;"	v
LPBYTE	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^LPBYTE = POINTER(c_ubyte)$/;"	v
LPTSTR	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^LPTSTR = POINTER(c_char)$/;"	v
LoadUserTypeDefs	bundle/tagbar/autoload/tagbar.vim	/^function! s:LoadUserTypeDefs(...) abort$/;"	f
Log	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Log(cmd,...)$/;"	f
LogDebugMessage	bundle/tagbar/autoload/tagbar.vim	/^function! s:LogDebugMessage(msg) abort$/;"	f
MEMORY_BASIC_INFORMATION	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^class MEMORY_BASIC_INFORMATION(Structure):$/;"	c	inherits:Structure
MENU_EVENT	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^MENU_EVENT = 0x0008$/;"	v
MENU_EVENT_RECORD	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^class MENU_EVENT_RECORD(Structure):$/;"	c	inherits:Structure
MKFILES	bundle/colorselector/Makefile	/^MKFILES=Makefile `ls -1 | grep '.mk$$'`$/;"	m
MOUSE_EVENT	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^MOUSE_EVENT = 0x0002$/;"	v
MOUSE_EVENT_RECORD	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^class MOUSE_EVENT_RECORD(Structure):$/;"	c	inherits:Structure
MakeSnip	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! MakeSnip(scope, trigger, content, ...)$/;"	f
MapKeys	bundle/tagbar/autoload/tagbar.vim	/^function! s:MapKeys() abort$/;"	f
MenuController.New	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.showMenu	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
Message	bundle/vim-easymotion/autoload/EasyMotion.vim	/^	function! s:Message(message) " {{{$/;"	f
Move	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Move(force,destination)$/;"	f
MoveComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:MoveComplete(A,L,P)$/;"	f
NAME	bundle/colorselector/Makefile	/^NAME=`basename \\`pwd\\``$/;"	m
NERDTree	bundle/nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTree :call s:initNerdTree('<args>')$/;"	c
NERDTreeAddKeyMap	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddSubmenu	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeClose	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeClose :call s:closeTreeIfOpen()$/;"	c
NERDTreeCopyNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeDeleteNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeFind	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeFind call s:findAndRevealPath()$/;"	c
NERDTreeFocus	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeFocus call NERDTreeFocus()$/;"	c
NERDTreeFocus	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeFromBookmark	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=1 -complete=customlist,s:completeBookmarks -bar NERDTreeFromBookmark call s:initNerdTree('<args>')$/;"	c
NERDTreeHijackNetrw	bundle/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeMirror	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeMirror call s:initNerdTreeMirror()$/;"	c
NERDTreeMoveNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRender	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealInFinder	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeToggle	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTreeToggle :call s:toggle('<args>')$/;"	c
NORMAL_PRIORITY_CLASS	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^NORMAL_PRIORITY_CLASS = 0x00000020$/;"	v
NUMLOCK_ON	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^NUMLOCK_ON = 0x0020$/;"	v
NeoComplCacheDisable	bundle/neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheDisable$/;"	c
NeoComplCacheEnable	bundle/neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheEnable$/;"	c
NeoComplCacheLock	bundle/neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheLock$/;"	c
NeoComplCacheLockSource	bundle/neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=1 -bar NeoComplCacheLockSource$/;"	c
NeoComplCacheSetFileType	bundle/neocomplcache/plugin/neocomplcache.vim	/^  command! -nargs=1 -bar -complete=filetype NeoComplCacheSetFileType$/;"	c
NeoComplCacheSetFileType	bundle/neocomplcache/plugin/neocomplcache.vim	/^  command! -nargs=1 -bar NeoComplCacheSetFileType$/;"	c
NeoComplCacheToggle	bundle/neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheToggle$/;"	c
NeoComplCacheUnlock	bundle/neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheUnlock$/;"	c
NeoComplCacheUnlockSource	bundle/neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=1 -bar NeoComplCacheUnlockSource$/;"	c
NormalTag.getPrototype	bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.getPrototype(short) abort dict$/;"	f
NormalTag.isNormalTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.isNormalTag() abort dict$/;"	f
NormalTag.str	bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.str(longsig, full) abort dict$/;"	f
NormalTag.strfmt	bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.strfmt() abort dict$/;"	f
OpenFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenFold() abort$/;"	f
OpenParents	bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenParents(...) abort$/;"	f
OpenWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenWindow(flags) abort$/;"	f
Opener.New	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Opener.New(path, opts)$/;"	f
Opener._checkToCloseTree	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
Opener._gotoTargetWin	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
Opener._newSplit	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Opener._newSplit()$/;"	f
Opener._newVSplit	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Opener._newVSplit()$/;"	f
Opener._openDirectory	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Opener._openDirectory(node)$/;"	f
Opener._openFile	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Opener._openFile()$/;"	f
Opener._previousWindow	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Opener._previousWindow()$/;"	f
Opener._restoreCursorPos	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
Opener._reuseWindow	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Opener._reuseWindow()$/;"	f
Opener._saveCursorPos	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Opener._saveCursorPos()$/;"	f
Opener.open	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Opener.open(target)$/;"	f
PROCESS_CREATE_PROCESS	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^PROCESS_CREATE_PROCESS = 0x0080$/;"	v
PROCESS_CREATE_THREAD	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^PROCESS_CREATE_THREAD = 0x0002$/;"	v
PROCESS_DUP_HANDLE	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^PROCESS_DUP_HANDLE = 0x0040$/;"	v
PROCESS_INFORMATION	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^class PROCESS_INFORMATION(Structure):$/;"	c	inherits:Structure
PROCESS_QUERY_INFORMATION	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^PROCESS_QUERY_INFORMATION = 0x0400$/;"	v
PROCESS_QUERY_LIMITED_INFORMATION	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^PROCESS_QUERY_LIMITED_INFORMATION = 0x1000$/;"	v
PROCESS_SET_INFORMATION	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^PROCESS_SET_INFORMATION = 0x0200$/;"	v
PROCESS_SET_QUOTA	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^PROCESS_SET_QUOTA = 0x0100$/;"	v
PROCESS_SUSPEND_RESUME	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^PROCESS_SUSPEND_RESUME = 0x0800$/;"	v
PROCESS_TERMINATE	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^PROCESS_TERMINATE = 0x0001$/;"	v
PROCESS_VM_OPERATION	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^PROCESS_VM_OPERATION = 0x0008$/;"	v
PROCESS_VM_READ	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^PROCESS_VM_READ = 0x0010$/;"	v
PROCESS_VM_WRITE	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^PROCESS_VM_WRITE = 0x0020$/;"	v
PWD	bundle/colorselector/Makefile	/^PWD=`pwd`$/;"	m
ParseSegments	bundle/vim-powerline/autoload/Pl/Parser.vim	/^function! s:ParseSegments(mode, side, segments, ...) " {{{$/;"	f
ParseTagline	bundle/tagbar/autoload/tagbar.vim	/^function! s:ParseTagline(part1, part2, typeinfo, fileinfo) abort$/;"	f
Path.AbsolutePathFor	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.AbsolutePathFor(str)$/;"	f
Path.CopyingSupported	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.New(path)$/;"	f
Path.Resolve	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.Resolve(path)$/;"	f
Path.Slash	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.Slash()$/;"	f
Path.WinToUnixPath	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._ignorePatternMatches	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
Path._str	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._strForUI()$/;"	f
Path.bookmarkNames	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.cacheDisplayString()$/;"	f
Path.changeToDir	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.changeToDir()$/;"	f
Path.compareTo	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.compareTo(path)$/;"	f
Path.copy	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.delete	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.displayString()$/;"	f
Path.edit	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.edit()$/;"	f
Path.equals	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortOrderIndex	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.ignore()$/;"	f
Path.isUnder	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.isUnder(path)$/;"	f
Path.readInfoFromDisk	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.refresh()$/;"	f
Path.rename	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.strTrunk()$/;"	f
Path.tabnr	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.tabnr()$/;"	f
Pl#ClearCache	bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#ClearCache() " {{{$/;"	f
Pl#Colorscheme#Apply	bundle/vim-powerline/autoload/Pl/Colorscheme.vim	/^function! Pl#Colorscheme#Apply(colorscheme, buffer_segments) " {{{$/;"	f
Pl#Colorscheme#Init	bundle/vim-powerline/autoload/Pl/Colorscheme.vim	/^function! Pl#Colorscheme#Init(hi) " {{{$/;"	f
Pl#Hi#Allocate	bundle/vim-powerline/autoload/Pl/Hi.vim	/^function! Pl#Hi#Allocate(colors) " {{{$/;"	f
Pl#Hi#Segments	bundle/vim-powerline/autoload/Pl/Hi.vim	/^function! Pl#Hi#Segments(segments, mode_colors) " {{{$/;"	f
Pl#Load	bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#Load() " {{{$/;"	f
Pl#LoadCache	bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#LoadCache() " {{{$/;"	f
Pl#Match#Add	bundle/vim-powerline/autoload/Pl/Match.vim	/^function! Pl#Match#Add(pat, expr) " {{{$/;"	f
Pl#Match#Any	bundle/vim-powerline/autoload/Pl/Match.vim	/^function! Pl#Match#Any(...) " {{{$/;"	f
Pl#Match#Validate	bundle/vim-powerline/autoload/Pl/Match.vim	/^function! Pl#Match#Validate(theme) " {{{$/;"	f
Pl#Mod#AddSegmentMod	bundle/vim-powerline/autoload/Pl/Mod.vim	/^function! Pl#Mod#AddSegmentMod(action, properties) " {{{$/;"	f
Pl#Mod#ApplySegmentMods	bundle/vim-powerline/autoload/Pl/Mod.vim	/^function! Pl#Mod#ApplySegmentMods(theme) " {{{$/;"	f
Pl#Parser#GetStatusline	bundle/vim-powerline/autoload/Pl/Parser.vim	/^function! Pl#Parser#GetStatusline(segments) " {{{$/;"	f
Pl#Parser#ParseChars	bundle/vim-powerline/autoload/Pl/Parser.vim	/^function! Pl#Parser#ParseChars(arg) " {{{$/;"	f
Pl#ReloadColorscheme	bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#ReloadColorscheme() " {{{$/;"	f
Pl#Segment#Create	bundle/vim-powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Create(name, ...) " {{{$/;"	f
Pl#Segment#Get	bundle/vim-powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Get(name) " {{{$/;"	f
Pl#Segment#Init	bundle/vim-powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Init(params) " {{{$/;"	f
Pl#Segment#Modes	bundle/vim-powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Modes(modes) " {{{$/;"	f
Pl#Segment#NoPadding	bundle/vim-powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#NoPadding() " {{{$/;"	f
Pl#Segment#Split	bundle/vim-powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Split(...) " {{{$/;"	f
Pl#Segment#Truncate	bundle/vim-powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Truncate() " {{{$/;"	f
Pl#Statusline	bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#Statusline(statusline, current) " {{{$/;"	f
Pl#StatuslineCallback	bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#StatuslineCallback(statusline, args) " {{{$/;"	f
Pl#Theme#Buffer	bundle/vim-powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#Buffer(ns, ...) " {{{$/;"	f
Pl#Theme#Callback	bundle/vim-powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#Callback(name, expr) " {{{$/;"	f
Pl#Theme#Create	bundle/vim-powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#Create(...) " {{{$/;"	f
Pl#Theme#InsertSegment	bundle/vim-powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#InsertSegment(new_segment, where, target_segment) " {{{$/;"	f
Pl#Theme#RemoveSegment	bundle/vim-powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#RemoveSegment(target_segment) " {{{$/;"	f
Pl#Theme#ReplaceSegment	bundle/vim-powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#ReplaceSegment(old_segment, new_segment) " {{{$/;"	f
Pl#UpdateStatusline	bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#UpdateStatusline(current) " {{{$/;"	f
PopEnvironmentVaribles	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:PopEnvironmentVaribles() " {{{2$/;"	f
Powerline#Functions#GetCharCode	bundle/vim-powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetCharCode() " {{{$/;"	f
Powerline#Functions#GetFilepath	bundle/vim-powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetFilepath() " {{{$/;"	f
Powerline#Functions#GetFilesize	bundle/vim-powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetFilesize() " {{{$/;"	f
Powerline#Functions#GetMode	bundle/vim-powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetMode() " {{{$/;"	f
Powerline#Functions#GetShortPath	bundle/vim-powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetShortPath(threshold) " {{{$/;"	f
Powerline#Functions#GetWSMarker	bundle/vim-powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetWSMarker() " {{{$/;"	f
Powerline#Functions#ft_man#GetName	bundle/vim-powerline/autoload/Powerline/Functions/ft_man.vim	/^function! Powerline#Functions#ft_man#GetName() " {{{$/;"	f
Powerline#Functions#fugitive#GetBranch	bundle/vim-powerline/autoload/Powerline/Functions/fugitive.vim	/^function! Powerline#Functions#fugitive#GetBranch(symbol) " {{{$/;"	f
Powerline#Functions#hgrev#Status	bundle/vim-powerline/autoload/Powerline/Functions/hgrev.vim	/^function! Powerline#Functions#hgrev#Status(symbol) " {{{$/;"	f
Powerline#Functions#syntastic#GetErrors	bundle/vim-powerline/autoload/Powerline/Functions/syntastic.vim	/^function! Powerline#Functions#syntastic#GetErrors(line_symbol) " {{{$/;"	f
PowerlineClearCache	bundle/vim-powerline/plugin/Powerline.vim	/^	command! PowerlineClearCache call Pl#ClearCache()$/;"	c
PowerlineReloadColorscheme	bundle/vim-powerline/plugin/Powerline.vim	/^	command! PowerlineReloadColorscheme call Pl#ReloadColorscheme()$/;"	c
PowerlineStartup	bundle/vim-powerline/plugin/Powerline.vim	/^	augroup PowerlineStartup$/;"	a
PrintHelp	bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintHelp() abort$/;"	f
PrintKinds	bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintKinds(typeinfo, fileinfo) abort$/;"	f
PrintTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintTag(tag, depth, fileinfo, typeinfo) abort$/;"	f
ProcessFile	bundle/snipmate.vim/plugin/snipMate.vim	/^fun s:ProcessFile(file, ft, ...)$/;"	f
ProcessFile	bundle/tagbar/autoload/tagbar.vim	/^function! s:ProcessFile(fname, ftype) abort$/;"	f
ProcessPseudoChildren	bundle/tagbar/autoload/tagbar.vim	/^function! s:ProcessPseudoChildren(tags, tag, depth, typeinfo, fileinfo) abort$/;"	f
ProcessPseudoTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:ProcessPseudoTag(curtags, tag, parent, typeinfo, fileinfo) abort$/;"	f
ProcessSnippet	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:ProcessSnippet(snip)$/;"	f
Prompt	bundle/vim-easymotion/autoload/EasyMotion.vim	/^	function! s:Prompt(message) " {{{$/;"	f
PromptUser	bundle/vim-easymotion/autoload/EasyMotion.vim	/^	function! s:PromptUser(groups) "{{{$/;"	f
PseudoTag.isPseudoTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:PseudoTag.isPseudoTag() abort dict$/;"	f
PseudoTag.strfmt	bundle/tagbar/autoload/tagbar.vim	/^function! s:PseudoTag.strfmt() abort dict$/;"	f
PushEnvironmentVaribles	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:PushEnvironmentVaribles() " {{{2$/;"	f
QuitIfOnlyWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:QuitIfOnlyWindow() abort$/;"	f
README_FILES	bundle/colorselector/Makefile	/^README_FILES=`ls -1 | grep -i readme`$/;"	m
REALTIME_PRIORITY_CLASS	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^REALTIME_PRIORITY_CLASS = 0x00000100$/;"	v
RECORD_FILE	bundle/colorselector/Makefile	/^RECORD_FILE=.record$/;"	m
RECORD_SCRIPT	bundle/colorselector/Makefile	/^RECORD_SCRIPT=.mkrecord$/;"	m
RIGHT_ALT_PRESSED	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^RIGHT_ALT_PRESSED = 0x0001$/;"	v
RIGHT_CTRL_PRESSED	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^RIGHT_CTRL_PRESSED = 0x0004$/;"	v
RandCS	bundle/colorselector/plugin/colorselector.vim	/^com! RandCS cal s:fetchRandTheme()$/;"	c
ReloadAllSnippets	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ReloadAllSnippets()$/;"	f
ReloadSnippets	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ReloadSnippets(ft)$/;"	f
Remove	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Remove(force)$/;"	f
RemoveSnippet	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:RemoveSnippet()$/;"	f
RenderContent	bundle/tagbar/autoload/tagbar.vim	/^function! s:RenderContent(...) abort$/;"	f
RenderKeepView	bundle/tagbar/autoload/tagbar.vim	/^function! s:RenderKeepView(...) abort$/;"	f
ReplaceCmd	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ReplaceCmd(cmd,...) abort$/;"	f
ResetAllSnippets	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ResetAllSnippets()$/;"	f
ResetSnippets	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ResetSnippets(ft)$/;"	f
RestoreSession	bundle/tagbar/autoload/tagbar.vim	/^function! s:RestoreSession() abort$/;"	f
RestoreVE	bundle/AutoClose--Alves/plugin/autoclose.vim	/^function! s:RestoreVE()$/;"	f
Run	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:Run(async) " {{{1$/;"	f
RunAsyncWithMessage	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:RunAsyncWithMessage(run_cmd) " {{{2$/;"	f
RunPython	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^function! s:RunPython(run_command) " {{{2$/;"	f
SCChooseCompiler	bundle/SingleCompile/plugin/SingleCompile.vim	/^command SCChooseCompiler call SingleCompile#ChooseCompiler(&filetype)$/;"	c
SCChooseInterpreter	bundle/SingleCompile/plugin/SingleCompile.vim	/^command SCChooseInterpreter call SingleCompile#ChooseCompiler(&filetype)$/;"	c
SCCompile	bundle/SingleCompile/plugin/SingleCompile.vim	/^command -nargs=* SCCompile$/;"	c
SCCompileAF	bundle/SingleCompile/plugin/SingleCompile.vim	/^command -nargs=+ SCCompileAF$/;"	c
SCCompileRun	bundle/SingleCompile/plugin/SingleCompile.vim	/^command -nargs=* SCCompileRun$/;"	c
SCCompileRunAF	bundle/SingleCompile/plugin/SingleCompile.vim	/^command -nargs=+ SCCompileRunAF$/;"	c
SCCompileRunAsync	bundle/SingleCompile/plugin/SingleCompile.vim	/^command -nargs=* SCCompileRunAsync$/;"	c
SCCompileRunAsyncAF	bundle/SingleCompile/plugin/SingleCompile.vim	/^command -nargs=+ SCCompileRunAsyncAF$/;"	c
SCIsRunningAsync	bundle/SingleCompile/plugin/SingleCompile.vim	/^command SCIsRunningAsync$/;"	c
SCROLLLOCK_ON	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^SCROLLLOCK_ON = 0x0040$/;"	v
SCTerminateAsync	bundle/SingleCompile/plugin/SingleCompile.vim	/^command SCTerminateAsync$/;"	c
SCViewResult	bundle/SingleCompile/plugin/SingleCompile.vim	/^command SCViewResult call SingleCompile#ViewResult(0)$/;"	c
SCViewResultAsync	bundle/SingleCompile/plugin/SingleCompile.vim	/^command SCViewResultAsync call SingleCompile#ViewResult(1)$/;"	c
SECURITY_ATTRIBUTES	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^class SECURITY_ATTRIBUTES(Structure):$/;"	c	inherits:Structure
SHELL	bundle/colorselector/Makefile	/^SHELL=bash$/;"	m
SHIFT_PRESSED	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^SHIFT_PRESSED = 0x0010$/;"	v
SID	bundle/nerdtree/plugin/NERD_tree.vim	/^function s:SID()$/;"	f
SMALL_RECT	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^class SMALL_RECT(Structure):$/;"	c	inherits:Structure
STARTF_FORCEOFFFEEDBACK	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^STARTF_FORCEOFFFEEDBACK = 0x00000080$/;"	v
STARTF_FORCEONFEEDBACK	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^STARTF_FORCEONFEEDBACK = 0x00000040$/;"	v
STARTF_PREVENTPINNING	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^STARTF_PREVENTPINNING = 0x00002000$/;"	v
STARTF_RUNFULLSCREEN	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^STARTF_RUNFULLSCREEN = 0x00000020$/;"	v
STARTF_TITLEISAPPID	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^STARTF_TITLEISAPPID = 0x00001000$/;"	v
STARTF_TITLEISLINKNAME	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^STARTF_TITLEISLINKNAME = 0x00000800$/;"	v
STARTF_USECOUNTCHARS	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^STARTF_USECOUNTCHARS = 0x00000008$/;"	v
STARTF_USEFILLATTRIBUTE	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^STARTF_USEFILLATTRIBUTE = 0x00000010$/;"	v
STARTF_USEHOTKEY	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^STARTF_USEHOTKEY = 0x00000200$/;"	v
STARTF_USEPOSITION	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^STARTF_USEPOSITION = 0x00000004$/;"	v
STARTF_USESHOWWINDOW	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^STARTF_USESHOWWINDOW = 0x00000001$/;"	v
STARTF_USESIZE	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^STARTF_USESIZE = 0x00000002$/;"	v
STARTF_USESTDHANDLES	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^STARTF_USESTDHANDLES = 0x00000100$/;"	v
STARTUPINFO	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^class STARTUPINFO(Structure):$/;"	c	inherits:Structure
STD_ERROR_HANDLE	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^STD_ERROR_HANDLE = c_ulong(-12)$/;"	v
STD_INPUT_HANDLE	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^STD_INPUT_HANDLE = c_ulong(-10)$/;"	v
STD_OUTPUT_HANDLE	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^STD_OUTPUT_HANDLE = c_ulong(-11)$/;"	v
SW_FORCEMINIMIZE	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^SW_FORCEMINIMIZE = 11$/;"	v
SW_HIDE	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^SW_HIDE = 0$/;"	v
SW_MAXIMIZE	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^SW_MAXIMIZE = 3$/;"	v
SW_MINIMIZE	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^SW_MINIMIZE = 6$/;"	v
SW_RESTORE	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^SW_RESTORE = 9$/;"	v
SW_SHOW	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^SW_SHOW = 5$/;"	v
SW_SHOWDEFAULT	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^SW_SHOWDEFAULT = 10$/;"	v
SW_SHOWMAXIMIZED	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^SW_SHOWMAXIMIZED = 3$/;"	v
SW_SHOWMINIMIZED	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^SW_SHOWMINIMIZED = 2$/;"	v
SW_SHOWMINNOACTIVE	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^SW_SHOWMINNOACTIVE = 7$/;"	v
SW_SHOWNA	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^SW_SHOWNA = 8$/;"	v
SW_SHOWNOACTIVATE	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^SW_SHOWNOACTIVATE = 4$/;"	v
SW_SHOWNORMAL	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^SW_SHOWNORMAL = 1$/;"	v
SYM_ATTR	bundle/vim-powerline/fontpatcher/fontpatcher	/^SYM_ATTR = {$/;"	v
SelectColorS	bundle/colorselector/plugin/colorselector.vim	/^com! SelectColorS   :cal s:SelectColorS()$/;"	c
SelectColorS	bundle/colorselector/plugin/colorselector.vim	/^fun! s:SelectColorS()$/;"	f
SelectWord	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:SelectWord()$/;"	f
SetColor	bundle/colorselector/plugin/colorselector.vim	/^fun! g:SetColor()$/;"	f
SetCompilerSingleTemplate	bundle/SingleCompile/autoload/SingleCompile.vim	/^fun! s:SetCompilerSingleTemplate(lang_name, compiler, key, value, ...)$/;"	f
SetFoldLevel	bundle/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevel(level, force) abort$/;"	f
SetFoldLevelRecursive	bundle/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevelRecursive(fileinfo, tags, level) abort$/;"	f
SetGlobalVimCompiler	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:SetGlobalVimCompiler(lang_name, compiler) " {{{1$/;"	f
SetLines	bundle/vim-easymotion/autoload/EasyMotion.vim	/^	function! s:SetLines(lines, key) " {{{$/;"	f
SetOption	colors/solarized_light.vim	/^function! s:SetOption(name,default)$/;"	f
SetVEAll	bundle/AutoClose--Alves/plugin/autoclose.vim	/^function! s:SetVEAll()$/;"	f
SetVimCompiler	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:SetVimCompiler(lang_name, compiler) " {{{1$/;"	f
ShouldQuickfixBeUsed	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:ShouldQuickfixBeUsed() " tell whether quickfix sould be used{{{1$/;"	f
ShowAvailableSnips	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ShowAvailableSnips()$/;"	f
ShowMessage	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! s:ShowMessage(message) "{{{1$/;"	f
ShowPrototype	bundle/tagbar/autoload/tagbar.vim	/^function! s:ShowPrototype(short) abort$/;"	f
SingleCompile	bundle/SingleCompile/plugin/SingleCompile.vim	/^command -nargs=* SingleCompile$/;"	c
SingleCompile#ChooseCompiler	bundle/SingleCompile/autoload/SingleCompile.vim	/^fun! SingleCompile#ChooseCompiler(lang_name, ...) " choose a compiler {{{1$/;"	f
SingleCompile#Compile	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#Compile(...) " compile synchronously {{{1$/;"	f
SingleCompile#CompileAsync	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#CompileAsync(...) " compile asynchronously {{{1$/;"	f
SingleCompile#CompileRun	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#CompileRun(...) " compile and run {{{1$/;"	f
SingleCompile#CompileRunAsync	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#CompileRunAsync(...) " {{{1$/;"	f
SingleCompile#DetectCompilerGenerally	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#DetectCompilerGenerally(compiling_command)$/;"	f
SingleCompile#DetectIe	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#DetectIe(not_used_arg) " {{{2$/;"	f
SingleCompile#DetectMicrosoftVC	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#DetectMicrosoftVC(compiling_command) " {{{2$/;"	f
SingleCompile#DetectWatcom	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#DetectWatcom(compiling_command) " {{{2$/;"	f
SingleCompile#GetDefaultOpenCommand	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#GetDefaultOpenCommand() " {{{2$/;"	f
SingleCompile#GetExecutableSuffix	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#GetExecutableSuffix()$/;"	f
SingleCompile#GetVersion	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#GetVersion() " get the script version {{{1$/;"	f
SingleCompile#PostdoMicrosoftVC	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#PostdoMicrosoftVC(not_used_arg) " MSVC post-do {{{2$/;"	f
SingleCompile#PostdoWatcom	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#PostdoWatcom(compiling_info) " watcom pre-do {{{2$/;"	f
SingleCompile#PredoClang	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#PredoClang(compiling_info) " clang Predo {{{2$/;"	f
SingleCompile#PredoGcc	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#PredoGcc(compiling_info) " gcc pre-do {{{2$/;"	f
SingleCompile#PredoMicrosoftVC	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#PredoMicrosoftVC(compiling_info) " MSVC Predo {{{2$/;"	f
SingleCompile#PredoSolStudioC	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#PredoSolStudioC(compiling_info) " solaris studio C\/C++ pre-do {{{2$/;"	f
SingleCompile#PredoWatcom	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#PredoWatcom(compiling_info) " watcom pre-do {{{2$/;"	f
SingleCompile#SetCompilerTemplate	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#SetCompilerTemplate(lang_name, compiler,$/;"	f
SingleCompile#SetCompilerTemplateByDict	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#SetCompilerTemplateByDict($/;"	f
SingleCompile#SetDetectFunc	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#SetDetectFunc(lang_name, compiler, detect_func) " {{{2$/;"	f
SingleCompile#SetOutfile	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#SetOutfile(lang_name, compiler, outfile) " {{{2$/;"	f
SingleCompile#SetPostdo	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#SetPostdo(lang_name, compiler, postdo_func) " {{{2$/;"	f
SingleCompile#SetPredo	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#SetPredo(lang_name, compiler, predo_func) " {{{2$/;"	f
SingleCompile#SetPriority	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#SetPriority(lang_name, compiler, priority) " {{{2$/;"	f
SingleCompile#SetTemplate	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#SetTemplate(lang_name, stype, string,...) " {{{1$/;"	f
SingleCompile#SetVimCompiler	bundle/SingleCompile/autoload/SingleCompile.vim	/^fun! SingleCompile#SetVimCompiler(lang_name, compiler, vim_compiler) " {{{2$/;"	f
SingleCompile#ViewResult	bundle/SingleCompile/autoload/SingleCompile.vim	/^function! SingleCompile#ViewResult(async) " view the running result {{{1$/;"	f
SingleCompile#templates#ada#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/ada.vim	/^function! SingleCompile#templates#ada#Initialize()$/;"	f
SingleCompile#templates#bash#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/bash.vim	/^function! SingleCompile#templates#bash#Initialize()$/;"	f
SingleCompile#templates#c#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/c.vim	/^function! SingleCompile#templates#c#Initialize()$/;"	f
SingleCompile#templates#cmake#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/cmake.vim	/^function! SingleCompile#templates#cmake#Initialize()$/;"	f
SingleCompile#templates#cpp#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/cpp.vim	/^function! SingleCompile#templates#cpp#Initialize()$/;"	f
SingleCompile#templates#cs#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/cs.vim	/^function! SingleCompile#templates#cs#Initialize()$/;"	f
SingleCompile#templates#csh#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/csh.vim	/^function! SingleCompile#templates#csh#Initialize()$/;"	f
SingleCompile#templates#d#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/d.vim	/^function! SingleCompile#templates#d#Initialize()$/;"	f
SingleCompile#templates#dosbatch#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/dosbatch.vim	/^function! SingleCompile#templates#dosbatch#Initialize()$/;"	f
SingleCompile#templates#erlang#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/erlang.vim	/^function! SingleCompile#templates#erlang#Initialize()$/;"	f
SingleCompile#templates#fortran#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/fortran.vim	/^function! SingleCompile#templates#fortran#Initialize()$/;"	f
SingleCompile#templates#haskell#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/haskell.vim	/^function! SingleCompile#templates#haskell#Initialize()$/;"	f
SingleCompile#templates#html#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/html.vim	/^function! SingleCompile#templates#html#Initialize()$/;"	f
SingleCompile#templates#idlang#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/idlang.vim	/^function! SingleCompile#templates#idlang#Initialize()$/;"	f
SingleCompile#templates#java#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/java.vim	/^function! SingleCompile#templates#java#Initialize()$/;"	f
SingleCompile#templates#javascript#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/javascript.vim	/^function! SingleCompile#templates#javascript#Initialize()$/;"	f
SingleCompile#templates#ksh#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/ksh.vim	/^function! SingleCompile#templates#ksh#Initialize()$/;"	f
SingleCompile#templates#lisp#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/lisp.vim	/^function! SingleCompile#templates#lisp#Initialize()$/;"	f
SingleCompile#templates#lua#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/lua.vim	/^function! SingleCompile#templates#lua#Initialize()$/;"	f
SingleCompile#templates#make#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/make.vim	/^function! SingleCompile#templates#make#Initialize()$/;"	f
SingleCompile#templates#markdown#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/markdown.vim	/^function! SingleCompile#templates#markdown#Initialize()$/;"	f
SingleCompile#templates#objc#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/objc.vim	/^function! SingleCompile#templates#objc#Initialize()$/;"	f
SingleCompile#templates#pascal#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/pascal.vim	/^function! SingleCompile#templates#pascal#Initialize()$/;"	f
SingleCompile#templates#perl#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/perl.vim	/^function! SingleCompile#templates#perl#Initialize()$/;"	f
SingleCompile#templates#php#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/php.vim	/^function! SingleCompile#templates#php#Initialize()$/;"	f
SingleCompile#templates#python#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/python.vim	/^function! SingleCompile#templates#python#Initialize()$/;"	f
SingleCompile#templates#r#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/r.vim	/^function! SingleCompile#templates#r#Initialize()$/;"	f
SingleCompile#templates#rst#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/rst.vim	/^function! SingleCompile#templates#rst#Initialize()$/;"	f
SingleCompile#templates#ruby#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/ruby.vim	/^function! SingleCompile#templates#ruby#Initialize()$/;"	f
SingleCompile#templates#sh#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/sh.vim	/^function! SingleCompile#templates#sh#Initialize()$/;"	f
SingleCompile#templates#tcl#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/tcl.vim	/^function! SingleCompile#templates#tcl#Initialize()$/;"	f
SingleCompile#templates#tcsh#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/tcsh.vim	/^function! SingleCompile#templates#tcsh#Initialize()$/;"	f
SingleCompile#templates#tex#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/tex.vim	/^function! SingleCompile#templates#tex#Initialize()$/;"	f
SingleCompile#templates#vb#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/vb.vim	/^function! SingleCompile#templates#vb#Initialize()$/;"	f
SingleCompile#templates#xhtml#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/xhtml.vim	/^function! SingleCompile#templates#xhtml#Initialize()$/;"	f
SingleCompile#templates#zsh#Initialize	bundle/SingleCompile/autoload/SingleCompile/templates/zsh.vim	/^function! SingleCompile#templates#zsh#Initialize()$/;"	f
SingleCompileAsync#GetMode	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^function! SingleCompileAsync#GetMode() " {{{1$/;"	f
SingleCompileAsync#GetOutput	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^function! SingleCompileAsync#GetOutput() " {{{1$/;"	f
SingleCompileAsync#Initialize	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^function! SingleCompileAsync#Initialize(mode) " {{{1$/;"	f
SingleCompileAsync#IsRunning	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^function! SingleCompileAsync#IsRunning() " {{{1$/;"	f
SingleCompileAsync#Run	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^function! SingleCompileAsync#Run(run_command) " {{{1$/;"	f
SingleCompileAsync#Terminate	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^function! SingleCompileAsync#Terminate() " {{{1$/;"	f
SingleCompileRun	bundle/SingleCompile/plugin/SingleCompile.vim	/^command -nargs=* SingleCompileRun$/;"	c
SolarizedHiTrail	colors/solarized_light.vim	/^augroup SolarizedHiTrail$/;"	a
SolarizedHiTrail	colors/solarized_light.vim	/^function! s:SolarizedHiTrail()$/;"	f
SolarizedMenu	colors/solarized_light.vim	/^function! SolarizedMenu()$/;"	f
SolarizedOptions	colors/solarized_light.vim	/^    command SolarizedOptions :call s:SolarizedOptions()$/;"	c
SolarizedOptions	colors/solarized_light.vim	/^function! s:SolarizedOptions()$/;"	f
SortTags	bundle/tagbar/autoload/tagbar.vim	/^function! s:SortTags(tags, comparemethod) abort$/;"	f
StageDiff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
StageDiffEdit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
StagePatch	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StageReloadSeek	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageReloadSeek(target,lnum1,lnum2)$/;"	f
StageToggle	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageToggle(lnum1,lnum2) abort$/;"	f
StartDebug	bundle/tagbar/autoload/tagbar.vim	/^function! s:StartDebug(filename) abort$/;"	f
Status	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Status() abort$/;"	f
StopDebug	bundle/tagbar/autoload/tagbar.vim	/^function! s:StopDebug() abort$/;"	f
TAR	bundle/colorselector/Makefile	/^TAR=tar czvf$/;"	m
TERMINATOR	bundle/conque_2.3/autoload/conque_term/conque_sole_shared_memory.py	/^    TERMINATOR = None$/;"	v	class:ConqueSoleSharedMemory
TagbarBalloonExpr	bundle/tagbar/autoload/tagbar.vim	/^function! TagbarBalloonExpr() abort$/;"	f
TagbarClose	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarClose         call tagbar#CloseWindow()$/;"	c
TagbarDebug	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarDebug         call tagbar#StartDebug(<f-args>)$/;"	c
TagbarDebugEnd	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarDebugEnd      call tagbar#StopDebug()$/;"	c
TagbarGenerateStatusline	bundle/tagbar/autoload/tagbar.vim	/^function! TagbarGenerateStatusline() abort$/;"	f
TagbarGetTypeConfig	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=1 TagbarGetTypeConfig call tagbar#gettypeconfig(<f-args>)$/;"	c
TagbarOpen	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarOpen          call tagbar#OpenWindow(<f-args>)$/;"	c
TagbarOpenAutoClose	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarOpenAutoClose call tagbar#OpenWindow('fcj')$/;"	c
TagbarSession	bundle/tagbar/plugin/tagbar.vim	/^augroup TagbarSession$/;"	a
TagbarSetFoldlevel	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=1 -bang TagbarSetFoldlevel  call tagbar#SetFoldLevel(<args>, <bang>0)$/;"	c
TagbarShowTag	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarShowTag       call tagbar#OpenParents()$/;"	c
TagbarToggle	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarToggle        call tagbar#ToggleWindow()$/;"	c
TerminatePython	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^function! s:TerminatePython() " {{{2$/;"	f
ToggleAutoClose	bundle/AutoClose--Alves/plugin/autoclose.vim	/^function! s:ToggleAutoClose()$/;"	f
ToggleFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleFold() abort$/;"	f
ToggleHelp	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleHelp() abort$/;"	f
ToggleSort	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleSort() abort$/;"	f
ToggleWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleWindow() abort$/;"	f
TreeDirNode.AbsoluteTreeRoot	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.New(path)$/;"	f
TreeDirNode._initChildren	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openInNewTab	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
TreeDirNode._openRecursively2	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode._openRecursively2(forceOpen)$/;"	f
TreeDirNode.activate	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
TreeDirNode.addChild	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.findNode	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getChild	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getVisibleChildCount	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.open	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.open(...)$/;"	f
TreeDirNode.openAlong	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
TreeDirNode.openExplorer	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.removeChild	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.reveal(path)$/;"	f
TreeDirNode.sortChildren	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
TreeDirNode.transplantChild	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetRootLineNum	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.GetRootLineNum()$/;"	f
TreeFileNode.GetSelected	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.New(path)$/;"	f
TreeFileNode._renderToString	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode._renderToString(depth, drawText, vertMap, isLastChild)$/;"	f
TreeFileNode.activate	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
TreeFileNode.bookmark	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBookmarks	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
TreeFileNode.copy	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findOpenDirSiblingWithVisibleChildren	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	f
TreeFileNode.findSibling	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getLineNum	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.getLineNum()$/;"	f
TreeFileNode.isRoot	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.makeRoot	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.makeRoot()$/;"	f
TreeFileNode.open	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.open(...)$/;"	f
TreeFileNode.openInNewTab	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.rename	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
TriggerSnippet	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! TriggerSnippet()$/;"	f
TypeInfo.New	bundle/tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.New(...) abort dict$/;"	f
TypeInfo.getKind	bundle/tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.getKind(kind) abort dict$/;"	f
UpdateChangedSnip	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:UpdateChangedSnip(entering)$/;"	f
UpdatePlaceholderTabStops	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:UpdatePlaceholderTabStops()$/;"	f
UpdateTabStops	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:UpdateTabStops()$/;"	f
UpdateVars	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:UpdateVars()$/;"	f
VERSION	bundle/colorselector/Makefile	/^VERSION=0.1$/;"	m
VIMRUNTIME	bundle/colorselector/Makefile	/^VIMRUNTIME=~\/.vim$/;"	m
VarReset	bundle/vim-easymotion/autoload/EasyMotion.vim	/^	function! s:VarReset(var, ...) " {{{$/;"	f
Ve	autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Ve       :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	c
Vedit	autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vedit    :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	c
Vopen	autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vopen    :execute s:find(<count>,'edit<bang>',<q-args>,1)$/;"	c
Vpedit	autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vpedit   :execute s:find(<count>,'pedit',<q-args>,<bang>1)$/;"	c
Vread	autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vread    :execute s:find(<count>,'read',<q-args>,<bang>1)$/;"	c
Vsplit	autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vsplit   :execute s:find(<count>,'split',<q-args>,<bang>1)$/;"	c
Vtabedit	autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vtabedit :execute s:find(<count>,'tabedit',<q-args>,<bang>1)$/;"	c
Vvsplit	autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vvsplit  :execute s:find(<count>,'vsplit',<q-args>,<bang>1)$/;"	c
WGET_OPT	bundle/colorselector/Makefile	/^WGET_OPT=-c -nv$/;"	m
WINDOW_BUFFER_SIZE_EVENT	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^WINDOW_BUFFER_SIZE_EVENT = 0x0004$/;"	v
WINDOW_BUFFER_SIZE_RECORD	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^class WINDOW_BUFFER_SIZE_RECORD(Structure):$/;"	c	inherits:Structure
Worker	bundle/L9/autoload/l9/async.py	/^class Worker(threading.Thread):$/;"	c	inherits:threading.Thread
Wq	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Wq(force,...) abort$/;"	f
Write	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Write(force,...) abort$/;"	f
ZoomWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:ZoomWindow() abort$/;"	f
__delitem__	bundle/conque_2.3/autoload/conque_term/conque_screen.py	/^    def __delitem__(self, key):$/;"	m	class:ConqueScreen	file:	access:private
__getitem__	bundle/conque_2.3/autoload/conque_term/conque_screen.py	/^    def __getitem__(self, key):$/;"	m	class:ConqueScreen	file:	access:private
__init__	bundle/L9/autoload/l9/async.py	/^    def __init__(self):$/;"	m	class:Asyncer	access:public
__init__	bundle/L9/autoload/l9/async.py	/^    def __init__(self):$/;"	m	class:Worker	access:public
__init__	bundle/L9/autoload/l9/async.py	/^    def __init__(self, command, cwd, input, appends):$/;"	m	class:Executor	access:public
__init__	bundle/conque_2.3/autoload/conque_term/conque_screen.py	/^    def __init__(self):$/;"	m	class:ConqueScreen	access:public
__init__	bundle/conque_2.3/autoload/conque_term/conque_sole_shared_memory.py	/^    def __init__(self, mem_size, mem_type, mem_key, fixed_length=False, fill_char=' ', serialize=False, encoding='utf-8'):$/;"	m	class:ConqueSoleSharedMemory	access:public
__len__	bundle/conque_2.3/autoload/conque_term/conque_screen.py	/^    def __len__(self):$/;"	m	class:ConqueScreen	file:	access:private
__setitem__	bundle/conque_2.3/autoload/conque_term/conque_screen.py	/^    def __setitem__(self, key, value):$/;"	m	class:ConqueScreen	file:	access:private
_build_module	bundle/neocomplcache/autoload/vital/_9813ec6.vim	/^function! s:_build_module(sid, debug)$/;"	f
_compare	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:_compare(a, b)$/;"	f
_encode_name	bundle/neocomplcache/autoload/vital/_9813ec6/system/cache.vim	/^function! s:_encode_name(cache_dir, filename)$/;"	f
_fields_	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("BaseAddress",       c_void_p),$/;"	v	class:MEMORY_BASIC_INFORMATION
_fields_	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("Char", CHAR_UNION),$/;"	v	class:CHAR_INFO
_fields_	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("EventType", c_short),$/;"	v	class:INPUT_RECORD
_fields_	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("KeyEvent", KEY_EVENT_RECORD),$/;"	v	class:INPUT_UNION
_fields_	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("Left", c_short),$/;"	v	class:SMALL_RECT
_fields_	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("Length", c_ulong),$/;"	v	class:SECURITY_ATTRIBUTES
_fields_	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("UnicodeChar", c_wchar),$/;"	v	class:CHAR_UNION
_fields_	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("X", c_short),$/;"	v	class:COORD
_fields_	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("bKeyDown", c_byte),$/;"	v	class:KEY_EVENT_RECORD
_fields_	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("bSetFocus", c_byte)]$/;"	v	class:FOCUS_EVENT_RECORD
_fields_	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("cb",            c_ulong),$/;"	v	class:STARTUPINFO
_fields_	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("dwCommandId", c_uint)]$/;"	v	class:MENU_EVENT_RECORD
_fields_	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("dwMousePosition", COORD),$/;"	v	class:MOUSE_EVENT_RECORD
_fields_	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("dwSize", COORD),$/;"	v	class:CONSOLE_SCREEN_BUFFER_INFO
_fields_	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("dwSize", COORD)]$/;"	v	class:WINDOW_BUFFER_SIZE_RECORD
_fields_	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("hProcess",    c_void_p),$/;"	v	class:PROCESS_INFORMATION
_import	bundle/neocomplcache/autoload/vital/_9813ec6.vim	/^function! s:_import(name, scripts, debug)$/;"	f
_redir	bundle/neocomplcache/autoload/vital/_9813ec6.vim	/^function! s:_redir(cmd)$/;"	f
_scripts	bundle/neocomplcache/autoload/vital/_9813ec6.vim	/^function! s:_scripts()$/;"	f
_unify_path	bundle/neocomplcache/autoload/vital/_9813ec6.vim	/^  function! s:_unify_path(path)$/;"	f
_wcwidth	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^  function! s:_wcwidth(ucs)"{{{$/;"	f
abort	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def abort(self):$/;"	m	class:Conque	access:public
abort	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    def abort(self):$/;"	m	class:ConqueSole	access:public
absolute_coords	bundle/conque_2.3/autoload/conque_term/conque.py	/^    absolute_coords = True$/;"	v	class:Conque
activateAll	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:activateAll()$/;"	f
activateBookmark	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:activateBookmark(bm)$/;"	f
activateDirNode	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:activateDirNode(node)$/;"	f
activateFileNode	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:activateFileNode(node)$/;"	f
activateFufBuffer	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:activateFufBuffer()$/;"	f
add_conceal_color	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    def add_conceal_color(self, text, attributes, stats, line_nr):$/;"	m	class:ConqueSole	access:public
add_methods	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
align	bundle/conque_2.3/autoload/conque_term/conque_screen.py	/^    def align(self):$/;"	m	class:ConqueScreen	access:public
align_matrix	bundle/vim-powerline/fontpatcher/fontpatcher	/^			align_matrix = psMat.translate(0, 0)$/;"	v
align_matrix	bundle/vim-powerline/fontpatcher/fontpatcher	/^			align_matrix = psMat.translate(font_dim['width'] - sym_dim['width'], 0)$/;"	v
align_matrix	bundle/vim-powerline/fontpatcher/fontpatcher	/^			align_matrix = psMat.translate(font_dim['width'] \/ 2 - sym_dim['width'] \/ 2 , 0)$/;"	v
all	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:all(f, xs)$/;"	f
analyze_dictionary_variable_line	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:analyze_dictionary_variable_line(line, keyword_dict, var_name)"{{{$/;"	f
analyze_function_line	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:analyze_function_line(line, keyword_dict, prototype)"{{{$/;"	f
analyze_variable_line	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:analyze_variable_line(line, keyword_dict)"{{{$/;"	f
and	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:and(xs)$/;"	f
any	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:any(f, xs)$/;"	f
append	bundle/conque_2.3/autoload/conque_term/conque_screen.py	/^    def append(self, value):$/;"	m	class:ConqueScreen	access:public
apply_color	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def apply_color(self, start, end, line=0):$/;"	m	class:Conque	access:public
args	bundle/vim-powerline/fontpatcher/fontpatcher	/^args = parser.parse_args()$/;"	v
async_load	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! s:async_load(argv, cache_dir, filename)"{{{$/;"	f
attribute_cache	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    attribute_cache = {}$/;"	v	class:ConqueSole
attribute_cache	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    attribute_cache = {}$/;"	v	class:ConqueSoleSubprocess
attributes	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    attributes = []$/;"	v	class:ConqueSoleSubprocess
auto_read	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def auto_read(self):$/;"	m	class:Conque	access:public
autowrap	bundle/conque_2.3/autoload/conque_term/conque.py	/^    autowrap = True$/;"	v	class:Conque
b:current_syntax	bundle/python-syntax/syntax/python.vim	/^let b:current_syntax = "python"$/;"	v
b:current_syntax	bundle/python-syntax/syntax/python3.0.vim	/^let b:current_syntax = "python"$/;"	v
b:current_syntax	bundle/tagbar/syntax/tagbar.vim	/^let b:current_syntax = "tagbar"$/;"	v
b:current_syntax	bundle/vim-markdown/syntax/markdown.vim	/^let b:current_syntax = "markdown"$/;"	v
bindMappings	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:bindMappings()$/;"	f
bookmark	bundle/FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:bookmark(word)$/;"	f
bookmarkHere	bundle/FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:bookmarkHere(word)$/;"	f
bookmarkNode	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:bookmarkNode(...)$/;"	f
bottom	bundle/conque_2.3/autoload/conque_term/conque.py	/^    bottom = 24 # relative to top of screen$/;"	v	class:Conque
bound	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def bound(self, val, min, max):$/;"	m	class:Conque	access:public
break	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:break(f, xs)$/;"	f
bucket	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^    bucket = None$/;"	v	class:ConqueSoleWrapper
bufInWindows	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:bufInWindows(bnum)$/;"	f
buffer	bundle/conque_2.3/autoload/conque_term/conque_screen.py	/^    buffer = None$/;"	v	class:ConqueScreen
buffer	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    buffer = None$/;"	v	class:ConqueSole
buffer	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer(...) abort$/;"	f
buffer_commit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
buffer_compare_age	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_compare_age(commit) dict abort$/;"	f
buffer_containing_commit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
buffer_expand	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
buffer_getline	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getvar	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_height	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    buffer_height = 100$/;"	v	class:ConqueSoleSubprocess
buffer_name	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_path	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
buffer_redraw_ct	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    buffer_redraw_ct = 1$/;"	v	class:ConqueSole
buffer_repo	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_rev	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
buffer_setvar	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_sha1	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
buffer_spec	bundle/vim-fugitive/plugin/fugitive.vim	/^  function! s:buffer_spec() dict abort$/;"	f
buffer_type	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffer_up	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_up(...) dict abort$/;"	f
buffer_width	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    buffer_width = 160$/;"	v	class:ConqueSoleSubprocess
c	bundle/conque_2.3/autoload/conque_term/conque.py	/^    c = 1 # current cursor column$/;"	v	class:Conque
caching	bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:caching()"{{{$/;"	f
caching	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:caching()"{{{$/;"	f
caching_buffer	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:caching_buffer(name)"{{{$/;"	f
caching_completion_from_dict	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:caching_completion_from_dict(dict_name)"{{{$/;"	f
caching_current_buffer	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:caching_current_buffer(start, end, is_auto)"{{{$/;"	f
caching_current_buffer	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:caching_current_buffer(start, end)"{{{$/;"	f
caching_current_files	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:caching_current_files()$/;"	f
caching_dictionary	bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:caching_dictionary(filetype)$/;"	f
caching_from_dict	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:caching_from_dict(dict_name, kind)"{{{$/;"	f
caching_from_syn	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:caching_from_syn(filetype)"{{{$/;"	f
caching_include	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:caching_include(bufname)"{{{$/;"	f
caching_prototype_from_dict	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:caching_prototype_from_dict(dict_name)"{{{$/;"	f
caching_tags	bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:caching_tags(force)"{{{$/;"	f
centerView	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:centerView()$/;"	f
chCwd	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:chCwd(node)$/;"	f
chRoot	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:chRoot(node)$/;"	f
changeCoverage	bundle/FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:changeCoverage(name)$/;"	f
change_title	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def change_title(self, key, val):$/;"	m	class:Conque	access:public
change_update_time	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! s:change_update_time()"{{{$/;"	f
char_range	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:char_range(from, to)$/;"	f
char_width	bundle/conque_2.3/autoload/conque_term/conque_sole_shared_memory.py	/^    char_width = 1$/;"	v	class:ConqueSoleSharedMemory
character_set	bundle/conque_2.3/autoload/conque_term/conque.py	/^    character_set = 'ascii'$/;"	v	class:Conque
charset_graphics	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def charset_graphics(self):$/;"	m	class:Conque	access:public
charset_uk	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def charset_uk(self):$/;"	m	class:Conque	access:public
charset_us	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def charset_us(self):$/;"	m	class:Conque	access:public
checkDataFileCompatibility	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:checkDataFileCompatibility()$/;"	f
checkForBrowse	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:checkForBrowse(dir)$/;"	f
checkKey	bundle/L9/autoload/l9/async.vim	/^function s:checkKey(key)$/;"	f
check_buffer	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:check_buffer(bufnumber, is_force)"{{{$/;"	f
check_cache	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:check_cache()"{{{$/;"	f
check_cache	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:check_cache()"{{{$/;"	f
check_changed_buffer	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:check_changed_buffer(bufnumber)"{{{$/;"	f
check_commands	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    def check_commands(self):$/;"	m	class:ConqueSoleSubprocess	access:public
check_old_cache	bundle/neocomplcache/autoload/vital/_9813ec6/system/cache.vim	/^function! s:check_old_cache(cache_dir, filename)$/;"	f
check_source	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:check_source()"{{{$/;"	f
clear	bundle/conque_2.3/autoload/conque_term/conque_screen.py	/^    def clear(self):$/;"	m	class:ConqueScreen	access:public
clear	bundle/conque_2.3/autoload/conque_term/conque_sole_shared_memory.py	/^    def clear(self, start=0):$/;"	m	class:ConqueSoleSharedMemory	access:public
clearBookmarks	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:clearBookmarks(bookmarks)$/;"	f
clear_outputs	bundle/L9/autoload/l9/async.py	/^    def clear_outputs(self):$/;"	m	class:Worker	access:public
close	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def close(self):$/;"	m	class:Conque	access:public
close	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    def close(self):$/;"	m	class:ConqueSole	access:public
close	bundle/conque_2.3/autoload/conque_term/conque_sole_shared_memory.py	/^    def close(self):$/;"	m	class:ConqueSoleSharedMemory	access:public
close	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    def close(self):$/;"	m	class:ConqueSoleSubprocess	access:public
close	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^    def close(self):$/;"	m	class:ConqueSoleWrapper	access:public
close	bundle/conque_2.3/autoload/conque_term/conque_subprocess.py	/^    def close(self):$/;"	m	class:ConqueSubprocess	access:public
closeChildren	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:closeChildren(node)$/;"	f
closeCurrentDir	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:closeCurrentDir(node)$/;"	f
closeTree	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:closeTree()$/;"	f
closeTreeIfOpen	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:closeTreeIfOpen()$/;"	f
closeTreeIfQuitOnOpen	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:closeTreeIfQuitOnOpen()$/;"	f
closeTreeWindow	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:closeTreeWindow()$/;"	f
close_func_arg	bundle/AutoClose--Alves/plugin/autoclose.vim	/^        let close_func_arg = '"' . s:charsToClose[key] . '"'$/;"	v
close_func_arg	bundle/AutoClose--Alves/plugin/autoclose.vim	/^        let close_func_arg = '"\\""'$/;"	v
close_pid	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    def close_pid(self, pid):$/;"	m	class:ConqueSoleSubprocess	access:public
cmd	bundle/conque_2.3/autoload/conque_term/conque_sole_communicator.py	/^                cmd = shm_command.read()$/;"	v
cmd	bundle/conque_2.3/autoload/conque_term/conque_sole_communicator.py	/^        cmd = shm_command.read()$/;"	v
cmd_line	bundle/conque_2.3/autoload/conque_term/conque_sole_communicator.py	/^        cmd_line = " ".join(sys.argv[6:])$/;"	v
code_page	bundle/conque_2.3/autoload/conque_term/conque_sole_communicator.py	/^        code_page = int(sys.argv[4])$/;"	v
color_cache	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    color_cache = {}$/;"	v	class:ConqueSole
color_changes	bundle/conque_2.3/autoload/conque_term/conque.py	/^    color_changes = {}$/;"	v	class:Conque
color_conceals	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    color_conceals = {}$/;"	v	class:ConqueSole
color_history	bundle/conque_2.3/autoload/conque_term/conque.py	/^    color_history = {}$/;"	v	class:Conque
color_mode	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    color_mode = None$/;"	v	class:ConqueSole
color_pruning	bundle/conque_2.3/autoload/conque_term/conque.py	/^    color_pruning = True$/;"	v	class:Conque
colors_name	colors/ir_black.vim	/^let colors_name = "ir_black"$/;"	v
colors_name	colors/mayansmoke.vim	/^let colors_name = "mayansmoke"$/;"	v
colors_name	colors/pyte.vim	/^let colors_name = "pyte"$/;"	v
colors_name	colors/solarized_light.vim	/^let colors_name = "solarized_light"$/;"	v
colors_name	colors/sorcerer.vim	/^let colors_name = "sorcerer"$/;"	v
colors_name	colors/wombat.vim	/^let colors_name = "wombat"$/;"	v
columns	bundle/conque_2.3/autoload/conque_term/conque.py	/^    columns = 80 # same as $COLUMNS$/;"	v	class:Conque
columns	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^    columns = 80$/;"	v	class:ConqueSoleWrapper
command	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:command(definition) abort$/;"	f
compareBookmarks	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:compareBookmarks(first, second)$/;"	f
compareNodes	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:compareNodes(n1, n2)$/;"	f
compareTimeDescending	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^function s:compareTimeDescending(i1, i2)$/;"	f
compare_length	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:compare_length(i1, i2)$/;"	f
compare_pos	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! s:compare_pos(i1, i2)$/;"	f
compare_source_rank	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! s:compare_source_rank(i1, i2)$/;"	f
completeBookmarks	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:completeBookmarks(A,L,P)$/;"	f
concat	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:concat(list)$/;"	f
conque_term#bell	bundle/conque_2.3/autoload/conque_term.vim	/^function! conque_term#bell() " {{{$/;"	f
conque_term#call_hooks	bundle/conque_2.3/autoload/conque_term.vim	/^function! conque_term#call_hooks(event, t_obj) " {{{$/;"	f
conque_term#close_all	bundle/conque_2.3/autoload/conque_term.vim	/^function! conque_term#close_all() "{{{$/;"	f
conque_term#create_terminal_object	bundle/conque_2.3/autoload/conque_term.vim	/^function! conque_term#create_terminal_object(...) " {{{$/;"	f
conque_term#dependency_check	bundle/conque_2.3/autoload/conque_term.vim	/^function! conque_term#dependency_check() " {{{$/;"	f
conque_term#exec_file	bundle/conque_2.3/autoload/conque_term.vim	/^function! conque_term#exec_file() "{{{$/;"	f
conque_term#fail	bundle/conque_2.3/autoload/conque_term.vim	/^function! conque_term#fail(feature) " {{{$/;"	f
conque_term#find_python_exe	bundle/conque_2.3/autoload/conque_term.vim	/^function! conque_term#find_python_exe() " {{{$/;"	f
conque_term#get_instance	bundle/conque_2.3/autoload/conque_term.vim	/^function! conque_term#get_instance(...) " {{{$/;"	f
conque_term#init	bundle/conque_2.3/autoload/conque_term.vim	/^function! conque_term#init() " {{{$/;"	f
conque_term#init_conceal_color	bundle/conque_2.3/autoload/conque_term.vim	/^function! conque_term#init_conceal_color() " {{{$/;"	f
conque_term#key_press	bundle/conque_2.3/autoload/conque_term.vim	/^function! conque_term#key_press() "{{{$/;"	f
conque_term#load_python	bundle/conque_2.3/autoload/conque_term.vim	/^function! conque_term#load_python() " {{{$/;"	f
conque_term#on_blur	bundle/conque_2.3/autoload/conque_term.vim	/^function! conque_term#on_blur() " {{{$/;"	f
conque_term#on_focus	bundle/conque_2.3/autoload/conque_term.vim	/^function! conque_term#on_focus(...) " {{{$/;"	f
conque_term#open	bundle/conque_2.3/autoload/conque_term.vim	/^function! conque_term#open(...) "{{{$/;"	f
conque_term#read_all	bundle/conque_2.3/autoload/conque_term.vim	/^function! conque_term#read_all(insert_mode) "{{{$/;"	f
conque_term#register_function	bundle/conque_2.3/autoload/conque_term.vim	/^function! conque_term#register_function(event, function_name) " {{{$/;"	f
conque_term#resume_session	bundle/conque_2.3/autoload/conque_term.vim	/^function! conque_term#resume_session() " {{{$/;"	f
conque_term#send_file	bundle/conque_2.3/autoload/conque_term.vim	/^function! conque_term#send_file() "{{{$/;"	f
conque_term#send_selected	bundle/conque_2.3/autoload/conque_term.vim	/^function! conque_term#send_selected(type) "{{{$/;"	f
conque_term#set_buffer_settings	bundle/conque_2.3/autoload/conque_term.vim	/^function! conque_term#set_buffer_settings(command, vim_startup_commands) "{{{$/;"	f
conque_term#set_mappings	bundle/conque_2.3/autoload/conque_term.vim	/^function! conque_term#set_mappings(action) "{{{$/;"	f
conque_term#subprocess	bundle/conque_2.3/autoload/conque_term.vim	/^function! conque_term#subprocess(command) " {{{$/;"	f
console_height	bundle/conque_2.3/autoload/conque_term/conque_sole_communicator.py	/^        console_height = int(sys.argv[3])$/;"	v
console_width	bundle/conque_2.3/autoload/conque_term/conque_sole_communicator.py	/^        console_width = int(sys.argv[2])$/;"	v
copy_outputs	bundle/L9/autoload/l9/async.py	/^    def copy_outputs(self):$/;"	m	class:Worker	access:public
create	bundle/conque_2.3/autoload/conque_term/conque_sole_shared_memory.py	/^    def create(self, access='write'):$/;"	m	class:ConqueSoleSharedMemory	access:public
createChangeCoverageListener	bundle/FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:createChangeCoverageListener()$/;"	f
createDataBufferListener	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:createDataBufferListener(dataFile)$/;"	f
createDefaultBindings	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:createDefaultBindings()$/;"	f
createEditDataListener	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:createEditDataListener()$/;"	f
createTreeWin	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:createTreeWin()$/;"	f
create_hash	bundle/neocomplcache/autoload/vital/_9813ec6/system/cache.vim	/^function! s:create_hash(dir, str)$/;"	f
csi_add_spaces	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def csi_add_spaces(self, csi):$/;"	m	class:Conque	access:public
csi_clear_line	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def csi_clear_line(self, csi):$/;"	m	class:Conque	access:public
csi_clear_screen	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def csi_clear_screen(self, csi):$/;"	m	class:Conque	access:public
csi_cursor	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def csi_cursor(self, csi):$/;"	m	class:Conque	access:public
csi_cursor_down	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def csi_cursor_down(self, csi):$/;"	m	class:Conque	access:public
csi_cursor_left	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def csi_cursor_left(self, csi):$/;"	m	class:Conque	access:public
csi_cursor_right	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def csi_cursor_right(self, csi):$/;"	m	class:Conque	access:public
csi_cursor_to_column	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def csi_cursor_to_column(self, csi):$/;"	m	class:Conque	access:public
csi_cursor_up	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def csi_cursor_up(self, csi):$/;"	m	class:Conque	access:public
csi_delete_chars	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def csi_delete_chars(self, csi):$/;"	m	class:Conque	access:public
csi_font	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def csi_font(self, csi):$/;"	m	class:Conque	access:public
csi_reset	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def csi_reset(self, csi):$/;"	m	class:Conque	access:public
csi_set	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def csi_set(self, csi):$/;"	m	class:Conque	access:public
csi_set_coords	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def csi_set_coords(self, csi):$/;"	m	class:Conque	access:public
csi_tab_clear	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def csi_tab_clear(self, csi):$/;"	m	class:Conque	access:public
ctl_bel	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def ctl_bel(self):$/;"	m	class:Conque	access:public
ctl_bs	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def ctl_bs(self):$/;"	m	class:Conque	access:public
ctl_cr	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def ctl_cr(self):$/;"	m	class:Conque	access:public
ctl_nl	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def ctl_nl(self):$/;"	m	class:Conque	access:public
ctl_si	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def ctl_si(self):$/;"	m	class:Conque	access:public
ctl_so	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def ctl_so(self):$/;"	m	class:Conque	access:public
ctl_soh	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def ctl_soh(self):$/;"	m	class:Conque	access:public
ctl_stx	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def ctl_stx(self):$/;"	m	class:Conque	access:public
ctl_tab	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def ctl_tab(self):$/;"	m	class:Conque	access:public
cursor_col	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    cursor_col = 0$/;"	v	class:ConqueSoleSubprocess
cursor_line	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    cursor_line = 0$/;"	v	class:ConqueSoleSubprocess
cursor_set	bundle/conque_2.3/autoload/conque_term/conque.py	/^    cursor_set = False$/;"	v	class:Conque
data	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    data = []$/;"	v	class:ConqueSoleSubprocess
deactivateFufBuffer	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:deactivateFufBuffer()$/;"	f
default_attribute	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    default_attribute = 7$/;"	v	class:ConqueSoleSubprocess
define_commands	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:define_commands()$/;"	f
delete	bundle/neocomplcache/autoload/vital/_9813ec6/system/cache.vim	/^function! s:delete(cache_dir, filename)$/;"	f
deleteBookmark	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:deleteBookmark(bm)$/;"	f
dep_from_git	bundle/colorselector/Makefile	/^dep_from_git = \\$/;"	m
dep_from_svn	bundle/colorselector/Makefile	/^dep_from_svn = \\$/;"	m
deprecated	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:deprecated(func, ...)$/;"	f
did_python_syn_inits	bundle/python-syntax/syntax/python.vim	/^    let did_python_syn_inits = 1$/;"	v
did_python_syn_inits	bundle/python-syntax/syntax/python3.0.vim	/^    let did_python_syn_inits = 1$/;"	v
die	auto-install.sh	/^die() {$/;"	f
diff_window_count	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_window_count()$/;"	f
diffoff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff()$/;"	f
diffoff_all	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff_all(dir)$/;"	f
diffthis	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffthis()$/;"	f
disable_caching	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:disable_caching(name)"{{{$/;"	f
displayHelp	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:displayHelp()$/;"	f
display_neco	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! s:display_neco(number)"{{{$/;"	f
do_auto_complete	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! s:do_auto_complete(event)"{{{$/;"	f
do_color	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    def do_color(self, start=0, end=0, attributes='', stats=None):$/;"	m	class:ConqueSole	access:public
doc_dict.search	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:doc_dict.search(cur_text)"{{{$/;"	f
doc_dict.search	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:doc_dict.search(cur_text)"{{{$/;"	f
dumpHelp	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:dumpHelp()$/;"	f
echo	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echo(msg)$/;"	f
echo	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:echo(msg)$/;"	f
echoError	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:echoError(msg)$/;"	f
echoWarning	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echoWarning(msg)$/;"	f
echoWarning	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:echoWarning(msg)$/;"	f
enable_caching	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:enable_caching(name)"{{{$/;"	f
enable_colors	bundle/conque_2.3/autoload/conque_term/conque.py	/^    enable_colors = True$/;"	v	class:Conque
encoding	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    encoding = None$/;"	v	class:ConqueSole
encoding	bundle/conque_2.3/autoload/conque_term/conque_sole_shared_memory.py	/^    encoding = 'utf-8'$/;"	v	class:ConqueSoleSharedMemory
enumHelpTags	bundle/FuzzyFinder/autoload/fuf/help.vim	/^function s:enumHelpTags(tagFiles)$/;"	f
enumItems	bundle/FuzzyFinder/autoload/fuf/callbackfile.vim	/^function s:enumItems(dir)$/;"	f
enumItems	bundle/FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:enumItems()$/;"	f
enumItems	bundle/FuzzyFinder/autoload/fuf/dir.vim	/^function s:enumItems(dir)$/;"	f
enumItems	bundle/FuzzyFinder/autoload/fuf/file.vim	/^function s:enumItems(dir)$/;"	f
enumNonCurrentItems	bundle/FuzzyFinder/autoload/fuf/file.vim	/^function s:enumNonCurrentItems(dir, bufNrPrev, cache)$/;"	f
enumTaggedFiles	bundle/FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:enumTaggedFiles(tagFiles)$/;"	f
enumTags	bundle/FuzzyFinder/autoload/fuf/tag.vim	/^function s:enumTags(tagFiles)$/;"	f
esc_next_line	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def esc_next_line(self):$/;"	m	class:Conque	access:public
esc_scroll_down	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def esc_scroll_down(self):$/;"	m	class:Conque	access:public
esc_scroll_up	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def esc_scroll_up(self):$/;"	m	class:Conque	access:public
esc_set_tab	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def esc_set_tab(self):$/;"	m	class:Conque	access:public
escape_file_searching	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:escape_file_searching(buffer_name)"{{{$/;"	f
escape_pattern	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:escape_pattern(str)"{{{$/;"	f
evaluateLearningRank	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:evaluateLearningRank(word, stats)$/;"	f
exec	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:exec(cmd)$/;"	f
exec_highlight	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def exec_highlight(self, buffer_line, start, end, highlight):$/;"	m	class:Conque	access:public
execute	bundle/L9/autoload/l9/async.py	/^    def execute(self, var_key, var_command, var_cwd, var_input, var_appends):$/;"	m	class:Asyncer	access:public
execute	bundle/L9/autoload/l9/async.py	/^    def execute(self, worker):$/;"	m	class:Executor	access:public
exists_current_source	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:exists_current_source()"{{{$/;"	f
expandAbbrevMap	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:expandAbbrevMap(pattern, abbrevMap)$/;"	f
expandSearchDir	bundle/FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:expandSearchDir(dir, level)$/;"	f
extension	bundle/vim-powerline/fontpatcher/fontpatcher	/^		extension = 'otf'$/;"	v
fast_mode	bundle/conque_2.3/autoload/conque_term/conque_sole_communicator.py	/^        fast_mode = int(sys.argv[5])$/;"	v
fast_mode	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    fast_mode = 0$/;"	v	class:ConqueSoleSubprocess
fd	bundle/conque_2.3/autoload/conque_term/conque_subprocess.py	/^    fd = None$/;"	v	class:ConqueSubprocess
fetchRandTheme	bundle/colorselector/plugin/colorselector.vim	/^fun! s:fetchRandTheme()$/;"	f
fetch_github	bundle/colorselector/Makefile	/^fetch_github = \\$/;"	m
fetch_local	bundle/colorselector/Makefile	/^fetch_local = @cp -v $(1) $(2) \\$/;"	m
fetch_url	bundle/colorselector/Makefile	/^fetch_url = \\$/;"	m
filereadable	bundle/neocomplcache/autoload/vital/_9813ec6/system/cache.vim	/^function! s:filereadable(cache_dir, filename)$/;"	f
find	autoload/pathogen.vim	/^function! s:find(count,cmd,file,lcd) " {{{1$/;"	f
findAndRevealPath	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:findAndRevealPath()$/;"	f
findItem	bundle/FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:findItem(items, word)$/;"	f
findItem	bundle/FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:findItem(items, word)$/;"	f
findItem	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^function s:findItem(items, word)$/;"	f
firstUsableWindow	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:firstUsableWindow()$/;"	f
fixed_length	bundle/conque_2.3/autoload/conque_term/conque_sole_shared_memory.py	/^    fixed_length = False$/;"	v	class:ConqueSoleSharedMemory
flatten	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:flatten(list)$/;"	f
fnameescape	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
foldl	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:foldl(f, init, xs)$/;"	f
foldl1	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:foldl1(f, xs)$/;"	f
foldr	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:foldr(f, init, xs)$/;"	f
foldr1	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:foldr1(f, xs)$/;"	f
font	bundle/vim-powerline/fontpatcher/fontpatcher	/^		font = fontforge.open(font_path)$/;"	v
font_dim	bundle/vim-powerline/fontpatcher/fontpatcher	/^	font_dim = {$/;"	v
font_ycenter	bundle/vim-powerline/fontpatcher/fontpatcher	/^		font_ycenter = font_dim['height'] \/ 2$/;"	v
formatItemUsingCache	bundle/FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:formatItemUsingCache(item)$/;"	f
fuf#addMode	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#addMode(modeName)$/;"	f
fuf#bookmarkdir#createHandler	bundle/FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#createHandler(base)$/;"	f
fuf#bookmarkdir#getEditableDataNames	bundle/FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#getEditableDataNames()$/;"	f
fuf#bookmarkdir#getSwitchOrder	bundle/FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#getSwitchOrder()$/;"	f
fuf#bookmarkdir#onInit	bundle/FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#onInit()$/;"	f
fuf#bookmarkdir#renewCache	bundle/FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#renewCache()$/;"	f
fuf#bookmarkdir#requiresOnCommandPre	bundle/FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#requiresOnCommandPre()$/;"	f
fuf#bookmarkfile#createHandler	bundle/FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#createHandler(base)$/;"	f
fuf#bookmarkfile#getEditableDataNames	bundle/FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#getEditableDataNames()$/;"	f
fuf#bookmarkfile#getSwitchOrder	bundle/FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#getSwitchOrder()$/;"	f
fuf#bookmarkfile#onInit	bundle/FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#onInit()$/;"	f
fuf#bookmarkfile#renewCache	bundle/FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#renewCache()$/;"	f
fuf#bookmarkfile#requiresOnCommandPre	bundle/FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#requiresOnCommandPre()$/;"	f
fuf#buffer#createHandler	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^function fuf#buffer#createHandler(base)$/;"	f
fuf#buffer#getEditableDataNames	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^function fuf#buffer#getEditableDataNames()$/;"	f
fuf#buffer#getSwitchOrder	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^function fuf#buffer#getSwitchOrder()$/;"	f
fuf#buffer#onInit	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^function fuf#buffer#onInit()$/;"	f
fuf#buffer#renewCache	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^function fuf#buffer#renewCache()$/;"	f
fuf#buffer#requiresOnCommandPre	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^function fuf#buffer#requiresOnCommandPre()$/;"	f
fuf#buffertag#createHandler	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^function fuf#buffertag#createHandler(base)$/;"	f
fuf#buffertag#getEditableDataNames	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^function fuf#buffertag#getEditableDataNames()$/;"	f
fuf#buffertag#getSwitchOrder	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^function fuf#buffertag#getSwitchOrder()$/;"	f
fuf#buffertag#onInit	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^function fuf#buffertag#onInit()$/;"	f
fuf#buffertag#renewCache	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^function fuf#buffertag#renewCache()$/;"	f
fuf#buffertag#requiresOnCommandPre	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^function fuf#buffertag#requiresOnCommandPre()$/;"	f
fuf#callbackfile#createHandler	bundle/FuzzyFinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#createHandler(base)$/;"	f
fuf#callbackfile#getEditableDataNames	bundle/FuzzyFinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#getEditableDataNames()$/;"	f
fuf#callbackfile#getSwitchOrder	bundle/FuzzyFinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#getSwitchOrder()$/;"	f
fuf#callbackfile#launch	bundle/FuzzyFinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#launch(initialPattern, partialMatching, prompt, exclude, listener)$/;"	f
fuf#callbackfile#onInit	bundle/FuzzyFinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#onInit()$/;"	f
fuf#callbackfile#renewCache	bundle/FuzzyFinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#renewCache()$/;"	f
fuf#callbackfile#requiresOnCommandPre	bundle/FuzzyFinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#requiresOnCommandPre()$/;"	f
fuf#callbackitem#createHandler	bundle/FuzzyFinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#createHandler(base)$/;"	f
fuf#callbackitem#getEditableDataNames	bundle/FuzzyFinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#getEditableDataNames()$/;"	f
fuf#callbackitem#getSwitchOrder	bundle/FuzzyFinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#getSwitchOrder()$/;"	f
fuf#callbackitem#launch	bundle/FuzzyFinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#launch(initialPattern, partialMatching, prompt, listener, items, forPath)$/;"	f
fuf#callbackitem#onInit	bundle/FuzzyFinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#onInit()$/;"	f
fuf#callbackitem#renewCache	bundle/FuzzyFinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#renewCache()$/;"	f
fuf#callbackitem#requiresOnCommandPre	bundle/FuzzyFinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#requiresOnCommandPre()$/;"	f
fuf#changelist#createHandler	bundle/FuzzyFinder/autoload/fuf/changelist.vim	/^function fuf#changelist#createHandler(base)$/;"	f
fuf#changelist#getEditableDataNames	bundle/FuzzyFinder/autoload/fuf/changelist.vim	/^function fuf#changelist#getEditableDataNames()$/;"	f
fuf#changelist#getSwitchOrder	bundle/FuzzyFinder/autoload/fuf/changelist.vim	/^function fuf#changelist#getSwitchOrder()$/;"	f
fuf#changelist#onInit	bundle/FuzzyFinder/autoload/fuf/changelist.vim	/^function fuf#changelist#onInit()$/;"	f
fuf#changelist#renewCache	bundle/FuzzyFinder/autoload/fuf/changelist.vim	/^function fuf#changelist#renewCache()$/;"	f
fuf#changelist#requiresOnCommandPre	bundle/FuzzyFinder/autoload/fuf/changelist.vim	/^function fuf#changelist#requiresOnCommandPre()$/;"	f
fuf#compareRanks	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#compareRanks(i1, i2)$/;"	f
fuf#countModifiedFiles	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#countModifiedFiles(files, time)$/;"	f
fuf#coveragefile#createHandler	bundle/FuzzyFinder/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#createHandler(base)$/;"	f
fuf#coveragefile#getEditableDataNames	bundle/FuzzyFinder/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#getEditableDataNames()$/;"	f
fuf#coveragefile#getSwitchOrder	bundle/FuzzyFinder/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#getSwitchOrder()$/;"	f
fuf#coveragefile#onInit	bundle/FuzzyFinder/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#onInit()$/;"	f
fuf#coveragefile#renewCache	bundle/FuzzyFinder/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#renewCache()$/;"	f
fuf#coveragefile#requiresOnCommandPre	bundle/FuzzyFinder/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#requiresOnCommandPre()$/;"	f
fuf#defineKeyMappingInHandler	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#defineKeyMappingInHandler(key, func)$/;"	f
fuf#defineLaunchCommand	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#defineLaunchCommand(CmdName, modeName, prefixInitialPattern, tempVars)$/;"	f
fuf#dir#createHandler	bundle/FuzzyFinder/autoload/fuf/dir.vim	/^function fuf#dir#createHandler(base)$/;"	f
fuf#dir#getEditableDataNames	bundle/FuzzyFinder/autoload/fuf/dir.vim	/^function fuf#dir#getEditableDataNames()$/;"	f
fuf#dir#getSwitchOrder	bundle/FuzzyFinder/autoload/fuf/dir.vim	/^function fuf#dir#getSwitchOrder()$/;"	f
fuf#dir#onInit	bundle/FuzzyFinder/autoload/fuf/dir.vim	/^function fuf#dir#onInit()$/;"	f
fuf#dir#renewCache	bundle/FuzzyFinder/autoload/fuf/dir.vim	/^function fuf#dir#renewCache()$/;"	f
fuf#dir#requiresOnCommandPre	bundle/FuzzyFinder/autoload/fuf/dir.vim	/^function fuf#dir#requiresOnCommandPre()$/;"	f
fuf#echoError	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#echoError(msg)$/;"	f
fuf#echoWarning	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#echoWarning(msg)$/;"	f
fuf#editDataFile	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#editDataFile()$/;"	f
fuf#enumExpandedDirsEntries	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#enumExpandedDirsEntries(dir, exclude)$/;"	f
fuf#expandTailDotSequenceToParentDir	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#expandTailDotSequenceToParentDir(pattern)$/;"	f
fuf#file#createHandler	bundle/FuzzyFinder/autoload/fuf/file.vim	/^function fuf#file#createHandler(base)$/;"	f
fuf#file#getEditableDataNames	bundle/FuzzyFinder/autoload/fuf/file.vim	/^function fuf#file#getEditableDataNames()$/;"	f
fuf#file#getSwitchOrder	bundle/FuzzyFinder/autoload/fuf/file.vim	/^function fuf#file#getSwitchOrder()$/;"	f
fuf#file#onInit	bundle/FuzzyFinder/autoload/fuf/file.vim	/^function fuf#file#onInit()$/;"	f
fuf#file#renewCache	bundle/FuzzyFinder/autoload/fuf/file.vim	/^function fuf#file#renewCache()$/;"	f
fuf#file#requiresOnCommandPre	bundle/FuzzyFinder/autoload/fuf/file.vim	/^function fuf#file#requiresOnCommandPre()$/;"	f
fuf#formatPrompt	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#formatPrompt(prompt, partialMatching, otherString)$/;"	f
fuf#getCurrentTagFiles	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#getCurrentTagFiles()$/;"	f
fuf#getDataFileTime	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#getDataFileTime(modeName, dataName)$/;"	f
fuf#getFileLines	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#getFileLines(file)$/;"	f
fuf#getModeNames	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#getModeNames()$/;"	f
fuf#getRunningHandler	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#getRunningHandler()$/;"	f
fuf#givencmd#createHandler	bundle/FuzzyFinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#createHandler(base)$/;"	f
fuf#givencmd#getEditableDataNames	bundle/FuzzyFinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#getEditableDataNames()$/;"	f
fuf#givencmd#getSwitchOrder	bundle/FuzzyFinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#getSwitchOrder()$/;"	f
fuf#givencmd#launch	bundle/FuzzyFinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#launch(initialPattern, partialMatching, prompt, items)$/;"	f
fuf#givencmd#onInit	bundle/FuzzyFinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#onInit()$/;"	f
fuf#givencmd#renewCache	bundle/FuzzyFinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#renewCache()$/;"	f
fuf#givencmd#requiresOnCommandPre	bundle/FuzzyFinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#requiresOnCommandPre()$/;"	f
fuf#givendir#createHandler	bundle/FuzzyFinder/autoload/fuf/givendir.vim	/^function fuf#givendir#createHandler(base)$/;"	f
fuf#givendir#getEditableDataNames	bundle/FuzzyFinder/autoload/fuf/givendir.vim	/^function fuf#givendir#getEditableDataNames()$/;"	f
fuf#givendir#getSwitchOrder	bundle/FuzzyFinder/autoload/fuf/givendir.vim	/^function fuf#givendir#getSwitchOrder()$/;"	f
fuf#givendir#launch	bundle/FuzzyFinder/autoload/fuf/givendir.vim	/^function fuf#givendir#launch(initialPattern, partialMatching, prompt, items)$/;"	f
fuf#givendir#onInit	bundle/FuzzyFinder/autoload/fuf/givendir.vim	/^function fuf#givendir#onInit()$/;"	f
fuf#givendir#renewCache	bundle/FuzzyFinder/autoload/fuf/givendir.vim	/^function fuf#givendir#renewCache()$/;"	f
fuf#givendir#requiresOnCommandPre	bundle/FuzzyFinder/autoload/fuf/givendir.vim	/^function fuf#givendir#requiresOnCommandPre()$/;"	f
fuf#givenfile#createHandler	bundle/FuzzyFinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#createHandler(base)$/;"	f
fuf#givenfile#getEditableDataNames	bundle/FuzzyFinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#getEditableDataNames()$/;"	f
fuf#givenfile#getSwitchOrder	bundle/FuzzyFinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#getSwitchOrder()$/;"	f
fuf#givenfile#launch	bundle/FuzzyFinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#launch(initialPattern, partialMatching, prompt, items)$/;"	f
fuf#givenfile#onInit	bundle/FuzzyFinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#onInit()$/;"	f
fuf#givenfile#renewCache	bundle/FuzzyFinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#renewCache()$/;"	f
fuf#givenfile#requiresOnCommandPre	bundle/FuzzyFinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#requiresOnCommandPre()$/;"	f
fuf#glob	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#glob(expr)$/;"	f
fuf#help#createHandler	bundle/FuzzyFinder/autoload/fuf/help.vim	/^function fuf#help#createHandler(base)$/;"	f
fuf#help#getEditableDataNames	bundle/FuzzyFinder/autoload/fuf/help.vim	/^function fuf#help#getEditableDataNames()$/;"	f
fuf#help#getSwitchOrder	bundle/FuzzyFinder/autoload/fuf/help.vim	/^function fuf#help#getSwitchOrder()$/;"	f
fuf#help#onInit	bundle/FuzzyFinder/autoload/fuf/help.vim	/^function fuf#help#onInit()$/;"	f
fuf#help#renewCache	bundle/FuzzyFinder/autoload/fuf/help.vim	/^function fuf#help#renewCache()$/;"	f
fuf#help#requiresOnCommandPre	bundle/FuzzyFinder/autoload/fuf/help.vim	/^function fuf#help#requiresOnCommandPre()$/;"	f
fuf#jumplist#createHandler	bundle/FuzzyFinder/autoload/fuf/jumplist.vim	/^function fuf#jumplist#createHandler(base)$/;"	f
fuf#jumplist#getEditableDataNames	bundle/FuzzyFinder/autoload/fuf/jumplist.vim	/^function fuf#jumplist#getEditableDataNames()$/;"	f
fuf#jumplist#getSwitchOrder	bundle/FuzzyFinder/autoload/fuf/jumplist.vim	/^function fuf#jumplist#getSwitchOrder()$/;"	f
fuf#jumplist#onInit	bundle/FuzzyFinder/autoload/fuf/jumplist.vim	/^function fuf#jumplist#onInit()$/;"	f
fuf#jumplist#renewCache	bundle/FuzzyFinder/autoload/fuf/jumplist.vim	/^function fuf#jumplist#renewCache()$/;"	f
fuf#jumplist#requiresOnCommandPre	bundle/FuzzyFinder/autoload/fuf/jumplist.vim	/^function fuf#jumplist#requiresOnCommandPre()$/;"	f
fuf#launch	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#launch(modeName, initialPattern, partialMatching)$/;"	f
fuf#line#createHandler	bundle/FuzzyFinder/autoload/fuf/line.vim	/^function fuf#line#createHandler(base)$/;"	f
fuf#line#getEditableDataNames	bundle/FuzzyFinder/autoload/fuf/line.vim	/^function fuf#line#getEditableDataNames()$/;"	f
fuf#line#getSwitchOrder	bundle/FuzzyFinder/autoload/fuf/line.vim	/^function fuf#line#getSwitchOrder()$/;"	f
fuf#line#onInit	bundle/FuzzyFinder/autoload/fuf/line.vim	/^function fuf#line#onInit()$/;"	f
fuf#line#renewCache	bundle/FuzzyFinder/autoload/fuf/line.vim	/^function fuf#line#renewCache()$/;"	f
fuf#line#requiresOnCommandPre	bundle/FuzzyFinder/autoload/fuf/line.vim	/^function fuf#line#requiresOnCommandPre()$/;"	f
fuf#loadDataFile	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#loadDataFile(modeName, dataName)$/;"	f
fuf#makeNonPathItem	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#makeNonPathItem(word, menu)$/;"	f
fuf#makePathItem	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#makePathItem(fname, menu, appendsDirSuffix)$/;"	f
fuf#makePatternSet	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#makePatternSet(patternBase, interpreter, partialMatching)$/;"	f
fuf#makePreviewLinesAround	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#makePreviewLinesAround(lines, indices, page, maxHeight)$/;"	f
fuf#makePreviewLinesForFile	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#makePreviewLinesForFile(file, count, maxHeight)$/;"	f
fuf#mapToSetAbbrWithSnippedWordAsPath	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#mapToSetAbbrWithSnippedWordAsPath(items)$/;"	f
fuf#mapToSetSerialIndex	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#mapToSetSerialIndex(in, offset)$/;"	f
fuf#mrucmd#createHandler	bundle/FuzzyFinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#createHandler(base)$/;"	f
fuf#mrucmd#getEditableDataNames	bundle/FuzzyFinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#getEditableDataNames()$/;"	f
fuf#mrucmd#getSwitchOrder	bundle/FuzzyFinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#getSwitchOrder()$/;"	f
fuf#mrucmd#onCommandPre	bundle/FuzzyFinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#onCommandPre(cmd)$/;"	f
fuf#mrucmd#onInit	bundle/FuzzyFinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#onInit()$/;"	f
fuf#mrucmd#renewCache	bundle/FuzzyFinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#renewCache()$/;"	f
fuf#mrucmd#requiresOnCommandPre	bundle/FuzzyFinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#requiresOnCommandPre()$/;"	f
fuf#mrufile#createHandler	bundle/FuzzyFinder/autoload/fuf/mrufile.vim	/^function fuf#mrufile#createHandler(base)$/;"	f
fuf#mrufile#getEditableDataNames	bundle/FuzzyFinder/autoload/fuf/mrufile.vim	/^function fuf#mrufile#getEditableDataNames()$/;"	f
fuf#mrufile#getSwitchOrder	bundle/FuzzyFinder/autoload/fuf/mrufile.vim	/^function fuf#mrufile#getSwitchOrder()$/;"	f
fuf#mrufile#onInit	bundle/FuzzyFinder/autoload/fuf/mrufile.vim	/^function fuf#mrufile#onInit()$/;"	f
fuf#mrufile#renewCache	bundle/FuzzyFinder/autoload/fuf/mrufile.vim	/^function fuf#mrufile#renewCache()$/;"	f
fuf#mrufile#requiresOnCommandPre	bundle/FuzzyFinder/autoload/fuf/mrufile.vim	/^function fuf#mrufile#requiresOnCommandPre()$/;"	f
fuf#onComplete	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#onComplete(findstart, base)$/;"	f
fuf#openBuffer	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#openBuffer(bufNr, mode, reuse)$/;"	f
fuf#openFile	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#openFile(path, mode, reuse)$/;"	f
fuf#openHelp	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#openHelp(tag, mode)$/;"	f
fuf#openTag	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#openTag(tag, mode)$/;"	f
fuf#prejump	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#prejump(mode)$/;"	f
fuf#quickfix#createHandler	bundle/FuzzyFinder/autoload/fuf/quickfix.vim	/^function fuf#quickfix#createHandler(base)$/;"	f
fuf#quickfix#getEditableDataNames	bundle/FuzzyFinder/autoload/fuf/quickfix.vim	/^function fuf#quickfix#getEditableDataNames()$/;"	f
fuf#quickfix#getSwitchOrder	bundle/FuzzyFinder/autoload/fuf/quickfix.vim	/^function fuf#quickfix#getSwitchOrder()$/;"	f
fuf#quickfix#onInit	bundle/FuzzyFinder/autoload/fuf/quickfix.vim	/^function fuf#quickfix#onInit()$/;"	f
fuf#quickfix#renewCache	bundle/FuzzyFinder/autoload/fuf/quickfix.vim	/^function fuf#quickfix#renewCache()$/;"	f
fuf#quickfix#requiresOnCommandPre	bundle/FuzzyFinder/autoload/fuf/quickfix.vim	/^function fuf#quickfix#requiresOnCommandPre()$/;"	f
fuf#saveDataFile	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#saveDataFile(modeName, dataName, items)$/;"	f
fuf#setAbbrWithFormattedWord	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#setAbbrWithFormattedWord(item, abbrIndex)$/;"	f
fuf#setOneTimeVariables	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#setOneTimeVariables(...)$/;"	f
fuf#splitPath	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#splitPath(path)$/;"	f
fuf#suffixNumber	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#suffixNumber(str)$/;"	f
fuf#tag#createHandler	bundle/FuzzyFinder/autoload/fuf/tag.vim	/^function fuf#tag#createHandler(base)$/;"	f
fuf#tag#getEditableDataNames	bundle/FuzzyFinder/autoload/fuf/tag.vim	/^function fuf#tag#getEditableDataNames()$/;"	f
fuf#tag#getSwitchOrder	bundle/FuzzyFinder/autoload/fuf/tag.vim	/^function fuf#tag#getSwitchOrder()$/;"	f
fuf#tag#onInit	bundle/FuzzyFinder/autoload/fuf/tag.vim	/^function fuf#tag#onInit()$/;"	f
fuf#tag#renewCache	bundle/FuzzyFinder/autoload/fuf/tag.vim	/^function fuf#tag#renewCache()$/;"	f
fuf#tag#requiresOnCommandPre	bundle/FuzzyFinder/autoload/fuf/tag.vim	/^function fuf#tag#requiresOnCommandPre()$/;"	f
fuf#taggedfile#createHandler	bundle/FuzzyFinder/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#createHandler(base)$/;"	f
fuf#taggedfile#getEditableDataNames	bundle/FuzzyFinder/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#getEditableDataNames()$/;"	f
fuf#taggedfile#getSwitchOrder	bundle/FuzzyFinder/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#getSwitchOrder()$/;"	f
fuf#taggedfile#onInit	bundle/FuzzyFinder/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#onInit()$/;"	f
fuf#taggedfile#renewCache	bundle/FuzzyFinder/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#renewCache()$/;"	f
fuf#taggedfile#requiresOnCommandPre	bundle/FuzzyFinder/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#requiresOnCommandPre()$/;"	f
fuf#updateMruList	bundle/FuzzyFinder/autoload/fuf.vim	/^function fuf#updateMruList(mrulist, newItem, maxItem, exclude)$/;"	f
fugitive	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#buffer	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#extract_git_dir	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#foldtext	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#head	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#head(...)$/;"	f
fugitive#is_git_dir	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#reload_status	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#reload_status() abort$/;"	f
fugitive#repo	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#repo(...)$/;"	f
fugitive#statusline	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#statusline(...)$/;"	f
fugitive_blame	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_files	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_foldtext	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_foldtext$/;"	a
fugitive_remove	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_temp	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_temp$/;"	a
fugitive_utility	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_utility$/;"	a
function	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:function(name) abort$/;"	f
g:ConqueTerm_CWInsert	bundle/conque_2.3/plugin/conque_term.vim	/^    let g:ConqueTerm_CWInsert = 0$/;"	v
g:ConqueTerm_CloseOnEnd	bundle/conque_2.3/plugin/conque_term.vim	/^    let g:ConqueTerm_CloseOnEnd = 0$/;"	v
g:ConqueTerm_CodePage	bundle/conque_2.3/plugin/conque_term.vim	/^    let g:ConqueTerm_CodePage = 0$/;"	v
g:ConqueTerm_Color	bundle/conque_2.3/plugin/conque_term.vim	/^    let g:ConqueTerm_Color = 1$/;"	v
g:ConqueTerm_ColorMode	bundle/conque_2.3/plugin/conque_term.vim	/^    let g:ConqueTerm_ColorMode = ''$/;"	v
g:ConqueTerm_EscKey	bundle/conque_2.3/plugin/conque_term.vim	/^    let g:ConqueTerm_EscKey = '<Esc>'$/;"	v
g:ConqueTerm_ExecFileKey	bundle/conque_2.3/plugin/conque_term.vim	/^    let g:ConqueTerm_ExecFileKey = '<F11>'$/;"	v
g:ConqueTerm_FastMode	bundle/conque_2.3/plugin/conque_term.vim	/^    let g:ConqueTerm_FastMode = 0$/;"	v
g:ConqueTerm_Idx	bundle/conque_2.3/autoload/conque_term.vim	/^let g:ConqueTerm_Idx = 0$/;"	v
g:ConqueTerm_Idx	bundle/conque_2.3/plugin/conque_term.vim	/^let g:ConqueTerm_Idx = 0$/;"	v
g:ConqueTerm_InsertCharPre	bundle/conque_2.3/plugin/conque_term.vim	/^    let g:ConqueTerm_InsertCharPre = 0$/;"	v
g:ConqueTerm_InsertOnEnter	bundle/conque_2.3/plugin/conque_term.vim	/^    let g:ConqueTerm_InsertOnEnter = 0$/;"	v
g:ConqueTerm_Loaded	bundle/conque_2.3/plugin/conque_term.vim	/^let g:ConqueTerm_Loaded = 1$/;"	v
g:ConqueTerm_PromptRegex	bundle/conque_2.3/plugin/conque_term.vim	/^    let g:ConqueTerm_PromptRegex = '^\\w\\+@[0-9A-Za-z_.-]\\+:[0-9A-Za-z_.\/\\~,:-]\\+\\$'$/;"	v
g:ConqueTerm_PyExe	bundle/conque_2.3/plugin/conque_term.vim	/^    let g:ConqueTerm_PyExe = ''$/;"	v
g:ConqueTerm_PyVersion	bundle/conque_2.3/plugin/conque_term.vim	/^    let g:ConqueTerm_PyVersion = 2$/;"	v
g:ConqueTerm_ReadUnfocused	bundle/conque_2.3/plugin/conque_term.vim	/^    let g:ConqueTerm_ReadUnfocused = 0$/;"	v
g:ConqueTerm_SendFileKey	bundle/conque_2.3/plugin/conque_term.vim	/^    let g:ConqueTerm_SendFileKey = '<F10>'$/;"	v
g:ConqueTerm_SendFunctionKeys	bundle/conque_2.3/plugin/conque_term.vim	/^    let g:ConqueTerm_SendFunctionKeys = 0$/;"	v
g:ConqueTerm_SendVisKey	bundle/conque_2.3/plugin/conque_term.vim	/^    let g:ConqueTerm_SendVisKey = '<F9>'$/;"	v
g:ConqueTerm_SessionSupport	bundle/conque_2.3/plugin/conque_term.vim	/^    let g:ConqueTerm_SessionSupport = 0$/;"	v
g:ConqueTerm_StartMessages	bundle/conque_2.3/plugin/conque_term.vim	/^    let g:ConqueTerm_StartMessages = 1$/;"	v
g:ConqueTerm_Syntax	bundle/conque_2.3/plugin/conque_term.vim	/^    let g:ConqueTerm_Syntax = 'conque_term'$/;"	v
g:ConqueTerm_TERM	bundle/conque_2.3/plugin/conque_term.vim	/^    let g:ConqueTerm_TERM =  'vt100'$/;"	v
g:ConqueTerm_Terminals	bundle/conque_2.3/autoload/conque_term.vim	/^let g:ConqueTerm_Terminals = {}$/;"	v
g:ConqueTerm_TerminalsString	bundle/conque_2.3/autoload/conque_term.vim	/^let g:ConqueTerm_TerminalsString = ''$/;"	v
g:ConqueTerm_ToggleKey	bundle/conque_2.3/plugin/conque_term.vim	/^    let g:ConqueTerm_ToggleKey = '<F8>'$/;"	v
g:ConqueTerm_Version	bundle/conque_2.3/plugin/conque_term.vim	/^let g:ConqueTerm_Version = 230$/;"	v
g:EasyMotion_loaded	bundle/vim-easymotion/plugin/EasyMotion.vim	/^	let g:EasyMotion_loaded = 1$/;"	v
g:NERDTreeBookmark	bundle/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeDirNode	bundle/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeFileNode	bundle/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeIgnore	bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreePath	bundle/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreeSortOrder	bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}"$/;"	v
g:Pl#HL	bundle/vim-powerline/autoload/Pl.vim	/^	let g:Pl#HL = []$/;"	v
g:Pl#OLD_STL	bundle/vim-powerline/autoload/Pl.vim	/^	let g:Pl#OLD_STL = ''$/;"	v
g:Pl#Parser#Symbols	bundle/vim-powerline/autoload/Pl/Parser.vim	/^	let g:Pl#Parser#Symbols[g:Powerline_symbols].dividers = g:Powerline_dividers_override$/;"	v
g:Pl#Parser#Symbols	bundle/vim-powerline/autoload/Pl/Parser.vim	/^	let g:Pl#Parser#Symbols[g:Powerline_symbols].symbols[s:key] = s:value$/;"	v
g:Pl#Parser#Symbols	bundle/vim-powerline/autoload/Pl/Parser.vim	/^let g:Pl#Parser#Symbols = {$/;"	v
g:Pl#THEME	bundle/vim-powerline/autoload/Pl.vim	/^	let g:Pl#THEME = []$/;"	v
g:Pl#THEME_CALLBACKS	bundle/vim-powerline/autoload/Pl.vim	/^	let g:Pl#THEME_CALLBACKS = []$/;"	v
g:Powerline#Colorschemes#default#colorscheme	bundle/vim-powerline/autoload/Powerline/Colorschemes/default.vim	/^let g:Powerline#Colorschemes#default#colorscheme = Pl#Colorscheme#Init([$/;"	v
g:Powerline#Colorschemes#skwp#colorscheme	bundle/vim-powerline/autoload/Powerline/Colorschemes/skwp.vim	/^let g:Powerline#Colorschemes#skwp#colorscheme = Pl#Colorscheme#Init([$/;"	v
g:Powerline#Matches#matches	bundle/vim-powerline/autoload/Powerline/Matches.vim	/^let g:Powerline#Matches#matches = {$/;"	v
g:Powerline#Segments#ctrlp#segments	bundle/vim-powerline/autoload/Powerline/Segments/ctrlp.vim	/^let g:Powerline#Segments#ctrlp#segments = Pl#Segment#Init(['ctrlp'$/;"	v
g:Powerline#Segments#ctrlp#segments#focus	bundle/vim-powerline/autoload/Powerline/Segments/ctrlp.vim	/^	let g:Powerline#Segments#ctrlp#segments#focus = '%{"%0"}'$/;"	v
g:Powerline#Segments#ctrlp#segments#next	bundle/vim-powerline/autoload/Powerline/Segments/ctrlp.vim	/^	let g:Powerline#Segments#ctrlp#segments#next = '%-3{"%5"}'$/;"	v
g:Powerline#Segments#ctrlp#segments#prev	bundle/vim-powerline/autoload/Powerline/Segments/ctrlp.vim	/^	let g:Powerline#Segments#ctrlp#segments#prev = '%-3{"%3"}'$/;"	v
g:Powerline#Segments#ft_man#segments	bundle/vim-powerline/autoload/Powerline/Segments/ft_man.vim	/^let g:Powerline#Segments#ft_man#segments = Pl#Segment#Init(['ft_man',$/;"	v
g:Powerline#Segments#fugitive#segments	bundle/vim-powerline/autoload/Powerline/Segments/fugitive.vim	/^let g:Powerline#Segments#fugitive#segments = Pl#Segment#Init(['fugitive',$/;"	v
g:Powerline#Segments#hgrev#segments	bundle/vim-powerline/autoload/Powerline/Segments/hgrev.vim	/^let g:Powerline#Segments#hgrev#segments = Pl#Segment#Init(['hgrev',$/;"	v
g:Powerline#Segments#rvm#segments	bundle/vim-powerline/autoload/Powerline/Segments/rvm.vim	/^let g:Powerline#Segments#rvm#segments = Pl#Segment#Init(['rvm',$/;"	v
g:Powerline#Segments#segments	bundle/vim-powerline/autoload/Powerline/Segments.vim	/^let g:Powerline#Segments#segments = Pl#Segment#Init([$/;"	v
g:Powerline#Segments#syntastic#segments	bundle/vim-powerline/autoload/Powerline/Segments/syntastic.vim	/^let g:Powerline#Segments#syntastic#segments = Pl#Segment#Init(['syntastic',$/;"	v
g:Powerline#Segments#tagbar#segments	bundle/vim-powerline/autoload/Powerline/Segments/tagbar.vim	/^let g:Powerline#Segments#tagbar#segments = Pl#Segment#Init(['tagbar',$/;"	v
g:Powerline#Segments#virtualenv#segments	bundle/vim-powerline/autoload/Powerline/Segments/virtualenv.vim	/^let g:Powerline#Segments#virtualenv#segments = Pl#Segment#Init(['virtualenv',$/;"	v
g:Powerline#Themes#default#theme	bundle/vim-powerline/autoload/Powerline/Themes/default.vim	/^let g:Powerline#Themes#default#theme = Pl#Theme#Create($/;"	v
g:Powerline#Themes#skwp#theme	bundle/vim-powerline/autoload/Powerline/Themes/skwp.vim	/^let g:Powerline#Themes#skwp#theme = Pl#Theme#Create($/;"	v
g:Powerline_loaded	bundle/vim-powerline/plugin/Powerline.vim	/^	let g:Powerline_loaded = 1$/;"	v
g:SingleCompile_menumode	bundle/SingleCompile/plugin/SingleCompile.vim	/^    let g:SingleCompile_menumode = 1$/;"	v
g:colors_name	colors/rails_envy.vim	/^let g:colors_name = "Rails Envy"$/;"	v
g:colors_name	colors/railscasts.vim	/^let g:colors_name = "Railscasts"$/;"	v
g:colors_name	colors/zenburn.vim	/^let g:colors_name="zenburn"$/;"	v
g:did_ft	bundle/snipmate.vim/plugin/snipMate.vim	/^let g:did_ft = {}$/;"	v
g:fugitive_git_executable	bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:loaded_AutoClose	bundle/AutoClose--Alves/plugin/autoclose.vim	/^let g:loaded_AutoClose = 1$/;"	v
g:loaded_SingleCompile	bundle/SingleCompile/plugin/SingleCompile.vim	/^let g:loaded_SingleCompile = 1$/;"	v
g:loaded_autoload_l9	bundle/L9/autoload/l9.vim	/^let g:loaded_autoload_l9 = 1$/;"	v
g:loaded_fugitive	bundle/vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_neocomplcache	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:loaded_neocomplcache = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_pathogen	autoload/pathogen.vim	/^let g:loaded_pathogen = 1$/;"	v
g:loaded_tagbar	bundle/tagbar/autoload/tagbar.vim	/^let g:loaded_tagbar = 1$/;"	v
g:neocomplcache_auto_completion_start_length	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_auto_completion_start_length =$/;"	v
g:neocomplcache_caching_limit_file_size	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_caching_limit_file_size =$/;"	v
g:neocomplcache_compare_function	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_compare_function =$/;"	v
g:neocomplcache_ctags_program	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_ctags_program =$/;"	v
g:neocomplcache_cursor_hold_i_time	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_cursor_hold_i_time =$/;"	v
g:neocomplcache_disable_auto_complete	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_disable_auto_complete =$/;"	v
g:neocomplcache_disable_caching_file_path_pattern	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_disable_caching_file_path_pattern =$/;"	v
g:neocomplcache_enable_auto_delimiter	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_auto_delimiter =$/;"	v
g:neocomplcache_enable_auto_select	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_auto_select =$/;"	v
g:neocomplcache_enable_caching_message	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_caching_message =$/;"	v
g:neocomplcache_enable_camel_case_completion	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_camel_case_completion =$/;"	v
g:neocomplcache_enable_cursor_hold_i	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_cursor_hold_i =$/;"	v
g:neocomplcache_enable_debug	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_debug =$/;"	v
g:neocomplcache_enable_fuzzy_completion	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_fuzzy_completion =$/;"	v
g:neocomplcache_enable_ignore_case	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_ignore_case =$/;"	v
g:neocomplcache_enable_insert_char_pre	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_insert_char_pre =$/;"	v
g:neocomplcache_enable_prefetch	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_prefetch =$/;"	v
g:neocomplcache_enable_smart_case	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_smart_case =$/;"	v
g:neocomplcache_enable_underbar_completion	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_underbar_completion =$/;"	v
g:neocomplcache_enable_wildcard	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_wildcard =$/;"	v
g:neocomplcache_force_overwrite_completefunc	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_force_overwrite_completefunc =$/;"	v
g:neocomplcache_fuzzy_completion_start_length	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_fuzzy_completion_start_length =$/;"	v
g:neocomplcache_include_exprs	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^  let g:neocomplcache_include_exprs = {}$/;"	v
g:neocomplcache_include_paths	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^  let g:neocomplcache_include_paths = {}$/;"	v
g:neocomplcache_include_patterns	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^  let g:neocomplcache_include_patterns = {}$/;"	v
g:neocomplcache_include_suffixes	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^  let g:neocomplcache_include_suffixes = {}$/;"	v
g:neocomplcache_lock_buffer_name_pattern	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_lock_buffer_name_pattern =$/;"	v
g:neocomplcache_lock_iminsert	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_lock_iminsert =$/;"	v
g:neocomplcache_manual_completion_start_length	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_manual_completion_start_length =$/;"	v
g:neocomplcache_max_keyword_width	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_max_keyword_width =$/;"	v
g:neocomplcache_max_list	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_max_list =$/;"	v
g:neocomplcache_max_menu_width	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_max_menu_width =$/;"	v
g:neocomplcache_min_keyword_length	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_min_keyword_length =$/;"	v
g:neocomplcache_min_syntax_length	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^  let g:neocomplcache_min_syntax_length = 4$/;"	v
g:neocomplcache_release_cache_time	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_release_cache_time =$/;"	v
g:neocomplcache_source_completion_length	bundle/neocomplcache/plugin/neocomplcache.vim	/^  let g:neocomplcache_source_completion_length =$/;"	v
g:neocomplcache_source_completion_length	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_source_completion_length =$/;"	v
g:neocomplcache_source_disable	bundle/neocomplcache/plugin/neocomplcache.vim	/^  let g:neocomplcache_source_disable =$/;"	v
g:neocomplcache_source_disable	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_source_disable =$/;"	v
g:neocomplcache_source_rank	bundle/neocomplcache/plugin/neocomplcache.vim	/^  let g:neocomplcache_source_rank = g:neocomplcache_plugin_rank$/;"	v
g:neocomplcache_source_rank	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_source_rank =$/;"	v
g:neocomplcache_temporary_dir	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_temporary_dir =$/;"	v
g:tagbar_autoclose	bundle/tagbar/plugin/tagbar.vim	/^    let g:tagbar_autoclose = 0$/;"	v
g:tagbar_autofocus	bundle/tagbar/plugin/tagbar.vim	/^    let g:tagbar_autofocus = 0$/;"	v
g:tagbar_autoshowtag	bundle/tagbar/plugin/tagbar.vim	/^    let g:tagbar_autoshowtag = 0$/;"	v
g:tagbar_compact	bundle/tagbar/plugin/tagbar.vim	/^    let g:tagbar_compact = 0$/;"	v
g:tagbar_expand	bundle/tagbar/plugin/tagbar.vim	/^    let g:tagbar_expand = 0$/;"	v
g:tagbar_foldlevel	bundle/tagbar/plugin/tagbar.vim	/^    let g:tagbar_foldlevel = 99$/;"	v
g:tagbar_iconchars	bundle/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['+', '-']$/;"	v
g:tagbar_iconchars	bundle/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['▶', '▼']$/;"	v
g:tagbar_left	bundle/tagbar/plugin/tagbar.vim	/^    let g:tagbar_left = 0$/;"	v
g:tagbar_singleclick	bundle/tagbar/plugin/tagbar.vim	/^    let g:tagbar_singleclick = 0$/;"	v
g:tagbar_sort	bundle/tagbar/plugin/tagbar.vim	/^    let g:tagbar_sort = 1$/;"	v
g:tagbar_systemenc	bundle/tagbar/plugin/tagbar.vim	/^    let g:tagbar_systemenc = &encoding$/;"	v
g:tagbar_width	bundle/tagbar/plugin/tagbar.vim	/^    let g:tagbar_width = 40$/;"	v
g:zenburn_alternate_Error	colors/zenburn.vim	/^    let g:zenburn_alternate_Error = 0$/;"	v
g:zenburn_alternate_Include	colors/zenburn.vim	/^    let g:zenburn_alternate_Include = 0$/;"	v
g:zenburn_alternate_Visual	colors/zenburn.vim	/^    let g:zenburn_alternate_Visual = 0$/;"	v
g:zenburn_color_also_Ignore	colors/zenburn.vim	/^    let g:zenburn_color_also_Ignore = 0$/;"	v
g:zenburn_disable_ctags_highlighting_support	colors/zenburn.vim	/^    let g:zenburn_disable_ctags_highlighting_support = 0$/;"	v
g:zenburn_force_dark_Background	colors/zenburn.vim	/^    let g:zenburn_force_dark_Background = 0$/;"	v
g:zenburn_high_Contrast	colors/zenburn.vim	/^    let g:zenburn_high_Contrast = 0$/;"	v
g:zenburn_old_Visual	colors/zenburn.vim	/^    let g:zenburn_old_Visual = 0$/;"	v
g:zenburn_unified_CursorColumn	colors/zenburn.vim	/^    let g:zenburn_unified_CursorColumn = 0$/;"	v
getBufIndicator	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^function s:getBufIndicator(bufNr)$/;"	f
getChangesLines	bundle/FuzzyFinder/autoload/fuf/changelist.vim	/^function s:getChangesLines()$/;"	f
getCurrentHelpTagFiles	bundle/FuzzyFinder/autoload/fuf/help.vim	/^function s:getCurrentHelpTagFiles()$/;"	f
getEditableDataFiles	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:getEditableDataFiles(modeName)$/;"	f
getFileType	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:getFileType(bufNr)$/;"	f
getHelpTagEntries	bundle/FuzzyFinder/autoload/fuf/help.vim	/^function s:getHelpTagEntries(tagFile)$/;"	f
getJumpsLines	bundle/FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:getJumpsLines()$/;"	f
getJumpsLines	bundle/FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:getJumpsLines()$/;"	f
getLastBlockLength	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:getLastBlockLength(pattern, patternIsPath)$/;"	f
getLinePattern	bundle/FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:getLinePattern(lnum)$/;"	f
getMatchingIndex	bundle/FuzzyFinder/autoload/fuf/help.vim	/^function s:getMatchingIndex(lines, pattern)$/;"	f
getMatchingIndex	bundle/FuzzyFinder/autoload/fuf/tag.vim	/^function s:getMatchingIndex(lines, cmd)$/;"	f
getMatchingLineNumber	bundle/FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:getMatchingLineNumber(lines, pattern, lnumBegin)$/;"	f
getPath	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:getPath(ln)$/;"	f
getSnippedHead	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:getSnippedHead(head, baseLen)$/;"	f
getTagData	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:getTagData(bufNrs)$/;"	f
getTagItems	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:getTagItems(bufNr)$/;"	f
getTagNames	bundle/FuzzyFinder/autoload/fuf/tag.vim	/^function s:getTagNames(tagFile)$/;"	f
getTaggedFileList	bundle/FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:getTaggedFileList(tagfile)$/;"	f
getTreeWinNum	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:getTreeWinNum()$/;"	f
getWordBoundaries	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:getWordBoundaries(word)$/;"	f
get_augrouplist	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_augrouplist()"{{{$/;"	f
get_buffer_include_files	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:get_buffer_include_files(bufnumber)"{{{$/;"	f
get_buffer_info	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    def get_buffer_info(self):$/;"	m	class:ConqueSoleSubprocess	access:public
get_buffer_line	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def get_buffer_line(self, line):$/;"	m	class:Conque	access:public
get_buffer_line	bundle/conque_2.3/autoload/conque_term/conque_screen.py	/^    def get_buffer_line(self, line):$/;"	m	class:ConqueScreen	access:public
get_buffer_line	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    def get_buffer_line(self, line):$/;"	m	class:ConqueSole	access:public
get_cached_script_candidates	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_cached_script_candidates()"{{{$/;"	f
get_cmdlist	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_cmdlist()"{{{$/;"	f
get_complete_words	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:get_complete_words(complete_results, cur_keyword_pos, cur_keyword_str) "{{{$/;"	f
get_context_filetype	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! s:get_context_filetype(filetype)"{{{$/;"	f
get_cur_keyword_pos	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:get_cur_keyword_pos(complete_results)"{{{$/;"	f
get_cur_text	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! s:get_cur_text()"{{{$/;"	f
get_dim	bundle/vim-powerline/fontpatcher/fontpatcher	/^	def get_dim(glyph):$/;"	f	access:public
get_endlist	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_endlist()"{{{$/;"	f
get_envlist	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_envlist()"{{{$/;"	f
get_frequencies	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! s:get_frequencies()"{{{$/;"	f
get_functionlist	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_functionlist()"{{{$/;"	f
get_glob_files	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:get_glob_files(cur_keyword_str, path)"{{{$/;"	f
get_include_files	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:get_include_files(cur_keyword_str)"{{{$/;"	f
get_include_files	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:get_include_files(nestlevel, lines, filetype, pattern, path, expr)"{{{$/;"	f
get_last_status	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:get_last_status()"{{{$/;"	f
get_local_variables	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_local_variables()"{{{$/;"	f
get_mappinglist	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_mappinglist()"{{{$/;"	f
get_member_list	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:get_member_list(cur_text, var_name)"{{{$/;"	f
get_member_pattern	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:get_member_pattern(filetype)"{{{$/;"	f
get_new_output	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    def get_new_output(self, lines, update_top, stats):$/;"	m	class:ConqueSole	access:public
get_omni_funcs	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:get_omni_funcs(filetype)"{{{$/;"	f
get_omni_list	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:get_omni_list(list)"{{{$/;"	f
get_real_idx	bundle/conque_2.3/autoload/conque_term/conque_screen.py	/^    def get_real_idx(self, line):$/;"	m	class:ConqueScreen	access:public
get_screen_text	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    def get_screen_text(self):$/;"	m	class:ConqueSoleSubprocess	access:public
get_script_candidates	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_script_candidates(bufnumber)"{{{$/;"	f
get_sources_list	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:get_sources_list()"{{{$/;"	f
get_sources_list	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:get_sources_list()"{{{$/;"	f
get_stats	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^    def get_stats(self):$/;"	m	class:ConqueSoleWrapper	access:public
get_top	bundle/conque_2.3/autoload/conque_term/conque_screen.py	/^    def get_top(self):$/;"	m	class:ConqueScreen	access:public
get_variable_type	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_variable_type(expression)"{{{$/;"	f
get_variablelist	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_variablelist(dict, prefix)"{{{$/;"	f
getchar	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:getchar(...)$/;"	f
getchar_safe	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:getchar_safe(...)$/;"	f
getfilename	bundle/neocomplcache/autoload/vital/_9813ec6/system/cache.vim	/^function! s:getfilename(cache_dir, filename)$/;"	f
github_url	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:github_url(repo,url,rev,commit,path,type,line1,line2) abort$/;"	f
glob	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:glob(...)$/;"	f
globpath	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:globpath(...)$/;"	f
gsub	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
handle	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    handle = None$/;"	v	class:ConqueSoleSubprocess
handle	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^    handle = None$/;"	v	class:ConqueSoleWrapper
handleFailedAssersion	bundle/L9/plugin/l9.vim	/^  function s:handleFailedAssersion(expr)$/;"	f
handleLeftClick	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:handleLeftClick()$/;"	f
handleMiddleMouse	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:handleMiddleMouse()$/;"	f
handler.getCompleteItems	bundle/FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/FuzzyFinder/autoload/fuf/callbackfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/FuzzyFinder/autoload/fuf/callbackitem.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/FuzzyFinder/autoload/fuf/changelist.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/FuzzyFinder/autoload/fuf/dir.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/FuzzyFinder/autoload/fuf/file.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/FuzzyFinder/autoload/fuf/givencmd.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/FuzzyFinder/autoload/fuf/givendir.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/FuzzyFinder/autoload/fuf/givenfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/FuzzyFinder/autoload/fuf/help.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/FuzzyFinder/autoload/fuf/line.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/FuzzyFinder/autoload/fuf/mrucmd.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/FuzzyFinder/autoload/fuf/tag.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getModeName	bundle/FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/FuzzyFinder/autoload/fuf/callbackfile.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/FuzzyFinder/autoload/fuf/callbackitem.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/FuzzyFinder/autoload/fuf/changelist.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/FuzzyFinder/autoload/fuf/dir.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/FuzzyFinder/autoload/fuf/file.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/FuzzyFinder/autoload/fuf/givencmd.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/FuzzyFinder/autoload/fuf/givendir.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/FuzzyFinder/autoload/fuf/givenfile.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/FuzzyFinder/autoload/fuf/help.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/FuzzyFinder/autoload/fuf/line.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/FuzzyFinder/autoload/fuf/mrucmd.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/FuzzyFinder/autoload/fuf/tag.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:handler.getModeName()$/;"	f
handler.getPreviewHeight	bundle/FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/FuzzyFinder/autoload/fuf/callbackfile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/FuzzyFinder/autoload/fuf/callbackitem.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/FuzzyFinder/autoload/fuf/changelist.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/FuzzyFinder/autoload/fuf/dir.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/FuzzyFinder/autoload/fuf/file.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/FuzzyFinder/autoload/fuf/givencmd.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/FuzzyFinder/autoload/fuf/givendir.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/FuzzyFinder/autoload/fuf/givenfile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/FuzzyFinder/autoload/fuf/help.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/FuzzyFinder/autoload/fuf/line.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/FuzzyFinder/autoload/fuf/mrucmd.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/FuzzyFinder/autoload/fuf/tag.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPrompt	bundle/FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/FuzzyFinder/autoload/fuf/callbackfile.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/FuzzyFinder/autoload/fuf/callbackitem.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/FuzzyFinder/autoload/fuf/changelist.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/FuzzyFinder/autoload/fuf/dir.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/FuzzyFinder/autoload/fuf/file.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/FuzzyFinder/autoload/fuf/givencmd.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/FuzzyFinder/autoload/fuf/givendir.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/FuzzyFinder/autoload/fuf/givenfile.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/FuzzyFinder/autoload/fuf/help.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/FuzzyFinder/autoload/fuf/line.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/FuzzyFinder/autoload/fuf/mrucmd.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/FuzzyFinder/autoload/fuf/tag.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:handler.getPrompt()$/;"	f
handler.isOpenable	bundle/FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/FuzzyFinder/autoload/fuf/callbackfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/FuzzyFinder/autoload/fuf/callbackitem.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/FuzzyFinder/autoload/fuf/changelist.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/FuzzyFinder/autoload/fuf/dir.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/FuzzyFinder/autoload/fuf/file.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/FuzzyFinder/autoload/fuf/givencmd.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/FuzzyFinder/autoload/fuf/givendir.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/FuzzyFinder/autoload/fuf/givenfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/FuzzyFinder/autoload/fuf/help.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/FuzzyFinder/autoload/fuf/line.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/FuzzyFinder/autoload/fuf/mrucmd.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/FuzzyFinder/autoload/fuf/tag.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.makePatternSet	bundle/FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/FuzzyFinder/autoload/fuf/callbackfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/FuzzyFinder/autoload/fuf/callbackitem.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/FuzzyFinder/autoload/fuf/changelist.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/FuzzyFinder/autoload/fuf/dir.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/FuzzyFinder/autoload/fuf/file.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/FuzzyFinder/autoload/fuf/givencmd.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/FuzzyFinder/autoload/fuf/givendir.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/FuzzyFinder/autoload/fuf/givenfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/FuzzyFinder/autoload/fuf/help.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/FuzzyFinder/autoload/fuf/line.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/FuzzyFinder/autoload/fuf/mrucmd.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/FuzzyFinder/autoload/fuf/tag.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePreviewLines	bundle/FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/FuzzyFinder/autoload/fuf/callbackfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/FuzzyFinder/autoload/fuf/callbackitem.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/FuzzyFinder/autoload/fuf/changelist.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/FuzzyFinder/autoload/fuf/dir.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/FuzzyFinder/autoload/fuf/file.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/FuzzyFinder/autoload/fuf/givencmd.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/FuzzyFinder/autoload/fuf/givendir.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/FuzzyFinder/autoload/fuf/givenfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/FuzzyFinder/autoload/fuf/help.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/FuzzyFinder/autoload/fuf/line.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/FuzzyFinder/autoload/fuf/mrucmd.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/FuzzyFinder/autoload/fuf/tag.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.onModeEnterPost	bundle/FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/FuzzyFinder/autoload/fuf/callbackfile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/FuzzyFinder/autoload/fuf/callbackitem.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/FuzzyFinder/autoload/fuf/changelist.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/FuzzyFinder/autoload/fuf/dir.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/FuzzyFinder/autoload/fuf/file.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/FuzzyFinder/autoload/fuf/givencmd.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/FuzzyFinder/autoload/fuf/givendir.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/FuzzyFinder/autoload/fuf/givenfile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/FuzzyFinder/autoload/fuf/help.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/FuzzyFinder/autoload/fuf/line.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/FuzzyFinder/autoload/fuf/mrucmd.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/FuzzyFinder/autoload/fuf/tag.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPre	bundle/FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/FuzzyFinder/autoload/fuf/callbackfile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/FuzzyFinder/autoload/fuf/callbackitem.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/FuzzyFinder/autoload/fuf/changelist.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/FuzzyFinder/autoload/fuf/dir.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/FuzzyFinder/autoload/fuf/file.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/FuzzyFinder/autoload/fuf/givencmd.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/FuzzyFinder/autoload/fuf/givendir.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/FuzzyFinder/autoload/fuf/givenfile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/FuzzyFinder/autoload/fuf/help.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/FuzzyFinder/autoload/fuf/line.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/FuzzyFinder/autoload/fuf/mrucmd.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/FuzzyFinder/autoload/fuf/tag.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeLeavePost	bundle/FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/FuzzyFinder/autoload/fuf/callbackfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/FuzzyFinder/autoload/fuf/callbackitem.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/FuzzyFinder/autoload/fuf/changelist.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/FuzzyFinder/autoload/fuf/dir.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/FuzzyFinder/autoload/fuf/file.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/FuzzyFinder/autoload/fuf/givencmd.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/FuzzyFinder/autoload/fuf/givendir.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/FuzzyFinder/autoload/fuf/givenfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/FuzzyFinder/autoload/fuf/help.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/FuzzyFinder/autoload/fuf/line.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/FuzzyFinder/autoload/fuf/mrucmd.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/FuzzyFinder/autoload/fuf/tag.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onOpen	bundle/FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/FuzzyFinder/autoload/fuf/callbackfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/FuzzyFinder/autoload/fuf/callbackitem.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/FuzzyFinder/autoload/fuf/changelist.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/FuzzyFinder/autoload/fuf/dir.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/FuzzyFinder/autoload/fuf/file.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/FuzzyFinder/autoload/fuf/givencmd.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/FuzzyFinder/autoload/fuf/givendir.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/FuzzyFinder/autoload/fuf/givenfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/FuzzyFinder/autoload/fuf/help.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/FuzzyFinder/autoload/fuf/line.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/FuzzyFinder/autoload/fuf/mrucmd.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/FuzzyFinder/autoload/fuf/tag.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handlerBase.addStat	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.addStat(pattern, word)$/;"	f
handlerBase.concretize	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.concretize(deriv)$/;"	f
handlerBase.existsPrompt	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.existsPrompt(line)$/;"	f
handlerBase.getMatchingCompleteItems	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.getMatchingCompleteItems(patternBase)$/;"	f
handlerBase.onBs	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.onBs()$/;"	f
handlerBase.onComplete	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.onComplete(findstart, base)$/;"	f
handlerBase.onCr	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.onCr(openType)$/;"	f
handlerBase.onCursorMovedI	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.onCursorMovedI()$/;"	f
handlerBase.onDeleteWord	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.onDeleteWord()$/;"	f
handlerBase.onInsertLeave	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.onInsertLeave()$/;"	f
handlerBase.onPreviewBase	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.onPreviewBase(repeatable)$/;"	f
handlerBase.onRecallPattern	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.onRecallPattern(shift)$/;"	f
handlerBase.onSwitchMatching	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.onSwitchMatching()$/;"	f
handlerBase.onSwitchMode	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.onSwitchMode(shift)$/;"	f
handlerBase.removePrompt	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.removePrompt(line)$/;"	f
handlerBase.restorePrompt	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.restorePrompt(line)$/;"	f
has	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:has(list, Value)$/;"	f
has_index	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:has_index(list, index)$/;"	f
has_opt	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:has_opt(options, name)$/;"	f
has_vimproc	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:has_vimproc()"{{{$/;"	f
hash_screen_alignment_test	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def hash_screen_alignment_test(self):$/;"	m	class:Conque	access:public
help	bundle/colorselector/plugin/colorselector.vim	/^fun! s:help()$/;"	f
highlightError	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:highlightError()$/;"	f
highlightPrompt	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:highlightPrompt(prompt)$/;"	f
highlight_groups	bundle/conque_2.3/autoload/conque_term/conque.py	/^    highlight_groups = {}$/;"	v	class:Conque
hs_highlight_boolean	colors/solarized_light.vim	/^let hs_highlight_boolean=1$/;"	v
hs_highlight_delimiters	colors/solarized_light.vim	/^let hs_highlight_delimiters=1$/;"	v
iconv	bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^function! s:iconv(expr, from, to)$/;"	f
iconv	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:iconv(expr, from, to)$/;"	f
idle	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def idle(self):$/;"	m	class:Conque	access:public
idle	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    def idle(self):$/;"	m	class:ConqueSole	access:public
idle	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^    def idle(self):$/;"	m	class:ConqueSoleWrapper	access:public
idle_sleep_time	bundle/conque_2.3/autoload/conque_term/conque_sole_communicator.py	/^        idle_sleep_time = 0.10$/;"	v
import	bundle/neocomplcache/autoload/vital/_9813ec6.vim	/^function! s:import(name, ...)$/;"	f
indentLevelFor	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:indentLevelFor(line)$/;"	f
initNerdTree	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:initNerdTree(name)$/;"	f
initNerdTreeInPlace	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:initNerdTreeInPlace(dir)$/;"	f
initNerdTreeMirror	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:initNerdTreeMirror()$/;"	f
initVariable	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
init_shared_memory	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    def init_shared_memory(self, mem_key):$/;"	m	class:ConqueSoleSubprocess	access:public
init_shared_memory	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^    def init_shared_memory(self, mem_key):$/;"	m	class:ConqueSoleWrapper	access:public
init_tabstops	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def init_tabstops(self):$/;"	m	class:Conque	access:public
initialize	bundle/FuzzyFinder/plugin/fuf.vim	/^function s:initialize()$/;"	f
initialize_buffer_variable	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! s:initialize_buffer_variable()"{{{$/;"	f
initialize_include	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:initialize_include(filename, filetype)"{{{$/;"	f
initialize_source	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:initialize_source(srcname)"{{{$/;"	f
initialize_source	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:initialize_source(srcname)"{{{$/;"	f
initialize_tags	bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:initialize_tags(filename)"{{{$/;"	f
input_buffer	bundle/conque_2.3/autoload/conque_term/conque.py	/^    input_buffer = []$/;"	v	class:Conque
input_helper	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:input_helper(funcname, args)$/;"	f
input_safe	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:input_safe(...)$/;"	f
insert	bundle/conque_2.3/autoload/conque_term/conque_screen.py	/^    def insert(self, line, value):$/;"	m	class:ConqueScreen	access:public
insert_enter	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def insert_enter(self):$/;"	m	class:Conque	access:public
install_file	bundle/colorselector/Makefile	/^install_file = \\$/;"	m
instaweb_url	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:instaweb_url(repo,rev,commit,path,type,...) abort$/;"	f
interpretPrimaryPatternForNonPath	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:interpretPrimaryPatternForNonPath(pattern)$/;"	f
interpretPrimaryPatternForPath	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:interpretPrimaryPatternForPath(pattern)$/;"	f
interpretPrimaryPatternForPathTail	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:interpretPrimaryPatternForPathTail(pattern)$/;"	f
isTreeOpen	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:isTreeOpen()$/;"	f
isWindowUsable	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:isWindowUsable(winnumber)$/;"	f
is_alive	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    def is_alive(self):$/;"	m	class:ConqueSoleSubprocess	access:public
is_alive	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    is_alive = True$/;"	v	class:ConqueSoleSubprocess
is_alive	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^    def is_alive(self):$/;"	m	class:ConqueSoleWrapper	access:public
is_alive	bundle/conque_2.3/autoload/conque_term/conque_subprocess.py	/^    def is_alive(self):$/;"	m	class:ConqueSubprocess	access:public
is_cygwin	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:is_cygwin()"{{{$/;"	f
is_dict	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:is_dict(Value)$/;"	f
is_float	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:is_float(Value)$/;"	f
is_funcref	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:is_funcref(Value)$/;"	f
is_idle	bundle/conque_2.3/autoload/conque_term/conque_sole_communicator.py	/^                        is_idle = False$/;"	v
is_idle	bundle/conque_2.3/autoload/conque_term/conque_sole_communicator.py	/^                        is_idle = True$/;"	v
is_idle	bundle/conque_2.3/autoload/conque_term/conque_sole_communicator.py	/^                is_idle = True$/;"	v
is_idle	bundle/conque_2.3/autoload/conque_term/conque_sole_communicator.py	/^        is_idle = False$/;"	v
is_integer	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:is_integer(Value)$/;"	f
is_list	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:is_list(Value)$/;"	f
is_mac	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:is_mac()"{{{$/;"	f
is_number	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:is_number(Value)$/;"	f
is_numeric	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:is_numeric(Value)$/;"	f
is_string	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:is_string(Value)$/;"	f
is_windows	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:is_windows()"{{{$/;"	f
jumpToBookmark	bundle/FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:jumpToBookmark(path, mode, pattern, lnum)$/;"	f
jumpToChild	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToChild(currentNode, direction)$/;"	f
jumpToFirstChild	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToFirstChild(node)$/;"	f
jumpToLastChild	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToLastChild(node)$/;"	f
jumpToNextSibling	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToNextSibling(node)$/;"	f
jumpToParent	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToParent(node)$/;"	f
jumpToPrevSibling	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToPrevSibling(node)$/;"	f
jumpToRoot	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToRoot()$/;"	f
jumpToSibling	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToSibling(currentNode, forward)$/;"	f
jumpToTag	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:jumpToTag(item, mode)$/;"	f
known_files.get	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.get(fname) abort dict$/;"	f
known_files.getCurrent	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.getCurrent() abort dict$/;"	f
known_files.has	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.has(fname) abort dict$/;"	f
known_files.put	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.put(fileinfo, ...) abort dict$/;"	f
known_files.rm	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.rm(fname) abort dict$/;"	f
known_files.setCurrent	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.setCurrent(fileinfo) abort dict$/;"	f
l	bundle/conque_2.3/autoload/conque_term/conque.py	/^    l = 1 # current cursor line$/;"	v	class:Conque
l9#async#execute	bundle/L9/autoload/l9/async.vim	/^function l9#async#execute(key, cmd, cwd, input, appends)$/;"	f
l9#async#listActiveWorkers	bundle/L9/autoload/l9/async.vim	/^function l9#async#listActiveWorkers()$/;"	f
l9#async#listWorkers	bundle/L9/autoload/l9/async.vim	/^function l9#async#listWorkers()$/;"	f
l9#async#read	bundle/L9/autoload/l9/async.vim	/^function l9#async#read(key)$/;"	f
l9#completeForInputHl	bundle/L9/autoload/l9.vim	/^function l9#completeForInputHl(lead, line, pos)$/;"	f
l9#concat	bundle/L9/autoload/l9.vim	/^function l9#concat(items)$/;"	f
l9#concatPaths	bundle/L9/autoload/l9.vim	/^function l9#concatPaths(paths)$/;"	f
l9#convertWildcardToRegexp	bundle/L9/autoload/l9.vim	/^function l9#convertWildcardToRegexp(expr)$/;"	f
l9#defineVariableDefault	bundle/L9/autoload/l9.vim	/^function l9#defineVariableDefault(name, default)$/;"	f
l9#deleteAllBuffersExcept	bundle/L9/autoload/l9.vim	/^function l9#deleteAllBuffersExcept(files)$/;"	f
l9#echoHl	bundle/L9/autoload/l9.vim	/^function l9#echoHl(hl, msg, prefix, addingHistory)$/;"	f
l9#filterWithLimit	bundle/L9/autoload/l9.vim	/^function l9#filterWithLimit(items, expr, limit)$/;"	f
l9#getPathSeparator	bundle/L9/autoload/l9.vim	/^function l9#getPathSeparator()$/;"	f
l9#getSelectedText	bundle/L9/autoload/l9.vim	/^function l9#getSelectedText()$/;"	f
l9#getVersion	bundle/L9/autoload/l9.vim	/^function l9#getVersion()$/;"	f
l9#grepBuffers	bundle/L9/autoload/l9.vim	/^function l9#grepBuffers(pattern, bufNrs)$/;"	f
l9#grepFiles	bundle/L9/autoload/l9.vim	/^function l9#grepFiles(pattern, files)$/;"	f
l9#guardScriptLoading	bundle/L9/autoload/l9.vim	/^function l9#guardScriptLoading(path, vimVersion, l9Version, exprs)$/;"	f
l9#hash224	bundle/L9/autoload/l9.vim	/^function l9#hash224(str)$/;"	f
l9#inputHl	bundle/L9/autoload/l9.vim	/^function l9#inputHl(hl, ...)$/;"	f
l9#isCompatible	bundle/L9/autoload/l9.vim	/^function l9#isCompatible(ver)$/;"	f
l9#loadFilesToBuffers	bundle/L9/autoload/l9.vim	/^function l9#loadFilesToBuffers(files)$/;"	f
l9#loadScript	bundle/L9/autoload/l9.vim	/^function l9#loadScript(text)$/;"	f
l9#modifyPathRelativeToDir	bundle/L9/autoload/l9.vim	/^function l9#modifyPathRelativeToDir(path, dir)$/;"	f
l9#moveToBufferWindowInCurrentTabpage	bundle/L9/autoload/l9.vim	/^function l9#moveToBufferWindowInCurrentTabpage(bufNr)$/;"	f
l9#moveToBufferWindowInOtherTabpage	bundle/L9/autoload/l9.vim	/^function l9#moveToBufferWindowInOtherTabpage(bufNr)$/;"	f
l9#notifyBalloonly	bundle/L9/autoload/l9.vim	/^function l9#notifyBalloonly(msg)$/;"	f
l9#notifyExternally	bundle/L9/autoload/l9.vim	/^function l9#notifyExternally(msg)$/;"	f
l9#notifyScreen	bundle/L9/autoload/l9.vim	/^function l9#notifyScreen(msg)$/;"	f
l9#notifyTmux	bundle/L9/autoload/l9.vim	/^function l9#notifyTmux(msg)$/;"	f
l9#placeSign	bundle/L9/autoload/l9.vim	/^function l9#placeSign(linehl, text, texthl, locations)$/;"	f
l9#quickfix#compareEntries	bundle/L9/autoload/l9/quickfix.vim	/^function l9#quickfix#compareEntries(e0, e1)$/;"	f
l9#quickfix#isWindowOpened	bundle/L9/autoload/l9/quickfix.vim	/^function l9#quickfix#isWindowOpened()$/;"	f
l9#quickfix#openIfNotEmpty	bundle/L9/autoload/l9/quickfix.vim	/^function l9#quickfix#openIfNotEmpty(onlyRecognized, holdCursor)$/;"	f
l9#quickfix#placeSign	bundle/L9/autoload/l9/quickfix.vim	/^function l9#quickfix#placeSign()$/;"	f
l9#quickfix#setMakeResult	bundle/L9/autoload/l9/quickfix.vim	/^function l9#quickfix#setMakeResult(lines)$/;"	f
l9#quickfix#sort	bundle/L9/autoload/l9/quickfix.vim	/^function l9#quickfix#sort()$/;"	f
l9#quickfix#toggleWindow	bundle/L9/autoload/l9/quickfix.vim	/^function l9#quickfix#toggleWindow()$/;"	f
l9#readFile	bundle/L9/autoload/l9.vim	/^function l9#readFile(...)$/;"	f
l9#removeIf	bundle/L9/autoload/l9.vim	/^function l9#removeIf(items, expr)$/;"	f
l9#removeLinesBetween	bundle/L9/autoload/l9.vim	/^function l9#removeLinesBetween(lines, begin, end)$/;"	f
l9#shiftWinNextTabpage	bundle/L9/autoload/l9.vim	/^function l9#shiftWinNextTabpage()$/;"	f
l9#shiftWinPrevTabpage	bundle/L9/autoload/l9.vim	/^function l9#shiftWinPrevTabpage()$/;"	f
l9#snipHead	bundle/L9/autoload/l9.vim	/^function l9#snipHead(str, len, mask)$/;"	f
l9#snipMid	bundle/L9/autoload/l9.vim	/^function l9#snipMid(str, len, mask)$/;"	f
l9#snipTail	bundle/L9/autoload/l9.vim	/^function l9#snipTail(str, len, mask)$/;"	f
l9#tempbuffer#close	bundle/L9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#close(bufname)$/;"	f
l9#tempbuffer#isOpen	bundle/L9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#isOpen(bufname)$/;"	f
l9#tempbuffer#moveTo	bundle/L9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#moveTo(bufname)$/;"	f
l9#tempbuffer#openReadOnly	bundle/L9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#openReadOnly(bufname, filetype, lines, topleft, vertical, height, listener)$/;"	f
l9#tempbuffer#openScratch	bundle/L9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#openScratch(bufname, filetype, lines, topleft, vertical, height, listener)$/;"	f
l9#tempbuffer#openWritable	bundle/L9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#openWritable(bufname, filetype, lines, topleft, vertical, height, listener)$/;"	f
l9#tempvariables#end	bundle/L9/autoload/l9/tempvariables.vim	/^function l9#tempvariables#end(group)$/;"	f
l9#tempvariables#getList	bundle/L9/autoload/l9/tempvariables.vim	/^function l9#tempvariables#getList(group)$/;"	f
l9#tempvariables#set	bundle/L9/autoload/l9/tempvariables.vim	/^function l9#tempvariables#set(group, name, value)$/;"	f
l9#tempvariables#setList	bundle/L9/autoload/l9/tempvariables.vim	/^function l9#tempvariables#setList(group, variables)$/;"	f
l9#unique	bundle/L9/autoload/l9.vim	/^function l9#unique(items)$/;"	f
l9#uniqueStably	bundle/L9/autoload/l9.vim	/^function l9#uniqueStably(items)$/;"	f
l9#writeAll	bundle/L9/autoload/l9.vim	/^function l9#writeAll()$/;"	f
l9#writeFile	bundle/L9/autoload/l9.vim	/^function l9#writeFile(...)$/;"	f
l9#zip	bundle/L9/autoload/l9.vim	/^function l9#zip(items)$/;"	f
line_offset	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    line_offset = 0$/;"	v	class:ConqueSoleSubprocess
linechars	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:linechars(pattern)$/;"	f
lines	bundle/conque_2.3/autoload/conque_term/conque.py	/^    lines = 24 # same as $LINES$/;"	v	class:Conque
lines	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^    lines = 24$/;"	v	class:ConqueSoleWrapper
link_file	bundle/colorselector/Makefile	/^link_file = \\$/;"	m
listAroundFiles	bundle/FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:listAroundFiles(dir)$/;"	f
load	bundle/neocomplcache/autoload/vital/_9813ec6.vim	/^function! s:load(...) dict$/;"	f
load_from_file	bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^function! s:load_from_file(filename, pattern_file_name, mark, minlen, maxfilename, fileencoding)"{{{$/;"	f
load_from_tags	bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^function! s:load_from_tags(filename, pattern_file_name, mark, minlen, maxfilename, fileencoding)"{{{$/;"	f
loaded_nerd_tree	bundle/nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loaded_snips	bundle/snipmate.vim/plugin/snipMate.vim	/^let loaded_snips = 1$/;"	v
loops	bundle/conque_2.3/autoload/conque_term/conque_sole_communicator.py	/^        loops = 0$/;"	v
main	bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^function! s:main(argv)"{{{$/;"	f
makeAdditionalMigemoPattern	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:makeAdditionalMigemoPattern(pattern)$/;"	f
makeCtagsCmd	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:makeCtagsCmd(bufNr)$/;"	f
makeFileAbbrInfo	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:makeFileAbbrInfo(item, maxLenStats)$/;"	f
makeFuzzyMatchingExpr	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:makeFuzzyMatchingExpr(target, pattern)$/;"	f
makeItem	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^function s:makeItem(nr)$/;"	f
makeItem	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:makeItem(tag, itemMap)$/;"	f
makeItem	bundle/FuzzyFinder/autoload/fuf/changelist.vim	/^function s:makeItem(line)$/;"	f
makeItem	bundle/FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:makeItem(line, bufnrPrev)$/;"	f
makeItem	bundle/FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:makeItem(qfItem)$/;"	f
makePartialMatchingExpr	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:makePartialMatchingExpr(target, pattern)$/;"	f
makeRefiningExpr	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:makeRefiningExpr(pattern)$/;"	f
make_completion_list	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:make_completion_list(list, menu_pattern, kind)"{{{$/;"	f
match_pair	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:match_pair(string, start_pattern, end_pattern, start_cnt)"{{{$/;"	f
match_wildcard	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! s:match_wildcard(cur_text, pattern, cur_keyword_pos)"{{{$/;"	f
max	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:max(list, expr)$/;"	f
max_loops	bundle/conque_2.3/autoload/conque_term/conque_sole_communicator.py	/^        max_loops = 0$/;"	v
mem_key	bundle/conque_2.3/autoload/conque_term/conque_sole_communicator.py	/^        mem_key = sys.argv[1]$/;"	v
mem_key	bundle/conque_2.3/autoload/conque_term/conque_sole_shared_memory.py	/^    mem_key = None$/;"	v	class:ConqueSoleSharedMemory
mem_redraw_ct	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    mem_redraw_ct = 0$/;"	v	class:ConqueSoleSubprocess
mem_size	bundle/conque_2.3/autoload/conque_term/conque_sole_shared_memory.py	/^    mem_size = None$/;"	v	class:ConqueSoleSharedMemory
mem_type	bundle/conque_2.3/autoload/conque_term/conque_sole_shared_memory.py	/^    mem_type = None$/;"	v	class:ConqueSoleSharedMemory
min	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:min(list, expr)$/;"	f
moveToOtherTabpageOpeningBuffer	bundle/L9/autoload/l9.vim	/^function s:moveToOtherTabpageOpeningBuffer(bufNr)$/;"	f
neocomplcache	bundle/neocomplcache/plugin/neocomplcache.vim	/^  augroup neocomplcache$/;"	a
neocomplcache#add_dictionaries	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#add_dictionaries(dictionaries)"{{{$/;"	f
neocomplcache#async_cache#main	bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^  function! neocomplcache#async_cache#main(argv)"{{{$/;"	f
neocomplcache#auto_complete	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#auto_complete(findstart, base)"{{{$/;"	f
neocomplcache#available_complfuncs	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#available_complfuncs()"{{{$/;"	f
neocomplcache#available_ftplugins	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#available_ftplugins()"{{{$/;"	f
neocomplcache#available_loaded_ftplugins	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#available_loaded_ftplugins()"{{{$/;"	f
neocomplcache#available_plugins	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#available_plugins()"{{{$/;"	f
neocomplcache#available_sources	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#available_sources()"{{{$/;"	f
neocomplcache#cache#async_load_from_file	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#async_load_from_file(cache_dir, filename, pattern, mark)"{{{$/;"	f
neocomplcache#cache#async_load_from_tags	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#async_load_from_tags(cache_dir, filename, filetype, mark, is_create_tags)"{{{$/;"	f
neocomplcache#cache#check_cache	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#check_cache(cache_dir, key, async_cache_dictionary, keyword_list_dictionary, completion_length) "{{{$/;"	f
neocomplcache#cache#check_cache_list	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#check_cache_list(cache_dir, key, async_cache_dictionary, index_keyword_list, completion_length) "{{{$/;"	f
neocomplcache#cache#check_old_cache	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#check_old_cache(cache_dir, filename)"{{{$/;"	f
neocomplcache#cache#encode_name	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#encode_name(cache_dir, filename)$/;"	f
neocomplcache#cache#filereadable	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#filereadable(cache_dir, filename)"{{{$/;"	f
neocomplcache#cache#getfilename	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#getfilename(cache_dir, filename)"{{{$/;"	f
neocomplcache#cache#index_load_from_cache	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#index_load_from_cache(cache_dir, filename, completion_length)"{{{$/;"	f
neocomplcache#cache#list2index	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#list2index(list, dictionary, completion_length)"{{{$/;"	f
neocomplcache#cache#load_from_cache	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#load_from_cache(cache_dir, filename)"{{{$/;"	f
neocomplcache#cache#load_from_cache_old	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#load_from_cache_old(cache_dir, filename)"{{{$/;"	f
neocomplcache#cache#readfile	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#readfile(cache_dir, filename)"{{{$/;"	f
neocomplcache#cache#save_cache	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#save_cache(cache_dir, filename, keyword_list)"{{{$/;"	f
neocomplcache#cache#save_cache_old	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#save_cache_old(cache_dir, filename, keyword_list)"{{{$/;"	f
neocomplcache#cache#test_async	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#test_async()"{{{$/;"	f
neocomplcache#cache#writefile	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#writefile(cache_dir, filename, list)"{{{$/;"	f
neocomplcache#cancel_popup	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#cancel_popup()"{{{$/;"	f
neocomplcache#check_completion_length_match	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#check_completion_length_match(cur_keyword_str, completion_length)"{{{$/;"	f
neocomplcache#check_match_filter	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#check_match_filter(cur_keyword_str)"{{{$/;"	f
neocomplcache#close_popup	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#close_popup()"{{{$/;"	f
neocomplcache#compare_nothing	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#compare_nothing(i1, i2)$/;"	f
neocomplcache#compare_rank	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#compare_rank(i1, i2)$/;"	f
neocomplcache#compare_word	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#compare_word(i1, i2)$/;"	f
neocomplcache#complete_check	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#complete_check()"{{{$/;"	f
neocomplcache#complete_common_string	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#complete_common_string()"{{{$/;"	f
neocomplcache#dictionary_filter	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#dictionary_filter(dictionary, cur_keyword_str, completion_length)"{{{$/;"	f
neocomplcache#disable	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#disable()"{{{$/;"	f
neocomplcache#dup_filter	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#dup_filter(list)"{{{$/;"	f
neocomplcache#enable	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#enable() "{{{$/;"	f
neocomplcache#escape_match	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#escape_match(str)"{{{$/;"	f
neocomplcache#exists_echodoc	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#exists_echodoc()"{{{$/;"	f
neocomplcache#filetype_complete	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#filetype_complete(arglead, cmdline, cursorpos)"{{{$/;"	f
neocomplcache#fuzzy_filter	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#fuzzy_filter(list, cur_keyword_str)"{{{$/;"	f
neocomplcache#get_auto_completion_length	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_auto_completion_length(plugin_name)"{{{$/;"	f
neocomplcache#get_complete_results	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_complete_results(cur_text, ...)"{{{$/;"	f
neocomplcache#get_complete_words	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_complete_words(complete_results, cur_keyword_pos, cur_keyword_str) "{{{$/;"	f
neocomplcache#get_completion_length	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_completion_length(plugin_name)"{{{$/;"	f
neocomplcache#get_context_filetype	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_context_filetype(...)"{{{$/;"	f
neocomplcache#get_cur_keyword_pos	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_cur_keyword_pos(complete_results)"{{{$/;"	f
neocomplcache#get_cur_text	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_cur_text(...)"{{{$/;"	f
neocomplcache#get_keyword_pattern	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_keyword_pattern(...)"{{{$/;"	f
neocomplcache#get_keyword_pattern_end	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_keyword_pattern_end(...)"{{{$/;"	f
neocomplcache#get_next_keyword	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_next_keyword()"{{{$/;"	f
neocomplcache#get_next_keyword_pattern	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_next_keyword_pattern(...)"{{{$/;"	f
neocomplcache#get_prev_word	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_prev_word(cur_keyword_str)"{{{$/;"	f
neocomplcache#get_source_filetypes	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_source_filetypes(filetype)"{{{$/;"	f
neocomplcache#get_source_rank	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_source_rank(plugin_name)"{{{$/;"	f
neocomplcache#get_sources_list	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_sources_list(dictionary, filetype)"{{{$/;"	f
neocomplcache#get_syn_name	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_syn_name(is_trans)"{{{$/;"	f
neocomplcache#get_temporary_directory	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_temporary_directory()"{{{$/;"	f
neocomplcache#has_vimproc	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#has_vimproc(...)"{{{$/;"	f
neocomplcache#head_filter	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#head_filter(list, cur_keyword_str)"{{{$/;"	f
neocomplcache#head_match	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#head_match(checkstr, headstr)"{{{$/;"	f
neocomplcache#is_auto_complete	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_auto_complete()"{{{$/;"	f
neocomplcache#is_auto_select	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_auto_select()"{{{$/;"	f
neocomplcache#is_enabled	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_enabled()"{{{$/;"	f
neocomplcache#is_eskk_convertion	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_eskk_convertion(cur_text)"{{{$/;"	f
neocomplcache#is_eskk_enabled	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_eskk_enabled()"{{{$/;"	f
neocomplcache#is_locked	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_locked(...)"{{{$/;"	f
neocomplcache#is_multibyte_input	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_multibyte_input(cur_text)"{{{$/;"	f
neocomplcache#is_omni_complete	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_omni_complete(cur_text)"{{{$/;"	f
neocomplcache#is_plugin_locked	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_plugin_locked(source_name)"{{{$/;"	f
neocomplcache#is_prefetch	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_prefetch()"{{{$/;"	f
neocomplcache#is_source_enabled	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_source_enabled(plugin_name)"{{{$/;"	f
neocomplcache#is_sources_complete	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_sources_complete()"{{{$/;"	f
neocomplcache#is_text_mode	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_text_mode()"{{{$/;"	f
neocomplcache#is_win	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_win()"{{{$/;"	f
neocomplcache#is_windows	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_windows()"{{{$/;"	f
neocomplcache#keyword_escape	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#keyword_escape(cur_keyword_str)"{{{$/;"	f
neocomplcache#keyword_filter	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#keyword_filter(list, cur_keyword_str)"{{{$/;"	f
neocomplcache#lock	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#lock()"{{{$/;"	f
neocomplcache#lock_source	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#lock_source(source_name)"{{{$/;"	f
neocomplcache#manual_complete	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#manual_complete(findstart, base)"{{{$/;"	f
neocomplcache#manual_filename_complete	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#manual_filename_complete()"{{{$/;"	f
neocomplcache#manual_keyword_complete	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#manual_keyword_complete()"{{{$/;"	f
neocomplcache#manual_omni_complete	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#manual_omni_complete()"{{{$/;"	f
neocomplcache#match_word	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#match_word(cur_text, ...)"{{{$/;"	f
neocomplcache#popup_post	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#popup_post()"{{{$/;"	f
neocomplcache#print_caching	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#print_caching(string)"{{{$/;"	f
neocomplcache#print_debug	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#print_debug(expr)"{{{$/;"	f
neocomplcache#print_error	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#print_error(string)"{{{$/;"	f
neocomplcache#print_warning	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#print_warning(string)"{{{$/;"	f
neocomplcache#rand	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#rand(max)"{{{$/;"	f
neocomplcache#set_completion_length	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#set_completion_length(plugin_name, length)"{{{$/;"	f
neocomplcache#set_dictionary_helper	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#set_dictionary_helper(variable, keys, value)"{{{$/;"	f
neocomplcache#set_file_type	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#set_file_type(filetype)"{{{$/;"	f
neocomplcache#smart_close_popup	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#smart_close_popup()"{{{$/;"	f
neocomplcache#sources#abbrev_complete#define	bundle/neocomplcache/autoload/neocomplcache/sources/abbrev_complete.vim	/^function! neocomplcache#sources#abbrev_complete#define()"{{{$/;"	f
neocomplcache#sources#buffer_complete#caching_current_line	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#caching_current_line()"{{{$/;"	f
neocomplcache#sources#buffer_complete#define	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#define()"{{{$/;"	f
neocomplcache#sources#dictionary_complete#define	bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! neocomplcache#sources#dictionary_complete#define()"{{{$/;"	f
neocomplcache#sources#filename_complete#define	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! neocomplcache#sources#filename_complete#define()"{{{$/;"	f
neocomplcache#sources#filename_complete#get_complete_words	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! neocomplcache#sources#filename_complete#get_complete_words(cur_keyword_str, path)"{{{$/;"	f
neocomplcache#sources#include_complete#analyze_ruby_include_files	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#analyze_ruby_include_files(lines, path)"{{{$/;"	f
neocomplcache#sources#include_complete#analyze_vim_include_files	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#analyze_vim_include_files(lines, path)"{{{$/;"	f
neocomplcache#sources#include_complete#define	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#define()"{{{$/;"	f
neocomplcache#sources#include_complete#get_current_include_files	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#get_current_include_files()"{{{$/;"	f
neocomplcache#sources#include_complete#get_include_files	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#get_include_files(bufnumber)"{{{$/;"	f
neocomplcache#sources#include_complete#get_include_tags	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#get_include_tags(bufnumber)"{{{$/;"	f
neocomplcache#sources#keyword_complete#define	bundle/neocomplcache/autoload/neocomplcache/sources/keyword_complete.vim	/^function! neocomplcache#sources#keyword_complete#define()"{{{$/;"	f
neocomplcache#sources#member_complete#caching_current_line	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! neocomplcache#sources#member_complete#caching_current_line()"{{{$/;"	f
neocomplcache#sources#member_complete#define	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! neocomplcache#sources#member_complete#define()"{{{$/;"	f
neocomplcache#sources#omni_complete#define	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! neocomplcache#sources#omni_complete#define()"{{{$/;"	f
neocomplcache#sources#syntax_complete#define	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! neocomplcache#sources#syntax_complete#define()"{{{$/;"	f
neocomplcache#sources#tags_complete#define	bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^function! neocomplcache#sources#tags_complete#define()"{{{$/;"	f
neocomplcache#sources#vim_complete#define	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! neocomplcache#sources#vim_complete#define()"{{{$/;"	f
neocomplcache#sources#vim_complete#get_command	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! neocomplcache#sources#vim_complete#get_command(cur_text)"{{{$/;"	f
neocomplcache#sources#vim_complete#get_cur_text	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! neocomplcache#sources#vim_complete#get_cur_text()"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#augroup	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#augroup(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#autocmd_args	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#autocmd_args(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#buffer	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#buffer(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#colorscheme_args	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#colorscheme_args(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#command	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#command(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#command_args	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#command_args(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#custom	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#custom(command_name, cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#customlist	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#customlist(command_name, cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#dir	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#dir(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#environment	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#environment(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#event	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#event(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#execute	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#execute(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#expand	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#expand(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#expression	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#expression(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#feature	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#feature(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#file	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#file(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#filetype	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#filetype(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#function	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#function(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#get_command_completion	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#get_command_completion(command_name, cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#get_completion_name	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#get_completion_name(command_name)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#help	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#help(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#highlight	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#highlight(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#let	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#let(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#mapping	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#mapping(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#menu	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#menu(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#on_filetype	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#on_filetype()"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#option	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#option(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#recaching	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#recaching(bufname)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#shellcmd	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#shellcmd(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#tag	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#tag(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#tag_listfiles	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#tag_listfiles(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#var	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#var(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#var_dictionary	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#var_dictionary(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources_manual_complete	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#sources_manual_complete(findstart, base)"{{{$/;"	f
neocomplcache#start_manual_complete	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#start_manual_complete(...)"{{{$/;"	f
neocomplcache#start_manual_complete_list	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#start_manual_complete_list(cur_keyword_pos, cur_keyword_str, complete_words)"{{{$/;"	f
neocomplcache#system	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#system(...)"{{{$/;"	f
neocomplcache#toggle_lock	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#toggle_lock()"{{{$/;"	f
neocomplcache#trunk_string	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#trunk_string(string, max)"{{{$/;"	f
neocomplcache#undo_completion	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#undo_completion()"{{{$/;"	f
neocomplcache#unlock	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#unlock()"{{{$/;"	f
neocomplcache#unlock_source	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#unlock_source(source_name)"{{{$/;"	f
neocomplcache#unpack_dictionary	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#unpack_dictionary(dict)"{{{$/;"	f
neocomplcache#util#escape_pattern	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#escape_pattern(...)"{{{$/;"	f
neocomplcache#util#expand	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#expand(path)"{{{$/;"	f
neocomplcache#util#get_last_status	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#get_last_status(...)"{{{$/;"	f
neocomplcache#util#glob	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#glob(pattern, ...)"{{{$/;"	f
neocomplcache#util#has_vimproc	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#has_vimproc(...)"{{{$/;"	f
neocomplcache#util#iconv	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#iconv(...)$/;"	f
neocomplcache#util#is_mac	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#is_mac(...)"{{{$/;"	f
neocomplcache#util#is_windows	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#is_windows(...)"{{{$/;"	f
neocomplcache#util#mb_strlen	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#mb_strlen(...)"{{{$/;"	f
neocomplcache#util#set_default_dictionary_helper	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#set_default_dictionary_helper(variable, keys, value)"{{{$/;"	f
neocomplcache#util#set_dictionary_helper	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#set_dictionary_helper(variable, keys, value)"{{{$/;"	f
neocomplcache#util#strchars	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#strchars(...)"{{{$/;"	f
neocomplcache#util#strwidthpart	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#strwidthpart(...)"{{{$/;"	f
neocomplcache#util#strwidthpart_reverse	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#strwidthpart_reverse(...)"{{{$/;"	f
neocomplcache#util#substitute_path_separator	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#substitute_path_separator(...)"{{{$/;"	f
neocomplcache#util#system	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#system(...)"{{{$/;"	f
neocomplcache#util#truncate	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#truncate(...)"{{{$/;"	f
neocomplcache#util#truncate_smart	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#truncate_smart(...)"{{{$/;"	f
neocomplcache#util#uniq	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#uniq(list)"{{{$/;"	f
neocomplcache#util#wcswidth	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#wcswidth(...)"{{{$/;"	f
neocomplcache#within_comment	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#within_comment()"{{{$/;"	f
neocomplcache_source.gather_candidates	bundle/neocomplcache/autoload/unite/sources/neocomplcache.vim	/^function! s:neocomplcache_source.gather_candidates(args, context) "{{{$/;"	f
neocomplcache_source.hooks.on_init	bundle/neocomplcache/autoload/unite/sources/neocomplcache.vim	/^function! s:neocomplcache_source.hooks.on_init(args, context) "{{{$/;"	f
nextBufferName	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:nextBufferName()$/;"	f
offset	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    offset = 0$/;"	v	class:ConqueSole
onBufDelete	bundle/L9/autoload/l9/tempbuffer.vim	/^function s:onBufDelete(bufname)$/;"	f
onBufWriteCmd	bundle/L9/autoload/l9/tempbuffer.vim	/^function s:onBufWriteCmd(bufname)$/;"	f
onCommandPre	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:onCommandPre()$/;"	f
on_complete_done	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! s:on_complete_done()"{{{$/;"	f
on_insert_leave	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! s:on_insert_leave()"{{{$/;"	f
on_moved_i	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! s:on_moved_i()"{{{$/;"	f
onlybitmaps	bundle/vim-powerline/fontpatcher/fontpatcher	/^	onlybitmaps = font.onlybitmaps$/;"	v
open	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def open(self):$/;"	m	class:Conque	access:public
open	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    def open(self):$/;"	m	class:ConqueSole	access:public
open	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    def open(self, cmd, mem_key, options={}):$/;"	m	class:ConqueSoleSubprocess	access:public
open	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^    def open(self, cmd, lines, columns, python_exe='python.exe', communicator_py='conque_sole_communicator.py', options={}):$/;"	m	class:ConqueSoleWrapper	access:public
open	bundle/conque_2.3/autoload/conque_term/conque_subprocess.py	/^    def open(self, command, env={}):$/;"	m	class:ConqueSubprocess	access:public
openBookmark	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:openBookmark(name)$/;"	f
openExplorer	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:openExplorer(node)$/;"	f
openHSplit	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:openHSplit(target)$/;"	f
openInNewTab	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:openInNewTab(target)$/;"	f
openInNewTabSilent	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:openInNewTabSilent(target)$/;"	f
openNodeRecursively	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:openNodeRecursively(node)$/;"	f
openVSplit	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:openVSplit(target)$/;"	f
open_func_arg	bundle/AutoClose--Alves/plugin/autoclose.vim	/^        let open_func_arg = '"' . key . '"'$/;"	v
open_func_arg	bundle/AutoClose--Alves/plugin/autoclose.vim	/^        let open_func_arg = '"\\""'$/;"	v
options	bundle/conque_2.3/autoload/conque_term/conque_sole_communicator.py	/^        options = {'LINES': console_height, 'COLUMNS': console_width, 'CODE_PAGE': code_page, 'FAST_MODE': fast_mode}$/;"	v
or	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:or(xs)$/;"	f
output_blocks	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    output_blocks = 1$/;"	v	class:ConqueSoleSubprocess
output_keyword	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:output_keyword(name)"{{{$/;"	f
overlap_width	bundle/vim-powerline/fontpatcher/fontpatcher	/^			overlap_width = font.em \/ 48$/;"	v
parseChangesLine	bundle/FuzzyFinder/autoload/fuf/changelist.vim	/^function s:parseChangesLine(line)$/;"	f
parseHelpTagEntry	bundle/FuzzyFinder/autoload/fuf/help.vim	/^function s:parseHelpTagEntry(line, tagFile)$/;"	f
parseHelpTagFiles	bundle/FuzzyFinder/autoload/fuf/help.vim	/^function s:parseHelpTagFiles(tagFiles, key)$/;"	f
parseJumpsLine	bundle/FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:parseJumpsLine(line, bufnrPrev)$/;"	f
parseJumpsLine	bundle/FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:parseJumpsLine(line)$/;"	f
parseTagFiles	bundle/FuzzyFinder/autoload/fuf/tag.vim	/^function s:parseTagFiles(tagFiles, key)$/;"	f
parseTagFiles	bundle/FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:parseTagFiles(tagFiles, key)$/;"	f
parseTagLine	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:parseTagLine(line)$/;"	f
parse_csi	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def parse_csi(self, s):$/;"	m	class:Conque	access:public
parser	bundle/vim-powerline/fontpatcher/fontpatcher	/^parser = argparse.ArgumentParser(description='Font patcher for Powerline. Creates dividers and symbols in FontForge-compatible font files. Requires FontForge with Python bindings. Stores glyphs in the U+2B80-U+2BFF range ("Miscellaneous symbols and arrows"). Stores the patched font as a new, renamed font file by default.')$/;"	v
partition	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:partition(f, xs)$/;"	f
path2directory	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:path2directory(path)"{{{$/;"	f
path2project_directory	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:path2project_directory(path, ...)"{{{$/;"	f
pathogen#cycle_filetype	autoload/pathogen.vim	/^function! pathogen#cycle_filetype() " {{{1$/;"	f
pathogen#glob	autoload/pathogen.vim	/^function! pathogen#glob(pattern) abort " {{{1$/;"	f
pathogen#glob_directories	autoload/pathogen.vim	/^function! pathogen#glob_directories(pattern) abort " {{{1$/;"	f
pathogen#helptags	autoload/pathogen.vim	/^function! pathogen#helptags() " {{{1$/;"	f
pathogen#infect	autoload/pathogen.vim	/^function! pathogen#infect(...) abort " {{{1$/;"	f
pathogen#is_disabled	autoload/pathogen.vim	/^function! pathogen#is_disabled(path) " {{{1$/;"	f
pathogen#join	autoload/pathogen.vim	/^function! pathogen#join(...) abort " {{{1$/;"	f
pathogen#legacyjoin	autoload/pathogen.vim	/^function! pathogen#legacyjoin(...) abort " {{{1$/;"	f
pathogen#runtime_append_all_bundles	autoload/pathogen.vim	/^function! pathogen#runtime_append_all_bundles(...) " {{{1$/;"	f
pathogen#runtime_findfile	autoload/pathogen.vim	/^function! pathogen#runtime_findfile(file,count) "{{{1$/;"	f
pathogen#runtime_prepend_subdirectories	autoload/pathogen.vim	/^function! pathogen#runtime_prepend_subdirectories(path) " {{{1$/;"	f
pathogen#separator	autoload/pathogen.vim	/^function! pathogen#separator() abort " {{{1$/;"	f
pathogen#split	autoload/pathogen.vim	/^function! pathogen#split(path) abort " {{{1$/;"	f
pathogen#uniq	autoload/pathogen.vim	/^function! pathogen#uniq(list) abort " {{{1$/;"	f
pid	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    pid = None$/;"	v	class:ConqueSoleSubprocess
pid	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^    pid = None$/;"	v	class:ConqueSoleWrapper
pid	bundle/conque_2.3/autoload/conque_term/conque_subprocess.py	/^    pid = 0$/;"	v	class:ConqueSubprocess
plain_text	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def plain_text(self, input):$/;"	m	class:Conque	access:public
plain_text	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    def plain_text(self, line_nr, text, attributes, stats):$/;"	m	class:ConqueSole	access:public
pop	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:pop(list)$/;"	f
postSourceActions	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:postSourceActions()$/;"	f
previewNodeCurrent	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:previewNodeCurrent(node)$/;"	f
previewNodeHSplit	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:previewNodeHSplit(node)$/;"	f
previewNodeVSplit	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:previewNodeVSplit(node)$/;"	f
print_active_worker_keys	bundle/L9/autoload/l9/async.py	/^    def print_active_worker_keys(self):$/;"	m	class:Asyncer	access:public
print_error	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:print_error(message)"{{{$/;"	f
print_output	bundle/L9/autoload/l9/async.py	/^    def print_output(self, var_key):$/;"	m	class:Asyncer	access:public
print_snippets_complete_error	bundle/neocomplcache/plugin/neocomplcache.vim	/^function! s:print_snippets_complete_error()$/;"	f
print_source	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:print_source(name)"{{{$/;"	f
print_worker_keys	bundle/L9/autoload/l9/async.py	/^    def print_worker_keys(self):$/;"	m	class:Asyncer	access:public
proc	bundle/conque_2.3/autoload/conque_term/conque.py	/^    proc = None$/;"	v	class:Conque
proc	bundle/conque_2.3/autoload/conque_term/conque_sole_communicator.py	/^        proc = ConqueSoleSubprocess()$/;"	v
proc	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^    proc = None$/;"	v	class:ConqueSoleWrapper
promptToDelBuffer	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
promptToDelBuffer	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
prune_colors	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def prune_colors(self):$/;"	m	class:Conque	access:public
push	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:push(list, val)$/;"	f
put	bundle/L9/autoload/l9/async.py	/^    def put(self, executor):$/;"	m	class:Worker	access:public
putCursorInTreeWin	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:putCursorInTreeWin()$/;"	f
putCursorOnBookmarkTable	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:putCursorOnBookmarkTable()$/;"	f
python_highlight_builtin_funcs	bundle/python-syntax/syntax/python.vim	/^      let python_highlight_builtin_funcs = 1$/;"	v
python_highlight_builtin_funcs	bundle/python-syntax/syntax/python3.0.vim	/^      let python_highlight_builtin_funcs = 1$/;"	v
python_highlight_builtin_objs	bundle/python-syntax/syntax/python.vim	/^      let python_highlight_builtin_objs = 1$/;"	v
python_highlight_builtin_objs	bundle/python-syntax/syntax/python3.0.vim	/^      let python_highlight_builtin_objs = 1$/;"	v
python_highlight_doctests	bundle/python-syntax/syntax/python.vim	/^    let python_highlight_doctests = 1$/;"	v
python_highlight_doctests	bundle/python-syntax/syntax/python3.0.vim	/^    let python_highlight_doctests = 1$/;"	v
python_highlight_exceptions	bundle/python-syntax/syntax/python.vim	/^    let python_highlight_exceptions = 1$/;"	v
python_highlight_exceptions	bundle/python-syntax/syntax/python3.0.vim	/^    let python_highlight_exceptions = 1$/;"	v
python_highlight_indent_errors	bundle/python-syntax/syntax/python.vim	/^    let python_highlight_indent_errors = 1$/;"	v
python_highlight_indent_errors	bundle/python-syntax/syntax/python3.0.vim	/^    let python_highlight_indent_errors = 1$/;"	v
python_highlight_space_errors	bundle/python-syntax/syntax/python.vim	/^    let python_highlight_space_errors = 1$/;"	v
python_highlight_space_errors	bundle/python-syntax/syntax/python3.0.vim	/^    let python_highlight_space_errors = 1$/;"	v
python_highlight_string_format	bundle/python-syntax/syntax/python.vim	/^    let python_highlight_string_format = 1$/;"	v
python_highlight_string_format	bundle/python-syntax/syntax/python3.0.vim	/^    let python_highlight_string_format = 1$/;"	v
python_highlight_string_formatting	bundle/python-syntax/syntax/python.vim	/^    let python_highlight_string_formatting = 1$/;"	v
python_highlight_string_formatting	bundle/python-syntax/syntax/python3.0.vim	/^    let python_highlight_string_formatting = 1$/;"	v
python_highlight_string_templates	bundle/python-syntax/syntax/python.vim	/^    let python_highlight_string_templates = 1$/;"	v
python_highlight_string_templates	bundle/python-syntax/syntax/python3.0.vim	/^    let python_highlight_string_templates = 1$/;"	v
read	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def read(self, timeout=1, set_cursor=True, return_output=False, update_buffer=True):$/;"	m	class:Conque	access:public
read	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    def read(self, timeout=1, set_cursor=True, return_output=False, update_buffer=True):$/;"	m	class:ConqueSole	access:public
read	bundle/conque_2.3/autoload/conque_term/conque_sole_shared_memory.py	/^    def read(self, chars=1, start=0):$/;"	m	class:ConqueSoleSharedMemory	access:public
read	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    def read(self):$/;"	m	class:ConqueSoleSubprocess	access:public
read	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^    def read(self, start_line, num_lines, timeout=0):$/;"	m	class:ConqueSoleWrapper	access:public
read	bundle/conque_2.3/autoload/conque_term/conque_subprocess.py	/^    def read(self, timeout=1):$/;"	m	class:ConqueSubprocess	access:public
read_count	bundle/conque_2.3/autoload/conque_term/conque.py	/^    read_count = 0$/;"	v	class:Conque
readfile	bundle/neocomplcache/autoload/vital/_9813ec6/system/cache.vim	/^function! s:readfile(cache_dir, filename)$/;"	f
recaching	bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:recaching(filetype)"{{{$/;"	f
recaching	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:recaching(filetype)"{{{$/;"	f
recall	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:recall()$/;"	f
record_file	bundle/colorselector/Makefile	/^record_file = \\$/;"	m
record_output	bundle/L9/autoload/l9/async.py	/^    def record_output(self, line):$/;"	m	class:Worker	access:public
refreshCurrent	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:refreshCurrent(node)$/;"	f
refreshRoot	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:refreshRoot()$/;"	f
registerCoverage	bundle/FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:registerCoverage()$/;"	f
removeItemFromCache	bundle/FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:removeItemFromCache(word)$/;"	f
remove_next_keyword	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! s:remove_next_keyword(source_name, list)"{{{$/;"	f
renderBookmarks	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:renderBookmarks()$/;"	f
renderList	bundle/colorselector/plugin/colorselector.vim	/^fun! s:renderList()$/;"	f
renderView	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:renderView()$/;"	f
renderViewSavingPosition	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:renderViewSavingPosition()$/;"	f
renewCachesOfAllModes	bundle/FuzzyFinder/plugin/fuf.vim	/^function s:renewCachesOfAllModes()$/;"	f
repo	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo(...) abort$/;"	f
repo_aliases	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_aliases() dict abort$/;"	f
repo_bare	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_config	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_config(conf) dict abort$/;"	f
repo_configured_tree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_configured_tree() dict abort$/;"	f
repo_dir	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_dirglob	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
repo_git_chomp	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
repo_head_ref	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head_ref() dict abort$/;"	f
repo_keywordprg	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
repo_rev_parse	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
repo_tree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_user	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
res	bundle/conque_2.3/autoload/conque_term/conque_sole_communicator.py	/^        res = proc.open(cmd_line, mem_key, options)$/;"	v
reset_console	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    def reset_console(self, buf_info, add_block=True):$/;"	m	class:ConqueSoleSubprocess	access:public
reset_size	bundle/conque_2.3/autoload/conque_term/conque_screen.py	/^    def reset_size(self, line):$/;"	m	class:ConqueScreen	access:public
restoreScreenState	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:restoreScreenState()$/;"	f
restore_update_time	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! s:restore_update_time()"{{{$/;"	f
resume	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def resume(self):$/;"	m	class:Conque	access:public
resume	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    def resume(self):$/;"	m	class:ConqueSole	access:public
resume	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^    def resume(self):$/;"	m	class:ConqueSoleWrapper	access:public
revealBookmark	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:revealBookmark(name)$/;"	f
run	bundle/L9/autoload/l9/async.py	/^    def run(self):$/;"	m	class:Worker	access:public
s:ABBR_SNIP_MASK	bundle/FuzzyFinder/autoload/fuf.vim	/^let s:ABBR_SNIP_MASK = '...'$/;"	v
s:ASYNC_PY_PATH	bundle/L9/autoload/l9/async.vim	/^let s:ASYNC_PY_PATH = fnamemodify(expand('<sfile>:p:h'), ':p') . 'async.py'$/;"	v
s:BaseTag	bundle/tagbar/autoload/tagbar.vim	/^let s:BaseTag = {}$/;"	v
s:Bookmark	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:Bookmark = {}$/;"	v
s:CACHE_REVISION	bundle/vim-powerline/autoload/Pl.vim	/^	let s:CACHE_REVISION = 7$/;"	v
s:Cache	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^let s:Cache = vital#of('neocomplcache').import('System.Cache')$/;"	v
s:CharsEscape	bundle/SingleCompile/autoload/SingleCompile.vim	/^    let s:CharsEscape = '" '$/;"	v
s:CharsEscape	bundle/SingleCompile/autoload/SingleCompile.vim	/^    let s:CharsEscape = '" \\'$/;"	v
s:CompilerTemplate	bundle/SingleCompile/autoload/SingleCompile.vim	/^let s:CompilerTemplate = {}$/;"	v
s:DATA_FILE_VERSION	bundle/FuzzyFinder/autoload/fuf.vim	/^let s:DATA_FILE_VERSION = 400$/;"	v
s:EMPTY_SEGMENT	bundle/vim-powerline/autoload/Pl/Parser.vim	/^let s:EMPTY_SEGMENT = { 'type': 'empty' }$/;"	v
s:EnvSeperator	bundle/SingleCompile/autoload/SingleCompile.vim	/^    let s:EnvSeperator = ':'$/;"	v
s:EnvSeperator	bundle/SingleCompile/autoload/SingleCompile.vim	/^    let s:EnvSeperator = ';'$/;"	v
s:ExecutableSuffix	bundle/SingleCompile/autoload/SingleCompile.vim	/^    let s:ExecutableSuffix = ''$/;"	v
s:ExecutableSuffix	bundle/SingleCompile/autoload/SingleCompile.vim	/^    let s:ExecutableSuffix = '.exe'$/;"	v
s:FUF_BUF_NAME	bundle/FuzzyFinder/autoload/fuf.vim	/^let s:FUF_BUF_NAME = '[fuf]'$/;"	v
s:FileInfo	bundle/tagbar/autoload/tagbar.vim	/^let s:FileInfo = {}$/;"	v
s:HARD_DIVIDER	bundle/vim-powerline/autoload/Pl/Parser.vim	/^let s:HARD_DIVIDER = 0$/;"	v
s:Initialized	bundle/SingleCompile/autoload/SingleCompile.vim	/^let s:Initialized = 0$/;"	v
s:KeyMap	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:KeyMap = {}$/;"	v
s:KindheaderTag	bundle/tagbar/autoload/tagbar.vim	/^let s:KindheaderTag = copy(s:BaseTag)$/;"	v
s:L9_VERSION_CURRENT	bundle/L9/autoload/l9.vim	/^let s:L9_VERSION_CURRENT  = 101$/;"	v
s:L9_VERSION_PASSABLE	bundle/L9/autoload/l9.vim	/^let s:L9_VERSION_PASSABLE = 101$/;"	v
s:LEFT_SIDE	bundle/vim-powerline/autoload/Pl/Parser.vim	/^let s:LEFT_SIDE = 0$/;"	v
s:List	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^let s:List = vital#of('neocomplcache').import('Data.List')$/;"	v
s:MODE_NAME	bundle/FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/FuzzyFinder/autoload/fuf/callbackfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/FuzzyFinder/autoload/fuf/callbackitem.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/FuzzyFinder/autoload/fuf/changelist.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/FuzzyFinder/autoload/fuf/coveragefile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/FuzzyFinder/autoload/fuf/dir.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/FuzzyFinder/autoload/fuf/file.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/FuzzyFinder/autoload/fuf/givencmd.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/FuzzyFinder/autoload/fuf/givendir.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/FuzzyFinder/autoload/fuf/givenfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/FuzzyFinder/autoload/fuf/help.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/FuzzyFinder/autoload/fuf/jumplist.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/FuzzyFinder/autoload/fuf/line.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/FuzzyFinder/autoload/fuf/mrucmd.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/FuzzyFinder/autoload/fuf/mrufile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/FuzzyFinder/autoload/fuf/quickfix.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/FuzzyFinder/autoload/fuf/tag.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/FuzzyFinder/autoload/fuf/taggedfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MenuController	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:MenuItem = {}$/;"	v
s:NERDTreeBufName	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:NERDTreeBufName = 'NERD_tree_'$/;"	v
s:NERDTreeSortStarIndex	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:NERD_tree_version	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:NERD_tree_version = '4.2.0'$/;"	v
s:NormalTag	bundle/tagbar/autoload/tagbar.vim	/^let s:NormalTag = copy(s:BaseTag)$/;"	v
s:OPEN_TYPE_CURRENT	bundle/FuzzyFinder/autoload/fuf.vim	/^let s:OPEN_TYPE_CURRENT = 1$/;"	v
s:OPEN_TYPE_DELETE	bundle/FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
s:OPEN_TYPE_DELETE	bundle/FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
s:OPEN_TYPE_DELETE	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
s:OPEN_TYPE_DELETE	bundle/FuzzyFinder/autoload/fuf/line.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
s:OPEN_TYPE_EXPAND	bundle/FuzzyFinder/autoload/fuf/mrufile.vim	/^let s:OPEN_TYPE_EXPAND = -1$/;"	v
s:OPEN_TYPE_SPLIT	bundle/FuzzyFinder/autoload/fuf.vim	/^let s:OPEN_TYPE_SPLIT   = 2$/;"	v
s:OPEN_TYPE_TAB	bundle/FuzzyFinder/autoload/fuf.vim	/^let s:OPEN_TYPE_TAB     = 4$/;"	v
s:OPEN_TYPE_VSPLIT	bundle/FuzzyFinder/autoload/fuf.vim	/^let s:OPEN_TYPE_VSPLIT  = 3$/;"	v
s:Opener	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:Opener = {}$/;"	v
s:PADDING	bundle/vim-powerline/autoload/Pl/Parser.vim	/^let s:PADDING = 1$/;"	v
s:Path	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:Path = {}$/;"	v
s:PathSeperator	bundle/SingleCompile/autoload/SingleCompile.vim	/^    let s:PathSeperator = '\/'$/;"	v
s:PathSeperator	bundle/SingleCompile/autoload/SingleCompile.vim	/^    let s:PathSeperator = '\\'$/;"	v
s:PseudoTag	bundle/tagbar/autoload/tagbar.vim	/^let s:PseudoTag = copy(s:BaseTag)$/;"	v
s:RIGHT_SIDE	bundle/vim-powerline/autoload/Pl/Parser.vim	/^let s:RIGHT_SIDE = 2$/;"	v
s:SOFT_DIVIDER	bundle/vim-powerline/autoload/Pl/Parser.vim	/^let s:SOFT_DIVIDER = 1$/;"	v
s:TEMP_VARIABLES_GROUP	bundle/FuzzyFinder/autoload/fuf.vim	/^let s:TEMP_VARIABLES_GROUP = expand('<sfile>:p')$/;"	v
s:TEMP_VARIABLES_GROUP	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^let s:TEMP_VARIABLES_GROUP = expand('<sfile>:p')$/;"	v
s:TreeDirNode	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:TreeDirNode = copy(s:TreeFileNode)$/;"	v
s:TreeFileNode	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:TreeFileNode = {}$/;"	v
s:TypeInfo	bundle/tagbar/autoload/tagbar.vim	/^let s:TypeInfo = {}$/;"	v
s:V	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^let s:V = vital#of('neocomplcache')$/;"	v
s:VERSION_FACTOR	bundle/L9/autoload/l9.vim	/^let s:VERSION_FACTOR = str2float('0.01')$/;"	v
s:abstract_prototype	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:access_symbols	bundle/tagbar/autoload/tagbar.vim	/^let s:access_symbols = {$/;"	v
s:allocated_colors	bundle/vim-powerline/autoload/Pl/Hi.vim	/^let s:allocated_colors = {$/;"	v
s:autocommands_done	bundle/tagbar/autoload/tagbar.vim	/^let s:autocommands_done   = 0$/;"	v
s:b	colors/solarized_light.vim	/^    let s:b           = ""$/;"	v
s:b	colors/solarized_light.vim	/^    let s:b           = ",bold"$/;"	v
s:back	colors/solarized_light.vim	/^        let s:back    = s:base03$/;"	v
s:back	colors/solarized_light.vim	/^    let s:back        = "NONE"$/;"	v
s:back	colors/solarized_light.vim	/^    let s:back        = s:back$/;"	v
s:back	colors/solarized_light.vim	/^    let s:back        = s:base02$/;"	v
s:back	colors/solarized_light.vim	/^    let s:back        = s:base03$/;"	v
s:base0	colors/solarized_light.vim	/^    let s:base0       = "#808080"$/;"	v
s:base0	colors/solarized_light.vim	/^    let s:base0       = "#839496"$/;"	v
s:base0	colors/solarized_light.vim	/^    let s:base0       = "12"$/;"	v
s:base0	colors/solarized_light.vim	/^    let s:base0       = "244"$/;"	v
s:base0	colors/solarized_light.vim	/^    let s:base0       = "LightBlue"     " 4*$/;"	v
s:base0	colors/solarized_light.vim	/^    let s:base0       = s:base1$/;"	v
s:base0	colors/solarized_light.vim	/^    let s:base0       = s:temp00$/;"	v
s:base00	colors/solarized_light.vim	/^    let s:base00      = "#585858"$/;"	v
s:base00	colors/solarized_light.vim	/^    let s:base00      = "#657b83"$/;"	v
s:base00	colors/solarized_light.vim	/^    let s:base00      = "11"$/;"	v
s:base00	colors/solarized_light.vim	/^    let s:base00      = "240"$/;"	v
s:base00	colors/solarized_light.vim	/^    let s:base00      = "LightYellow"   " 3*$/;"	v
s:base00	colors/solarized_light.vim	/^    let s:base00      = s:base0$/;"	v
s:base01	colors/solarized_light.vim	/^    let s:base01      = "#4e4e4e"$/;"	v
s:base01	colors/solarized_light.vim	/^    let s:base01      = "#586e75"$/;"	v
s:base01	colors/solarized_light.vim	/^    let s:base01      = "10"$/;"	v
s:base01	colors/solarized_light.vim	/^    let s:base01      = "239"$/;"	v
s:base01	colors/solarized_light.vim	/^    let s:base01      = "LightGreen"    " 2*$/;"	v
s:base01	colors/solarized_light.vim	/^    let s:base01      = s:base00$/;"	v
s:base01	colors/solarized_light.vim	/^    let s:base01      = s:base1$/;"	v
s:base02	colors/solarized_light.vim	/^    let s:base02      = "#073642"$/;"	v
s:base02	colors/solarized_light.vim	/^    let s:base02      = "#262626"$/;"	v
s:base02	colors/solarized_light.vim	/^    let s:base02      = "0"$/;"	v
s:base02	colors/solarized_light.vim	/^    let s:base02      = "235"$/;"	v
s:base02	colors/solarized_light.vim	/^    let s:base02      = "Black"         " 0$/;"	v
s:base02	colors/solarized_light.vim	/^    let s:base02      = s:base2$/;"	v
s:base03	colors/solarized_light.vim	/^    let s:base03      = "#002b36"$/;"	v
s:base03	colors/solarized_light.vim	/^    let s:base03      = "#1c1c1c"$/;"	v
s:base03	colors/solarized_light.vim	/^    let s:base03      = "234"$/;"	v
s:base03	colors/solarized_light.vim	/^    let s:base03      = "8"$/;"	v
s:base03	colors/solarized_light.vim	/^    let s:base03      = "DarkGray"      " 0*$/;"	v
s:base03	colors/solarized_light.vim	/^    let s:base03      = s:base3$/;"	v
s:base1	colors/solarized_light.vim	/^    let s:base1       = "#8a8a8a"$/;"	v
s:base1	colors/solarized_light.vim	/^    let s:base1       = "#93a1a1"$/;"	v
s:base1	colors/solarized_light.vim	/^    let s:base1       = "14"$/;"	v
s:base1	colors/solarized_light.vim	/^    let s:base1       = "245"$/;"	v
s:base1	colors/solarized_light.vim	/^    let s:base1       = "LightCyan"     " 6*$/;"	v
s:base1	colors/solarized_light.vim	/^    let s:base1       = s:base2$/;"	v
s:base1	colors/solarized_light.vim	/^    let s:base1       = s:temp01$/;"	v
s:base2	colors/solarized_light.vim	/^    let s:base2       = "#d7d7af"$/;"	v
s:base2	colors/solarized_light.vim	/^    let s:base2       = "#eee8d5"$/;"	v
s:base2	colors/solarized_light.vim	/^    let s:base2       = "187"$/;"	v
s:base2	colors/solarized_light.vim	/^    let s:base2       = "7"$/;"	v
s:base2	colors/solarized_light.vim	/^    let s:base2       = "LightGray"     " 7$/;"	v
s:base2	colors/solarized_light.vim	/^    let s:base2       = s:base3$/;"	v
s:base2	colors/solarized_light.vim	/^    let s:base2       = s:temp02$/;"	v
s:base3	colors/solarized_light.vim	/^    let s:base3       = "#fdf6e3"$/;"	v
s:base3	colors/solarized_light.vim	/^    let s:base3       = "#ffffd7"$/;"	v
s:base3	colors/solarized_light.vim	/^    let s:base3       = "15"$/;"	v
s:base3	colors/solarized_light.vim	/^    let s:base3       = "230"$/;"	v
s:base3	colors/solarized_light.vim	/^    let s:base3       = "White"         " 7*$/;"	v
s:base3	colors/solarized_light.vim	/^    let s:base3       = s:temp03$/;"	v
s:bb	colors/solarized_light.vim	/^    let s:bb          = ""$/;"	v
s:bb	colors/solarized_light.vim	/^    let s:bb          = ",bold"$/;"	v
s:blue	colors/solarized_light.vim	/^    let s:blue        = "#0087ff"$/;"	v
s:blue	colors/solarized_light.vim	/^    let s:blue        = "#268bd2"$/;"	v
s:blue	colors/solarized_light.vim	/^    let s:blue        = "33"$/;"	v
s:blue	colors/solarized_light.vim	/^    let s:blue        = "4"$/;"	v
s:blue	colors/solarized_light.vim	/^    let s:blue        = "DarkBlue"      " 4$/;"	v
s:bright	colors/solarized_light.vim	/^    let s:bright      = "* term=bold cterm=bold"$/;"	v
s:bufTimes	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^let s:bufTimes = {}$/;"	v
s:bufferCursorPosMap	bundle/FuzzyFinder/autoload/fuf.vim	/^let s:bufferCursorPosMap = {}$/;"	v
s:buffer_prototype	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_sources	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^  let s:buffer_sources = {}$/;"	v
s:c	colors/solarized_light.vim	/^    let s:c               = ",undercurl"$/;"	v
s:cached_files	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^let s:cached_files = {}$/;"	v
s:charsToClose	bundle/AutoClose--Alves/plugin/autoclose.vim	/^    let s:charsToClose = g:AutoClosePairs$/;"	v
s:charsToClose	bundle/AutoClose--Alves/plugin/autoclose.vim	/^    let s:charsToClose = {'(': ')', '{': '}', '[': ']', '"': '"', "'": "'"}$/;"	v
s:checked_ctags	bundle/tagbar/autoload/tagbar.vim	/^let s:checked_ctags       = 0$/;"	v
s:checked_ctags_types	bundle/tagbar/autoload/tagbar.vim	/^let s:checked_ctags_types = 0$/;"	v
s:colorscheme_list	colors/solarized_light.vim	/^let s:colorscheme_list=[$/;"	v
s:commands	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:commands = []$/;"	v
s:ctags_types	bundle/tagbar/autoload/tagbar.vim	/^let s:ctags_types         = {}$/;"	v
s:cterm2gui_dict	bundle/vim-powerline/autoload/Pl/Hi.vim	/^let s:cterm2gui_dict = {$/;"	v
s:cur_mode	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^let s:cur_mode = ''$/;"	v
s:cyan	colors/solarized_light.vim	/^    let s:cyan        = "#00afaf"$/;"	v
s:cyan	colors/solarized_light.vim	/^    let s:cyan        = "#2aa198"$/;"	v
s:cyan	colors/solarized_light.vim	/^    let s:cyan        = "37"$/;"	v
s:cyan	colors/solarized_light.vim	/^    let s:cyan        = "6"$/;"	v
s:cyan	colors/solarized_light.vim	/^    let s:cyan        = "DarkCyan"      " 6$/;"	v
s:dataMap	bundle/L9/autoload/l9/tempbuffer.vim	/^let s:dataMap = {}$/;"	v
s:debug	bundle/AutoClose--Alves/plugin/autoclose.vim	/^let s:debug = 1$/;"	v
s:debug	bundle/tagbar/autoload/tagbar.vim	/^let s:debug = 0$/;"	v
s:debug_file	bundle/tagbar/autoload/tagbar.vim	/^let s:debug_file = ''$/;"	v
s:default_modes	bundle/vim-powerline/autoload/Pl/Segment.vim	/^let s:default_modes = ['n', 'N', 'v', 'i', 'r', 's']$/;"	v
s:defaults_list	colors/solarized_light.vim	/^let s:defaults_list=[$/;"	v
s:did_snip_helper	bundle/snipmate.vim/ftplugin/html_snip_helper.vim	/^let s:did_snip_helper = 1$/;"	v
s:did_snips_mappings	bundle/snipmate.vim/after/plugin/snipMate.vim	/^let s:did_snips_mappings = 1$/;"	v
s:doc_dict	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^let s:doc_dict = {$/;"	v
s:doc_dict	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^let s:doc_dict = {$/;"	v
s:done_bundles	autoload/pathogen.vim	/^let s:done_bundles = ''$/;"	v
s:escape_chars	bundle/nerdtree/plugin/NERD_tree.vim	/^    let s:escape_chars =  " \\\\`\\|\\"#%&,?()\\*^<>[]"$/;"	v
s:escape_chars	bundle/nerdtree/plugin/NERD_tree.vim	/^    let s:escape_chars =  " `\\|\\"#%&,?()\\*^<>"$/;"	v
s:exists_md5	bundle/neocomplcache/autoload/vital/_9813ec6/system/cache.vim	/^  let s:exists_md5 = 0$/;"	v
s:exists_md5	bundle/neocomplcache/autoload/vital/_9813ec6/system/cache.vim	/^  let s:exists_md5 = 1$/;"	v
s:fg_pdef	colors/solarized_light.vim	/^let s:fg_pdef = s:fg_violet$/;"	v
s:fg_phead	colors/solarized_light.vim	/^let s:fg_phead = s:fg_orange$/;"	v
s:fg_ptable	colors/solarized_light.vim	/^let s:fg_ptable = s:fg_blue$/;"	v
s:function_return_types	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^let s:function_return_types = {}$/;"	v
s:global_candidates_list	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^  let s:global_candidates_list = { 'dictionary_variables' : {} }$/;"	v
s:global_cpo	bundle/AutoClose--Alves/plugin/autoclose.vim	/^let s:global_cpo = &cpo " store compatible-mode in local variable$/;"	v
s:green	colors/solarized_light.vim	/^    let s:green       = "#5f8700"$/;"	v
s:green	colors/solarized_light.vim	/^    let s:green       = "#719e07" "experimental$/;"	v
s:green	colors/solarized_light.vim	/^    let s:green       = "2"$/;"	v
s:green	colors/solarized_light.vim	/^    let s:green       = "64"$/;"	v
s:green	colors/solarized_light.vim	/^    let s:green       = "DarkGreen"     " 2$/;"	v
s:grouping_algorithms	bundle/vim-easymotion/autoload/EasyMotion.vim	/^	let s:grouping_algorithms = {$/;"	v
s:handler	bundle/FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/FuzzyFinder/autoload/fuf/buffertag.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/FuzzyFinder/autoload/fuf/callbackfile.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/FuzzyFinder/autoload/fuf/callbackitem.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/FuzzyFinder/autoload/fuf/changelist.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/FuzzyFinder/autoload/fuf/coveragefile.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/FuzzyFinder/autoload/fuf/dir.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/FuzzyFinder/autoload/fuf/file.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/FuzzyFinder/autoload/fuf/givencmd.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/FuzzyFinder/autoload/fuf/givendir.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/FuzzyFinder/autoload/fuf/givenfile.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/FuzzyFinder/autoload/fuf/help.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/FuzzyFinder/autoload/fuf/jumplist.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/FuzzyFinder/autoload/fuf/line.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/FuzzyFinder/autoload/fuf/mrucmd.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/FuzzyFinder/autoload/fuf/mrufile.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/FuzzyFinder/autoload/fuf/quickfix.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/FuzzyFinder/autoload/fuf/tag.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/FuzzyFinder/autoload/fuf/taggedfile.vim	/^let s:handler = {}$/;"	v
s:handlerBase	bundle/FuzzyFinder/autoload/fuf.vim	/^let s:handlerBase = {}$/;"	v
s:hooks	bundle/conque_2.3/autoload/conque_term.vim	/^let s:hooks = { 'after_startup': [], 'buffer_enter': [], 'buffer_leave': [], 'after_keymap': [] }$/;"	v
s:i	colors/solarized_light.vim	/^    let s:i           = ""$/;"	v
s:i	colors/solarized_light.vim	/^    let s:i           = ",italic"$/;"	v
s:ic	bundle/tagbar/syntax/tagbar.vim	/^    let s:ic = '\\' . s:ic$/;"	v
s:ic	bundle/tagbar/syntax/tagbar.vim	/^let s:ic = g:tagbar_iconchars[0]$/;"	v
s:icon_closed	bundle/tagbar/autoload/tagbar.vim	/^let s:icon_closed = g:tagbar_iconchars[0]$/;"	v
s:icon_open	bundle/tagbar/autoload/tagbar.vim	/^let s:icon_open   = g:tagbar_iconchars[1]$/;"	v
s:include_info	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^let s:include_info = {}$/;"	v
s:initialized	bundle/conque_2.3/autoload/conque_term.vim	/^let s:initialized = 0$/;"	v
s:internal_candidates_list	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^  let s:internal_candidates_list = {}$/;"	v
s:io	bundle/tagbar/syntax/tagbar.vim	/^    let s:io = '\\' . s:io$/;"	v
s:io	bundle/tagbar/syntax/tagbar.vim	/^let s:io = g:tagbar_iconchars[1]$/;"	v
s:is_cygwin	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	bundle/neocomplcache/autoload/vital/_9813ec6/system/cache.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_enabled	bundle/neocomplcache/autoload/neocomplcache.vim	/^  let s:is_enabled = 0$/;"	v
s:is_mac	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	bundle/neocomplcache/autoload/vital/_9813ec6/system/cache.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_windows	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64')$/;"	v
s:is_windows	bundle/neocomplcache/autoload/vital/_9813ec6/system/cache.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64')$/;"	v
s:known_files	bundle/tagbar/autoload/tagbar.vim	/^let s:known_files = {$/;"	v
s:last_highlight_tline	bundle/tagbar/autoload/tagbar.vim	/^let s:last_highlight_tline = 0$/;"	v
s:lazycat_list	colors/solarized_light.vim	/^let s:lazycat_list=[$/;"	v
s:loaded	bundle/neocomplcache/autoload/vital/_9813ec6.vim	/^let s:loaded = {}$/;"	v
s:local_candidates_list	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^  let s:local_candidates_list = {}$/;"	v
s:magenta	colors/solarized_light.vim	/^    let s:magenta     = "#af005f"$/;"	v
s:magenta	colors/solarized_light.vim	/^    let s:magenta     = "#d33682"$/;"	v
s:magenta	colors/solarized_light.vim	/^    let s:magenta     = "125"$/;"	v
s:magenta	colors/solarized_light.vim	/^    let s:magenta     = "5"$/;"	v
s:magenta	colors/solarized_light.vim	/^    let s:magenta     = "DarkMagenta"   " 5$/;"	v
s:member_sources	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^  let s:member_sources = {}$/;"	v
s:menu_root	bundle/SingleCompile/plugin/SingleCompile.vim	/^        let s:menu_root = 'Plugin.SingleCompile'$/;"	v
s:menu_root	bundle/SingleCompile/plugin/SingleCompile.vim	/^        let s:menu_root = 'SingleCompile'$/;"	v
s:modeNames	bundle/FuzzyFinder/autoload/fuf.vim	/^let s:modeNames = []$/;"	v
s:mode_dict	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^let s:mode_dict = {}$/;"	v
s:n	colors/solarized_light.vim	/^    let s:n               = "NONE"$/;"	v
s:neocomplcache_source	bundle/neocomplcache/autoload/unite/sources/neocomplcache.vim	/^let s:neocomplcache_source = {$/;"	v
s:next_buffer_number	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:next_buffer_number = 1$/;"	v
s:none	colors/solarized_light.vim	/^    let s:none            = "NONE"$/;"	v
s:ob	colors/solarized_light.vim	/^    let s:ob              = ""$/;"	v
s:old_cpo	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:oneTimeVariables	bundle/FuzzyFinder/autoload/fuf.vim	/^let s:oneTimeVariables = []$/;"	v
s:options_list	colors/solarized_light.vim	/^let s:options_list=[$/;"	v
s:orange	colors/solarized_light.vim	/^    let s:orange      = "#cb4b16"$/;"	v
s:orange	colors/solarized_light.vim	/^    let s:orange      = "#d75f00"$/;"	v
s:orange	colors/solarized_light.vim	/^    let s:orange      = "166"$/;"	v
s:orange	colors/solarized_light.vim	/^    let s:orange      = "9"$/;"	v
s:orange	colors/solarized_light.vim	/^    let s:orange      = "LightRed"      " 1*$/;"	v
s:origMap	bundle/L9/autoload/l9/tempvariables.vim	/^let s:origMap = {}$/;"	v
s:ou	colors/solarized_light.vim	/^    let s:ou              = ""$/;"	v
s:ou	colors/solarized_light.vim	/^    let s:ou          = ",underline"$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '[' . s:ic . s:io . ']\\([-+# ]\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\([' . s:ic . s:io . ' ]\\)\\@<=#\\([^-+# ]\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\([' . s:ic . s:io . ' ]\\)\\@<=+\\([^-+# ]\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\([' . s:ic . s:io . ' ]\\)\\@<=-\\([^-+# ]\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\([' . s:ic . s:io . '] \\)\\@<=[^-+: ]\\+[^:]\\+$'$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\([' . s:ic . s:io . '][-+# ]\\)\\@<=[^*]\\+\\(\\*\\?\\(([^)]\\+)\\)\\? :\\)\\@='$/;"	v
s:protectedRegions	bundle/AutoClose--Alves/plugin/autoclose.vim	/^    let s:protectedRegions = ["Comment", "String", "Character"]$/;"	v
s:protectedRegions	bundle/AutoClose--Alves/plugin/autoclose.vim	/^    let s:protectedRegions = g:AutoCloseProtectedRegions$/;"	v
s:r	colors/solarized_light.vim	/^    let s:r               = ",reverse"$/;"	v
s:red	colors/solarized_light.vim	/^    let s:red         = "#af0000"$/;"	v
s:red	colors/solarized_light.vim	/^    let s:red         = "#dc322f"$/;"	v
s:red	colors/solarized_light.vim	/^    let s:red         = "1"$/;"	v
s:red	colors/solarized_light.vim	/^    let s:red         = "124"$/;"	v
s:red	colors/solarized_light.vim	/^    let s:red         = "DarkRed"       " 1$/;"	v
s:repo_prototype	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repos	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:repos = {}$/;"	v
s:run_result_tempfile	bundle/SingleCompile/autoload/SingleCompile.vim	/^let s:run_result_tempfile = ''$/;"	v
s:running	bundle/AutoClose--Alves/plugin/autoclose.vim	/^    let s:running = 1$/;"	v
s:running	bundle/AutoClose--Alves/plugin/autoclose.vim	/^    let s:running = g:AutoCloseOn$/;"	v
s:running_windows	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:running_windows = has("win16") || has("win32") || has("win64")$/;"	v
s:s	colors/solarized_light.vim	/^    let s:s               = ",standout"$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/sources/abbrev_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/sources/keyword_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/unite/sources/file_include.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/unite/sources/neocomplcache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/vital/_9813ec6/system/cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/plugin/neocomplcache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_updatetime	bundle/conque_2.3/autoload/conque_term.vim	/^let s:save_updatetime = &updatetime$/;"	v
s:saved_cpo	bundle/SingleCompile/autoload/SingleCompile.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	bundle/SingleCompile/autoload/SingleCompileAsync.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	bundle/SingleCompile/plugin/SingleCompile.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_terminals	bundle/conque_2.3/autoload/conque_term.vim	/^        let s:saved_terminals = {}$/;"	v
s:script_candidates_list	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^  let s:script_candidates_list = {}$/;"	v
s:scriptdir	bundle/conque_2.3/autoload/conque_term.vim	/^let s:scriptdir = expand("<sfile>:h") . '\/'$/;"	v
s:scriptdirpy	bundle/conque_2.3/autoload/conque_term.vim	/^let s:scriptdirpy = expand("<sfile>:h") . '\/conque_term\/'$/;"	v
s:sdir	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^let s:sdir = neocomplcache#util#substitute_path_separator($/;"	v
s:segment_mods	bundle/vim-powerline/autoload/Pl/Mod.vim	/^let s:segment_mods = []$/;"	v
s:self_version	bundle/neocomplcache/autoload/vital/_9813ec6.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:shade_hl_defaults	bundle/vim-easymotion/plugin/EasyMotion.vim	/^		let s:shade_hl_defaults = {$/;"	v
s:snippets	bundle/snipmate.vim/plugin/snipMate.vim	/^let s:snippets = {} | let s:multi_snips = {}$/;"	v
s:solarized_termtrans_default	colors/solarized_light.vim	/^    let s:solarized_termtrans_default = 0$/;"	v
s:solarized_termtrans_default	colors/solarized_light.vim	/^    let s:solarized_termtrans_default = 1$/;"	v
s:source	bundle/neocomplcache/autoload/neocomplcache/sources/abbrev_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache/autoload/neocomplcache/sources/keyword_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache/autoload/unite/sources/file_include.vim	/^let s:source = {$/;"	v
s:sp_back	colors/solarized_light.vim	/^    let s:sp_back      = ""$/;"	v
s:sp_base0	colors/solarized_light.vim	/^    let s:sp_base0     = ""$/;"	v
s:sp_base00	colors/solarized_light.vim	/^    let s:sp_base00    = ""$/;"	v
s:sp_base01	colors/solarized_light.vim	/^    let s:sp_base01    = ""$/;"	v
s:sp_base02	colors/solarized_light.vim	/^    let s:sp_base02    = ""$/;"	v
s:sp_base03	colors/solarized_light.vim	/^    let s:sp_base03    = ""$/;"	v
s:sp_base1	colors/solarized_light.vim	/^    let s:sp_base1     = ""$/;"	v
s:sp_base2	colors/solarized_light.vim	/^    let s:sp_base2     = ""$/;"	v
s:sp_base3	colors/solarized_light.vim	/^    let s:sp_base3     = ""$/;"	v
s:sp_blue	colors/solarized_light.vim	/^    let s:sp_blue      = ""$/;"	v
s:sp_cyan	colors/solarized_light.vim	/^    let s:sp_cyan      = ""$/;"	v
s:sp_green	colors/solarized_light.vim	/^    let s:sp_green     = ""$/;"	v
s:sp_magenta	colors/solarized_light.vim	/^    let s:sp_magenta   = ""$/;"	v
s:sp_none	colors/solarized_light.vim	/^    let s:sp_none      = ""$/;"	v
s:sp_orange	colors/solarized_light.vim	/^    let s:sp_orange    = ""$/;"	v
s:sp_red	colors/solarized_light.vim	/^    let s:sp_red       = ""$/;"	v
s:sp_violet	colors/solarized_light.vim	/^    let s:sp_violet    = ""$/;"	v
s:sp_yellow	colors/solarized_light.vim	/^    let s:sp_yellow    = ""$/;"	v
s:t_none	colors/solarized_light.vim	/^    let s:t_none          = "NONE"$/;"	v
s:target_hl_defaults	bundle/vim-easymotion/plugin/EasyMotion.vim	/^		let s:target_hl_defaults = {$/;"	v
s:temp00	colors/solarized_light.vim	/^    let s:temp00      = s:base00$/;"	v
s:temp01	colors/solarized_light.vim	/^    let s:temp01      = s:base01$/;"	v
s:temp02	colors/solarized_light.vim	/^    let s:temp02      = s:base02$/;"	v
s:temp03	colors/solarized_light.vim	/^    let s:temp03      = s:base03$/;"	v
s:temp_files	bundle/vim-fugitive/plugin/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:term_obj	bundle/conque_2.3/autoload/conque_term.vim	/^let s:term_obj = {'idx': 1, 'var': '', 'is_buffer': 1, 'active': 1, 'buffer_name': '', 'command': ''}$/;"	v
s:terminal_italic	colors/solarized_light.vim	/^            let s:terminal_italic=1$/;"	v
s:terminal_italic	colors/solarized_light.vim	/^    let s:terminal_italic=0 " terminals will be guilty until proven compatible$/;"	v
s:terminal_italic	colors/solarized_light.vim	/^    let s:terminal_italic=1 " TODO: could refactor to not require this at all$/;"	v
s:terms_italic	colors/solarized_light.vim	/^let s:terms_italic=[$/;"	v
s:terms_noitalic	colors/solarized_light.vim	/^let s:terms_noitalic=[$/;"	v
s:timerData	bundle/L9/plugin/l9.vim	/^  let s:timerData = []$/;"	v
s:timerTagMaxLen	bundle/L9/plugin/l9.vim	/^  let s:timerTagMaxLen = 0$/;"	v
s:tree_markup_reg	bundle/nerdtree/plugin/NERD_tree.vim	/^    let s:tree_markup_reg = '^[ `|]*[\\-+~]'$/;"	v
s:tree_markup_reg	bundle/nerdtree/plugin/NERD_tree.vim	/^    let s:tree_markup_reg = '^\\([▾▸] \\| \\+[▾▸] \\| \\+\\)'$/;"	v
s:tree_up_dir_line	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:tree_up_dir_line	bundle/nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:tree_wid	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:tree_wid = 2$/;"	v
s:type_init_done	bundle/tagbar/autoload/tagbar.vim	/^let s:type_init_done      = 0$/;"	v
s:u	colors/solarized_light.vim	/^    let s:u           = ""$/;"	v
s:u	colors/solarized_light.vim	/^    let s:u           = ",underline"$/;"	v
s:violet	colors/solarized_light.vim	/^    let s:violet      = "#5f5faf"$/;"	v
s:violet	colors/solarized_light.vim	/^    let s:violet      = "#6c71c4"$/;"	v
s:violet	colors/solarized_light.vim	/^    let s:violet      = "13"$/;"	v
s:violet	colors/solarized_light.vim	/^    let s:violet      = "61"$/;"	v
s:violet	colors/solarized_light.vim	/^    let s:violet      = "LightMagenta"  " 5*$/;"	v
s:vmode	colors/solarized_light.vim	/^    let s:vmode       = "cterm"$/;"	v
s:vmode	colors/solarized_light.vim	/^    let s:vmode       = "gui"$/;"	v
s:window_expanded	bundle/tagbar/autoload/tagbar.vim	/^let s:window_expanded     = 0$/;"	v
s:windows_vk	bundle/conque_2.3/autoload/conque_term.vim	/^let s:windows_vk = {$/;"	v
s:yellow	colors/solarized_light.vim	/^    let s:yellow      = "#af8700"$/;"	v
s:yellow	colors/solarized_light.vim	/^    let s:yellow      = "#b58900"$/;"	v
s:yellow	colors/solarized_light.vim	/^    let s:yellow      = "136"$/;"	v
s:yellow	colors/solarized_light.vim	/^    let s:yellow      = "3"$/;"	v
s:yellow	colors/solarized_light.vim	/^    let s:yellow      = "DarkYellow"    " 3$/;"	v
saveScreenState	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:saveScreenState()$/;"	f
save_all_cache	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:save_all_cache()"{{{$/;"	f
save_cache	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:save_cache(srcname)"{{{$/;"	f
scale_matrix	bundle/vim-powerline/fontpatcher/fontpatcher	/^			scale_matrix = psMat.scale(font_dim['width'] \/ sym_dim['width'], 1)$/;"	v
scale_ratio	bundle/vim-powerline/fontpatcher/fontpatcher	/^			scale_ratio = font_dim['height'] \/ sym_dim['height']$/;"	v
scale_ratio	bundle/vim-powerline/fontpatcher/fontpatcher	/^			scale_ratio = font_dim['width'] \/ sym_dim['width']$/;"	v
scoreBoundaryMatching	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:scoreBoundaryMatching(wordForBoundary, pattern, exprBoundary)$/;"	f
scoreSequentialMatching	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:scoreSequentialMatching(word, pattern)$/;"	f
screen	bundle/conque_2.3/autoload/conque_term/conque.py	/^    screen = None$/;"	v	class:Conque
screen_encoding	bundle/conque_2.3/autoload/conque_term/conque_screen.py	/^    screen_encoding = 'utf-8'$/;"	v	class:ConqueScreen
screen_height	bundle/conque_2.3/autoload/conque_term/conque_screen.py	/^    screen_height = 80$/;"	v	class:ConqueScreen
screen_redraw_ct	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    screen_redraw_ct = 1$/;"	v	class:ConqueSole
screen_redraw_ct	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    screen_redraw_ct = 0$/;"	v	class:ConqueSoleSubprocess
screen_top	bundle/conque_2.3/autoload/conque_term/conque_screen.py	/^    screen_top = 1$/;"	v	class:ConqueScreen
screen_width	bundle/conque_2.3/autoload/conque_term/conque_screen.py	/^    screen_width = 80$/;"	v	class:ConqueScreen
serialize	bundle/conque_2.3/autoload/conque_term/conque_sole_shared_memory.py	/^    serialize = False$/;"	v	class:ConqueSoleSharedMemory
setAbbrWithFileAbbrData	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:setAbbrWithFileAbbrData(item, snippedHeads)$/;"	f
setCommonBufOptions	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:setCommonBufOptions()$/;"	f
setRanks	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:setRanks(item, pattern, exprBoundary, stats)$/;"	f
set_auto_completion_length	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! s:set_auto_completion_length(len)"{{{$/;"	f
set_complete_results_pos	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! s:set_complete_results_pos(cur_text, ...)"{{{$/;"	f
set_complete_results_pos	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:set_complete_results_pos(funcs, cur_text)"{{{$/;"	f
set_complete_results_words	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! s:set_complete_results_words(complete_results)"{{{$/;"	f
set_complete_results_words	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:set_complete_results_words(complete_results)"{{{$/;"	f
set_context_filetype	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! s:set_context_filetype()"{{{$/;"	f
set_cursor	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def set_cursor(self, line, col):$/;"	m	class:Conque	access:public
set_cursor	bundle/conque_2.3/autoload/conque_term/conque_screen.py	/^    def set_cursor(self, line, column):$/;"	m	class:ConqueScreen	access:public
set_cursor	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    def set_cursor(self, line, column):$/;"	m	class:ConqueSole	access:public
set_default	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:set_default(var, val)  "{{{$/;"	f
set_dictionary_helper	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:set_dictionary_helper(variable, keys, value)"{{{$/;"	f
set_dictionary_helper	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:set_dictionary_helper(variable, keys, pattern)"{{{$/;"	f
set_screen_width	bundle/conque_2.3/autoload/conque_term/conque_screen.py	/^    def set_screen_width(self, width):$/;"	m	class:ConqueScreen	access:public
set_window_size	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    def set_window_size(self, width, height):$/;"	m	class:ConqueSoleSubprocess	access:public
setupColorScheme	bundle/colorselector/plugin/colorselector.vim	/^fun! s:setupColorScheme(cs,unset)$/;"	f
setupStatusline	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:setupStatusline()$/;"	f
shellesc	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellslash	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:shellslash(path)$/;"	f
shift	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:shift(list)$/;"	f
shm	bundle/conque_2.3/autoload/conque_term/conque_sole_shared_memory.py	/^    shm = None$/;"	v	class:ConqueSoleSharedMemory
shm_attributes	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    shm_attributes = None$/;"	v	class:ConqueSoleSubprocess
shm_attributes	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^    shm_attributes = None$/;"	v	class:ConqueSoleWrapper
shm_command	bundle/conque_2.3/autoload/conque_term/conque_sole_communicator.py	/^        shm_command = ConqueSoleSharedMemory(CONQUE_SOLE_COMMANDS_SIZE, 'command', mem_key, serialize=True)$/;"	v
shm_command	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    shm_command = None$/;"	v	class:ConqueSoleSubprocess
shm_command	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^    shm_command = None$/;"	v	class:ConqueSoleWrapper
shm_input	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    shm_input = None$/;"	v	class:ConqueSoleSubprocess
shm_input	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^    shm_input = None$/;"	v	class:ConqueSoleWrapper
shm_key	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^    shm_key = ''$/;"	v	class:ConqueSoleWrapper
shm_output	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    shm_output = None$/;"	v	class:ConqueSoleSubprocess
shm_output	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^    shm_output = None$/;"	v	class:ConqueSoleWrapper
shm_rescroll	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    shm_rescroll = None$/;"	v	class:ConqueSoleSubprocess
shm_rescroll	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^    shm_rescroll = None$/;"	v	class:ConqueSoleWrapper
shm_resize	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    shm_resize = None$/;"	v	class:ConqueSoleSubprocess
shm_resize	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^    shm_resize = None$/;"	v	class:ConqueSoleWrapper
shm_stats	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    shm_stats = None$/;"	v	class:ConqueSoleSubprocess
shm_stats	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^    shm_stats = None$/;"	v	class:ConqueSoleWrapper
showMenu	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:showMenu(node)$/;"	f
signal	bundle/conque_2.3/autoload/conque_term/conque_subprocess.py	/^    def signal(self, signum):$/;"	m	class:ConqueSubprocess	access:public
sleep_time	bundle/conque_2.3/autoload/conque_term/conque_sole_communicator.py	/^        sleep_time = 0.01$/;"	v
smart_execute_command	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:smart_execute_command(action, word)"{{{$/;"	f
snipMate#expandSnip	bundle/snipmate.vim/autoload/snipMate.vim	/^fun snipMate#expandSnip(snip, col)$/;"	f
snipMate#jumpTabStop	bundle/snipmate.vim/autoload/snipMate.vim	/^fun snipMate#jumpTabStop(backwards)$/;"	f
snippets_dir	bundle/snipmate.vim/plugin/snipMate.vim	/^	let snippets_dir = substitute(globpath(&rtp, 'snippets\/'), "\\n", ',', 'g')$/;"	v
sort	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:sort(list, expr)$/;"	f
sort_by	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:sort_by(list, expr)$/;"	f
source.finalize	bundle/neocomplcache/autoload/neocomplcache/sources/abbrev_complete.vim	/^function! s:source.finalize()"{{{$/;"	f
source.finalize	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:source.finalize()"{{{$/;"	f
source.finalize	bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:source.finalize()"{{{$/;"	f
source.finalize	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:source.finalize()"{{{$/;"	f
source.finalize	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:source.finalize()"{{{$/;"	f
source.finalize	bundle/neocomplcache/autoload/neocomplcache/sources/keyword_complete.vim	/^function! s:source.finalize()"{{{$/;"	f
source.finalize	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:source.finalize()"{{{$/;"	f
source.finalize	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:source.finalize()"{{{$/;"	f
source.finalize	bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:source.finalize()"{{{$/;"	f
source.finalize	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! s:source.finalize()"{{{$/;"	f
source.gather_candidates	bundle/neocomplcache/autoload/unite/sources/file_include.vim	/^function! s:source.gather_candidates(args, context)"{{{$/;"	f
source.get_complete_words	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:source.get_complete_words(cur_keyword_pos, cur_keyword_str)"{{{$/;"	f
source.get_complete_words	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:source.get_complete_words(cur_keyword_pos, cur_keyword_str)"{{{$/;"	f
source.get_complete_words	bundle/neocomplcache/autoload/neocomplcache/sources/keyword_complete.vim	/^function! s:source.get_complete_words(cur_keyword_pos, cur_keyword_str)"{{{$/;"	f
source.get_complete_words	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:source.get_complete_words(cur_keyword_pos, cur_keyword_str)"{{{$/;"	f
source.get_complete_words	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:source.get_complete_words(cur_keyword_pos, cur_keyword_str)"{{{$/;"	f
source.get_complete_words	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! s:source.get_complete_words(cur_keyword_pos, cur_keyword_str)"{{{$/;"	f
source.get_keyword_list	bundle/neocomplcache/autoload/neocomplcache/sources/abbrev_complete.vim	/^function! s:source.get_keyword_list(cur_keyword_str)"{{{$/;"	f
source.get_keyword_list	bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:source.get_keyword_list(cur_keyword_str)"{{{$/;"	f
source.get_keyword_list	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:source.get_keyword_list(cur_keyword_str)"{{{$/;"	f
source.get_keyword_list	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:source.get_keyword_list(cur_keyword_str)"{{{$/;"	f
source.get_keyword_list	bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:source.get_keyword_list(cur_keyword_str)"{{{$/;"	f
source.get_keyword_pos	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:source.get_keyword_pos(cur_text)"{{{$/;"	f
source.get_keyword_pos	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:source.get_keyword_pos(cur_text)"{{{$/;"	f
source.get_keyword_pos	bundle/neocomplcache/autoload/neocomplcache/sources/keyword_complete.vim	/^function! s:source.get_keyword_pos(cur_text)"{{{$/;"	f
source.get_keyword_pos	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:source.get_keyword_pos(cur_text)"{{{$/;"	f
source.get_keyword_pos	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:source.get_keyword_pos(cur_text)"{{{$/;"	f
source.get_keyword_pos	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! s:source.get_keyword_pos(cur_text)"{{{$/;"	f
source.hooks.on_init	bundle/neocomplcache/autoload/unite/sources/file_include.vim	/^function! s:source.hooks.on_init(args, context)"{{{$/;"	f
source.initialize	bundle/neocomplcache/autoload/neocomplcache/sources/abbrev_complete.vim	/^function! s:source.initialize()"{{{$/;"	f
source.initialize	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:source.initialize()"{{{$/;"	f
source.initialize	bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:source.initialize()"{{{$/;"	f
source.initialize	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:source.initialize()"{{{$/;"	f
source.initialize	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:source.initialize()"{{{$/;"	f
source.initialize	bundle/neocomplcache/autoload/neocomplcache/sources/keyword_complete.vim	/^function! s:source.initialize()"{{{$/;"	f
source.initialize	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:source.initialize()"{{{$/;"	f
source.initialize	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:source.initialize()"{{{$/;"	f
source.initialize	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:source.initialize()"{{{$/;"	f
source.initialize	bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:source.initialize()"{{{$/;"	f
source.initialize	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! s:source.initialize()"{{{$/;"	f
span	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:span(f, xs)$/;"	f
split_args	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:split_args(cur_text, cur_keyword_str)"{{{$/;"	f
split_pattern	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:split_pattern(keyword_pattern)"{{{$/;"	f
stage_info	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:stage_info(lnum) abort$/;"	f
start_complete	bundle/neocomplcache/autoload/unite/sources/neocomplcache.vim	/^function! s:start_complete(is_quick_match)$/;"	f
stdin	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    stdin = None$/;"	v	class:ConqueSoleSubprocess
stdout	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    stdout = None$/;"	v	class:ConqueSoleSubprocess
strchars	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:strchars(str)"{{{$/;"	f
stripMarkupFromLine	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:stripMarkupFromLine(line, removeLeadingSpaces)$/;"	f
strwidthpart	bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^function! s:strwidthpart(str, width)"{{{$/;"	f
strwidthpart	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:strwidthpart(str, width)"{{{$/;"	f
strwidthpart_reverse	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:strwidthpart_reverse(str, width)"{{{$/;"	f
sub	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
substitute_candidate	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:substitute_candidate(candidate)"{{{$/;"	f
substitute_path_separator	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:substitute_path_separator(path)"{{{$/;"	f
sym_attr	bundle/vim-powerline/fontpatcher/fontpatcher	/^		sym_attr = SYM_ATTR[sym_glyph.unicode]$/;"	v
sym_dim	bundle/vim-powerline/fontpatcher/fontpatcher	/^			sym_dim = get_dim(font[sym_glyph.unicode])$/;"	v
sym_dim	bundle/vim-powerline/fontpatcher/fontpatcher	/^		sym_dim = get_dim(font[sym_glyph.unicode])$/;"	v
sym_dim	bundle/vim-powerline/fontpatcher/fontpatcher	/^		sym_dim = get_dim(sym_glyph)$/;"	v
sym_ycenter	bundle/vim-powerline/fontpatcher/fontpatcher	/^		sym_ycenter  = sym_dim['height'] \/ 2$/;"	v
symbols	bundle/vim-powerline/fontpatcher/fontpatcher	/^	symbols = fontforge.open(args.symbol_font)$/;"	v
system	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:system(str, ...)"{{{$/;"	f
tabpagevar	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:tabpagevar(tabnr, var)$/;"	f
tabstops	bundle/conque_2.3/autoload/conque_term/conque.py	/^    tabstops = []$/;"	v	class:Conque
tagbar#CloseWindow	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#CloseWindow() abort$/;"	f
tagbar#OpenParents	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#OpenParents() abort$/;"	f
tagbar#OpenWindow	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#OpenWindow(...) abort$/;"	f
tagbar#RestoreSession	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#RestoreSession() abort$/;"	f
tagbar#SetFoldLevel	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#SetFoldLevel(level, force) abort$/;"	f
tagbar#StartDebug	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#StartDebug(...) abort$/;"	f
tagbar#StopDebug	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#StopDebug() abort$/;"	f
tagbar#ToggleWindow	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#ToggleWindow() abort$/;"	f
tagbar#autoopen	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#autoopen(...) abort$/;"	f
tagbar#currenttag	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#currenttag(fmt, default, ...) abort$/;"	f
tagbar#gettypeconfig	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#gettypeconfig(type) abort$/;"	f
tagbar#getusertypes	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#getusertypes() abort$/;"	f
term_obj.close	bundle/conque_2.3/autoload/conque_term.vim	/^function! s:term_obj.close() dict " {{{$/;"	f
term_obj.focus	bundle/conque_2.3/autoload/conque_term.vim	/^function! s:term_obj.focus() dict " {{{$/;"	f
term_obj.read	bundle/conque_2.3/autoload/conque_term.vim	/^function! s:term_obj.read(...) dict " {{{$/;"	f
term_obj.set_callback	bundle/conque_2.3/autoload/conque_term.vim	/^function! s:term_obj.set_callback(callback_func) dict " {{{$/;"	f
term_obj.write	bundle/conque_2.3/autoload/conque_term.vim	/^function! s:term_obj.write(...) dict " {{{$/;"	f
term_obj.writeln	bundle/conque_2.3/autoload/conque_term.vim	/^function! s:term_obj.writeln(...) dict " {{{$/;"	f
throw	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:throw(string) abort$/;"	f
timerBegin	bundle/L9/plugin/l9.vim	/^  function s:timerBegin(tag)$/;"	f
timerDump	bundle/L9/plugin/l9.vim	/^  function s:timerDump()$/;"	f
timerStop	bundle/L9/plugin/l9.vim	/^  function s:timerStop()$/;"	f
toLowerForIgnoringCase	bundle/FuzzyFinder/autoload/fuf.vim	/^function s:toLowerForIgnoringCase(str)$/;"	f
to_str	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:CHAR_INFO	access:public
to_str	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:CHAR_UNION	access:public
to_str	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:CONSOLE_SCREEN_BUFFER_INFO	access:public
to_str	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:COORD	access:public
to_str	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:FOCUS_EVENT_RECORD	access:public
to_str	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:INPUT_RECORD	access:public
to_str	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:INPUT_UNION	access:public
to_str	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:KEY_EVENT_RECORD	access:public
to_str	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:MEMORY_BASIC_INFORMATION	access:public
to_str	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:MENU_EVENT_RECORD	access:public
to_str	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:MOUSE_EVENT_RECORD	access:public
to_str	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:PROCESS_INFORMATION	access:public
to_str	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:SECURITY_ATTRIBUTES	access:public
to_str	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:SMALL_RECT	access:public
to_str	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:STARTUPINFO	access:public
to_str	bundle/conque_2.3/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:WINDOW_BUFFER_SIZE_RECORD	access:public
toggle	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:toggle(dir)$/;"	f
toggleIgnoreFilter	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:toggleIgnoreFilter()$/;"	f
toggleShowBookmarks	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:toggleShowBookmarks()$/;"	f
toggleShowFiles	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:toggleShowFiles()$/;"	f
toggleShowHidden	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:toggleShowHidden()$/;"	f
toggleZoom	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:toggleZoom()$/;"	f
top	bundle/conque_2.3/autoload/conque_term/conque.py	/^    top = 1 # relative to top of screen$/;"	v	class:Conque
top	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    top = 0$/;"	v	class:ConqueSoleSubprocess
translate_color	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    def translate_color(self, attr):$/;"	m	class:ConqueSole	access:public
treeExistsForBuf	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:treeExistsForBuf()$/;"	f
treeExistsForTab	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:treeExistsForTab()$/;"	f
truncate	bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^function! s:truncate(str, width)"{{{$/;"	f
truncate	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:truncate(str, width)"{{{$/;"	f
truncate_smart	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^function! s:truncate_smart(str, max, footer_width, separator)"{{{$/;"	f
u	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^def u(str_val, str_encoding='utf-8', errors='strict'):$/;"	f	access:public
uchr	bundle/conque_2.3/autoload/conque_term/conque_globals.py	/^def uchr(str):$/;"	f	access:public
uniq	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:uniq(list, ...)$/;"	f
unique	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:unique(list)$/;"	f
unite#sources#file_include#define	bundle/neocomplcache/autoload/unite/sources/file_include.vim	/^function! unite#sources#file_include#define()$/;"	f
unite#sources#neocomplcache#define	bundle/neocomplcache/autoload/unite/sources/neocomplcache.vim	/^function! unite#sources#neocomplcache#define() "{{{$/;"	f
unite#sources#neocomplcache#start_complete	bundle/neocomplcache/autoload/unite/sources/neocomplcache.vim	/^function! unite#sources#neocomplcache#start_complete() "{{{$/;"	f
unite#sources#neocomplcache#start_quick_match	bundle/neocomplcache/autoload/unite/sources/neocomplcache.vim	/^function! unite#sources#neocomplcache#start_quick_match() "{{{$/;"	f
unite_patterns	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! s:unite_patterns(pattern_var, filetype)"{{{$/;"	f
unlink_file	bundle/colorselector/Makefile	/^unlink_file = \\$/;"	m
unload	bundle/neocomplcache/autoload/vital/_9813ec6.vim	/^function! s:unload()$/;"	f
unshift	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:unshift(list, val)$/;"	f
unwrap_tables	bundle/conque_2.3/autoload/conque_term/conque.py	/^    unwrap_tables = True$/;"	v	class:Conque
upDir	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:upDir(keepState)$/;"	f
upDirCurrentRootClosed	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:upDirCurrentRootClosed()$/;"	f
upDirCurrentRootOpen	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:upDirCurrentRootOpen()$/;"	f
updateBufTimes	bundle/FuzzyFinder/autoload/fuf/buffer.vim	/^function s:updateBufTimes()$/;"	f
updateData	bundle/FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:updateData()$/;"	f
updateInfo	bundle/FuzzyFinder/autoload/fuf/mrucmd.vim	/^function s:updateInfo(cmd)$/;"	f
updateList	bundle/colorselector/plugin/colorselector.vim	/^fun! s:updateList()$/;"	f
update_window_size	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def update_window_size(self, force=False):$/;"	m	class:Conque	access:public
update_window_size	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    def update_window_size(self):$/;"	m	class:ConqueSole	access:public
vital#	bundle/neocomplcache/autoload/vital/_9813ec6.vim	/^function! vital#{s:self_version}#new()$/;"	f
vital#of	bundle/neocomplcache/autoload/vital.vim	/^function! vital#of(name)$/;"	f
warn	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:warn(str)$/;"	f
wcswidth	bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^  function! s:wcswidth(str)"{{{$/;"	f
wcswidth	bundle/neocomplcache/autoload/vital/_9813ec6/prelude.vim	/^  function! s:wcswidth(str)"{{{$/;"	f
wcwidth	bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^  function! s:wcwidth(str)"{{{$/;"	f
wcwidth	bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^  function! s:wcwidth(ucs)"{{{$/;"	f
window_bottom	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    window_bottom = None$/;"	v	class:ConqueSole
window_height	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    window_height = 40$/;"	v	class:ConqueSoleSubprocess
window_resize	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^    def window_resize(self, lines, columns):$/;"	m	class:ConqueSoleWrapper	access:public
window_resize	bundle/conque_2.3/autoload/conque_term/conque_subprocess.py	/^    def window_resize(self, lines, columns):$/;"	m	class:ConqueSubprocess	access:public
window_top	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    window_top = None$/;"	v	class:ConqueSole
window_width	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    window_width = 160$/;"	v	class:ConqueSoleSubprocess
winexec	bundle/tagbar/autoload/tagbar.vim	/^function! s:winexec(cmd) abort$/;"	f
word_caching	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:word_caching(srcname)"{{{$/;"	f
working_columns	bundle/conque_2.3/autoload/conque_term/conque.py	/^    working_columns = 80 # can be changed by CSI ? 3 l\/h$/;"	v	class:Conque
working_lines	bundle/conque_2.3/autoload/conque_term/conque.py	/^    working_lines = 24 # can be changed by CSI r$/;"	v	class:Conque
wrap_cursor	bundle/conque_2.3/autoload/conque_term/conque.py	/^    wrap_cursor = False$/;"	v	class:Conque
write	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def write(self, input, set_cursor=True, read=True):$/;"	m	class:Conque	access:public
write	bundle/conque_2.3/autoload/conque_term/conque_sole_shared_memory.py	/^    def write(self, text, start=0):$/;"	m	class:ConqueSoleSharedMemory	access:public
write	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    def write(self):$/;"	m	class:ConqueSoleSubprocess	access:public
write	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^    def write(self, text):$/;"	m	class:ConqueSoleWrapper	access:public
write	bundle/conque_2.3/autoload/conque_term/conque_subprocess.py	/^    def write(self, input):$/;"	m	class:ConqueSubprocess	access:public
write_buffered_ord	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def write_buffered_ord(self, chr):$/;"	m	class:Conque	access:public
write_expr	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def write_expr(self, expr, set_cursor=True, read=True):$/;"	m	class:Conque	access:public
write_latin1	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def write_latin1(self, input, set_cursor=True, read=True):$/;"	m	class:Conque	access:public
write_ord	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def write_ord(self, input, set_cursor=True, read=True):$/;"	m	class:Conque	access:public
write_plain	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    def write_plain(self, text):$/;"	m	class:ConqueSoleSubprocess	access:public
write_vk	bundle/conque_2.3/autoload/conque_term/conque_sole.py	/^    def write_vk(self, vk_code):$/;"	m	class:ConqueSole	access:public
write_vk	bundle/conque_2.3/autoload/conque_term/conque_sole_subprocess.py	/^    def write_vk(self, vk_code):$/;"	m	class:ConqueSoleSubprocess	access:public
write_vk	bundle/conque_2.3/autoload/conque_term/conque_sole_wrapper.py	/^    def write_vk(self, vk_code):$/;"	m	class:ConqueSoleWrapper	access:public
writefile	bundle/neocomplcache/autoload/vital/_9813ec6/system/cache.vim	/^function! s:writefile(cache_dir, filename, list)$/;"	f
xterm_to_rgb	bundle/conque_2.3/autoload/conque_term/conque.py	/^    def xterm_to_rgb(self, color_code):$/;"	m	class:Conque	access:public
zenburn_ctags	colors/zenburn.vim	/^    let _zenburn_ctags = 1$/;"	v
zip	bundle/neocomplcache/autoload/vital/_9813ec6/data/list.vim	/^function! s:zip(...)$/;"	f
